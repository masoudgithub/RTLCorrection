//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Mar 31 10:13:38 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
bitoff_local_mem_dual_port    1                             
inData_local_mem_dual_port    1                             
main_0_Ki_local_mem_dual_port 1                             
main_0_Pi_local_mem_dual_port 1                             
main_0_so_local_mem_dual_port 2                             
mem_dual_port                 1                             
outData_local_mem_dual_port   1                             
signed_add_16                 1                             
signed_add_32                 15                            
signed_multiply_32            15                            
signed_subtract_16            1                             
signed_subtract_32            1                             
--------------------------------------------------------------------------------
Function: legup_memset_2_i64
--------------------------------------------------------------------------------
Function unit type:           Number Required               
legup_memset_2_i64_0_1_local_mem_dual_port1                             
legup_memset_2_i64_0_2_local_mem_dual_port1                             
legup_memset_2_i64_0_3_local_mem_dual_port1                             
legup_memset_2_i64_0_c_local_mem_dual_port2                             
legup_memset_2_i64_0_s_local_mem_dual_port2                             
signed_add_32                 1                             
signed_add_64                 1                             

Running Bipartite Weighted Matching on function: legup_memset_2_i64
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %m, i8** %1, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %c1, i8* %2, align ... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %n, i64* %3, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  %13 = load i8** %1, align 4 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  %13 = load i8** %1, align 4 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load i8** %1, align 4 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i8* %2, align 1 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %15 = load i64* %3, align 8 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %15 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load i64* %3, align 8 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %16, i64* %3, alig... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %16, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %16, i64* %3, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %5, i16* %c, align... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %5, i16* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %5, i16* %c, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %14, i16** %s, al... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %14, i16** %s, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16* %14, i16** %s, al... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %6 = load i16* %c, align 2 (idx: 0)             100                           100                           
  %9 = load i16* %c, align 2 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %6 = load i16* %c, align 2 (idx: 0)             1                             0                             
  %9 = load i16* %c, align 2 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i16* %c, align 2 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
  %9 = load i16* %c, align 2 (idx: 1) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %12, i16* %c, alig... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %12, i16* %c, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %12, i16* %c, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %18 = load i64* %3, align 8 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %18 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load i64* %3, align 8 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %19, i64* %3, alig... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %19, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %19, i64* %3, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: signed_add_64
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_64_0
  %19 = add i64 %18, -1 (idx: 0)                  100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_64_0
  %19 = add i64 %18, -1 (idx: 0)                  1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = add i64 %18, -1 (idx: 0) -> legup_memset_2_i64_signed_add_64_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %22 = load i16* %c, align 2 (idx: 0)            100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %22 = load i16* %c, align 2 (idx: 0)            1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i16* %c, align 2 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  %23 = load i16** %s, align 4 (idx: 0)           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  %23 = load i16** %s, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i16** %s, align 4 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %24, i16** %s, al... (idx: 0)        100                           100                           
  store i16 %22, i16* %23, ali... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %24, i16** %s, al... (idx: 0)        1                             0                             
  store i16 %22, i16* %23, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16* %24, i16** %s, al... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 3)
  store i16 %22, i16* %23, ali... (idx: 1) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_32_0
  %gep = add i32 %gep_int, 2 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_32_0
  %gep = add i32 %gep_int, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, 2 (idx: 0) -> legup_memset_2_i64_signed_add_32_0 (mux inputs: 1)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %5 = add nsw i32 %i.05, 1 (idx: 0)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %5 = add nsw i32 %i.05, 1 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = add nsw i32 %i.05, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: inData_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_inData_local_mem_dual_port_0
  %3 = load i16* %2, align 2, ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_inData_local_mem_dual_port_0
  %3 = load i16* %2, align 2, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load i16* %2, align 2, ... (idx: 0) -> main_inData_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep = add i32 %gep_int, %ge... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep3 = add i32 %gep_int1, %... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep = add i32 %gep_int, %ge... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep3 = add i32 %gep_int1, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 3)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %3, i16* %4, align... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %3, i16* %4, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %3, i16* %4, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__8
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %10 = load i16* %9, align 2,... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %10 = load i16* %9, align 2,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i16* %9, align 2,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__8
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep7 = add i32 %gep_int5, %... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep7 = add i32 %gep_int5, %... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep7 = add i32 %gep_int5, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__12
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %14 = sub i16 0, %10 (idx: 0)                   100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %14 = sub i16 0, %10 (idx: 0)                   1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = sub i16 0, %10 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 1)
State: LEGUP_F_main_BB_gsm_absexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %17 = add nsw i32 %k.029.i, ... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %17 = add nsw i32 %k.029.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = add nsw i32 %k.029.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__33
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %36 = load i8* %35, align 1,... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %36 = load i8* %35, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i8* %35, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__33
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep10 = add i32 %gep_int9, ... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep10 = add i32 %gep_int9, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep10 = add i32 %gep_int9, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__33
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %38 = add nsw i32 %37, -1 (idx: 0)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %38 = add nsw i32 %37, -1 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = add nsw i32 %37, -1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__39
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %43 = load i8* %42, align 1,... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %43 = load i8* %42, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = load i8* %42, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__39
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep12 = add i32 %gep_int11,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep12 = add i32 %gep_int11,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep12 = add i32 %gep_int11,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__39
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %45 = add nuw nsw i32 %44, 7 (idx: 0)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %45 = add nuw nsw i32 %44, 7 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = add nuw nsw i32 %44, 7 (idx: 0) -> main_signed_add_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__49
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %53 = load i8* %52, align 1,... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %53 = load i8* %52, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load i8* %52, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__49
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep14 = add i32 %gep_int13,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep14 = add i32 %gep_int13,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep14 = add i32 %gep_int13,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB__49
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %55 = add nuw nsw i32 %54, 1... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %55 = add nuw nsw i32 %54, 1... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = add nuw nsw i32 %54, 1... (idx: 0) -> main_signed_add_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__56
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %59 = load i8* %58, align 1,... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %59 = load i8* %58, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = load i8* %58, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__56
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep16 = add i32 %gep_int15,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep16 = add i32 %gep_int15,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep16 = add i32 %gep_int15,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB__56
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %61 = add nuw nsw i32 %60, 2... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %61 = add nuw nsw i32 %60, 2... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %61 = add nuw nsw i32 %60, 2... (idx: 0) -> main_signed_add_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB__62
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %sext.off.i = add i32 %sext.... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %sext.off.i = add i32 %sext.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %sext.off.i = add i32 %sext.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 19)
State: LEGUP_F_main_BB__62
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %63 = sub i32 4, %.01.i.i1 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %63 = sub i32 4, %.01.i.i1 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = sub i32 4, %.01.i.i1 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %66 = add nsw i32 %phitmp.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %66 = add nsw i32 %phitmp.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = add nsw i32 %phitmp.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
State: LEGUP_F_main_BB_preheader6splitusi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %72 = load i16* %71, align 2... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %72 = load i16* %71, align 2... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load i16* %71, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheader6splitusi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep19 = add i32 %gep_int17,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep19 = add i32 %gep_int17,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep19 = add i32 %gep_int17,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
State: LEGUP_F_main_BB__74
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %76 = mul nsw i32 %75, %70 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %76 = mul nsw i32 %75, %70 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = mul nsw i32 %75, %70 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__74
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %77 = add nsw i32 %76, 16384 (idx: 0)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %77 = add nsw i32 %76, 16384 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = add nsw i32 %76, 16384 (idx: 0) -> main_signed_add_32_0 (mux inputs: 23)
State: LEGUP_F_main_BB_gsm_mult_rexitusi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %.0.i.us.i, i16* %... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %.0.i.us.i, i16* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %.0.i.us.i, i16* %... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_gsm_mult_rexitusi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %80 = add nsw i32 %k.128.us.... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %80 = add nsw i32 %k.128.us.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = add nsw i32 %k.128.us.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 24)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %88 = add nsw i32 %k.128.i, ... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %88 = add nsw i32 %k.128.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = add nsw i32 %k.128.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %82 = load i16* %81, align 2... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %82 = load i16* %81, align 2... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i16* %81, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep22 = add i32 %gep_int20,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep22 = add i32 %gep_int20,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep22 = add i32 %gep_int20,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 27)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %84 = mul nsw i32 %83, %70 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %84 = mul nsw i32 %83, %70 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = mul nsw i32 %83, %70 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %87, i16* %81, ali... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %87, i16* %81, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %87, i16* %81, ali... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %85 = add nsw i32 %84, 16384 (idx: 0)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %85 = add nsw i32 %84, 16384 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = add nsw i32 %84, 16384 (idx: 0) -> main_signed_add_32_0 (mux inputs: 28)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %90 = load i16* %7, align 2,... (idx: 0)        100                           100                           
  %94 = load i16* %93, align 2... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %90 = load i16* %7, align 2,... (idx: 0)        1                             0                             
  %94 = load i16* %93, align 2... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i16* %7, align 2,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 8)
  %94 = load i16* %93, align 2... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep24 = add i32 %gep_int23,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep26 = add i32 %gep_int25,... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep28 = add i32 %gep_int27,... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep30 = add i32 %gep_int29,... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep32 = add i32 %gep_int31,... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep34 = add i32 %gep_int33,... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep36 = add i32 %gep_int35,... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep24 = add i32 %gep_int23,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep26 = add i32 %gep_int25,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep28 = add i32 %gep_int27,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep30 = add i32 %gep_int29,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep32 = add i32 %gep_int31,... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep34 = add i32 %gep_int33,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep36 = add i32 %gep_int35,... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep24 = add i32 %gep_int23,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 29)
  %gep26 = add i32 %gep_int25,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 3)
  %gep28 = add i32 %gep_int27,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 1)
  %gep30 = add i32 %gep_int29,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 1)
  %gep32 = add i32 %gep_int31,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 1)
  %gep34 = add i32 %gep_int33,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 1)
  %gep36 = add i32 %gep_int35,... (idx: 6) -> main_signed_add_32_6 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %99 = load i16* %98, align 2... (idx: 0)        100                           100                           
  %107 = load i16* %106, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %99 = load i16* %98, align 2... (idx: 0)        1                             0                             
  %107 = load i16* %106, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i16* %98, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 9)
  %107 = load i16* %106, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %92 = mul nsw i32 %91, %91 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %96 = mul nsw i32 %95, %95 (idx: 1)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %92 = mul nsw i32 %91, %91 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %96 = mul nsw i32 %95, %95 (idx: 1)             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = mul nsw i32 %91, %91 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 4)
  %96 = mul nsw i32 %95, %95 (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %117 = load i16* %116, align... (idx: 0)        100                           100                           
  %129 = load i16* %128, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %117 = load i16* %116, align... (idx: 0)        1                             0                             
  %129 = load i16* %128, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i16* %116, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 10)
  %129 = load i16* %128, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %97 = add nuw nsw i32 %96, %... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %103 = add nsw i32 %100, %91 (idx: 1)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %97 = add nuw nsw i32 %96, %... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %103 = add nsw i32 %100, %91 (idx: 1)           0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %97 = add nuw nsw i32 %96, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 31)
  %103 = add nsw i32 %100, %91 (idx: 1) -> main_signed_add_32_1 (mux inputs: 5)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %101 = mul nsw i32 %100, %10... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %104 = mul nsw i32 %95, %103 (idx: 1)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %105 = mul nsw i32 %91, %100 (idx: 2)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %109 = mul nsw i32 %108, %10... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %111 = mul nsw i32 %100, %10... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %113 = mul nsw i32 %95, %108 (idx: 5)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %115 = mul nsw i32 %91, %108 (idx: 6)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %101 = mul nsw i32 %100, %10... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %104 = mul nsw i32 %95, %103 (idx: 1)           0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %105 = mul nsw i32 %91, %100 (idx: 2)           0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %109 = mul nsw i32 %108, %10... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %111 = mul nsw i32 %100, %10... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %113 = mul nsw i32 %95, %108 (idx: 5)           0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %115 = mul nsw i32 %91, %108 (idx: 6)           0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %101 = mul nsw i32 %100, %10... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 5)
  %104 = mul nsw i32 %95, %103 (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 2)
  %105 = mul nsw i32 %91, %100 (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 2)
  %109 = mul nsw i32 %108, %10... (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 1)
  %111 = mul nsw i32 %100, %10... (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 2)
  %113 = mul nsw i32 %95, %108 (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 2)
  %115 = mul nsw i32 %91, %108 (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %143 = load i16* %142, align... (idx: 0)        100                           100                           
  %159 = load i16* %158, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %143 = load i16* %142, align... (idx: 0)        1                             0                             
  %159 = load i16* %158, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load i16* %142, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 11)
  %159 = load i16* %158, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %102 = add nuw nsw i32 %101,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %110 = add nuw nsw i32 %109,... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %112 = add nsw i32 %111, %10... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %114 = add nsw i32 %113, %10... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %102 = add nuw nsw i32 %101,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %110 = add nuw nsw i32 %109,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %112 = add nsw i32 %111, %10... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %114 = add nsw i32 %113, %10... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = add nuw nsw i32 %101,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 33)
  %110 = add nuw nsw i32 %109,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 7)
  %112 = add nsw i32 %111, %10... (idx: 2) -> main_signed_add_32_2 (mux inputs: 3)
  %114 = add nsw i32 %113, %10... (idx: 3) -> main_signed_add_32_3 (mux inputs: 3)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %119 = mul nsw i32 %118, %11... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %121 = mul nsw i32 %108, %11... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %123 = mul nsw i32 %100, %11... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %125 = mul nsw i32 %95, %118 (idx: 3)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %127 = mul nsw i32 %91, %118 (idx: 4)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %131 = mul nsw i32 %130, %13... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %133 = mul nsw i32 %118, %13... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %135 = mul nsw i32 %108, %13... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %137 = mul nsw i32 %100, %13... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %139 = mul nsw i32 %95, %130 (idx: 9)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %141 = mul nsw i32 %91, %130 (idx: 10)          100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %119 = mul nsw i32 %118, %11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %121 = mul nsw i32 %108, %11... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %123 = mul nsw i32 %100, %11... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %125 = mul nsw i32 %95, %118 (idx: 3)           0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %127 = mul nsw i32 %91, %118 (idx: 4)           0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %131 = mul nsw i32 %130, %13... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %133 = mul nsw i32 %118, %13... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %135 = mul nsw i32 %108, %13... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %137 = mul nsw i32 %100, %13... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %139 = mul nsw i32 %95, %130 (idx: 9)           0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %141 = mul nsw i32 %91, %130 (idx: 10)          0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = mul nsw i32 %118, %11... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 6)
  %121 = mul nsw i32 %108, %11... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 4)
  %123 = mul nsw i32 %100, %11... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 3)
  %125 = mul nsw i32 %95, %118 (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 3)
  %127 = mul nsw i32 %91, %118 (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 4)
  %131 = mul nsw i32 %130, %13... (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 3)
  %133 = mul nsw i32 %118, %13... (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 4)
  %135 = mul nsw i32 %108, %13... (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 2)
  %137 = mul nsw i32 %100, %13... (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 2)
  %139 = mul nsw i32 %95, %130 (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 2)
  %141 = mul nsw i32 %91, %130 (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %120 = add nuw nsw i32 %119,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %122 = add nsw i32 %121, %11... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %124 = add nsw i32 %123, %11... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %126 = add nsw i32 %125, %11... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %132 = add nuw nsw i32 %131,... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %134 = add nsw i32 %133, %12... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %136 = add nsw i32 %135, %12... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %138 = add nsw i32 %137, %12... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %140 = add nsw i32 %139, %12... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %120 = add nuw nsw i32 %119,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %122 = add nsw i32 %121, %11... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %124 = add nsw i32 %123, %11... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %126 = add nsw i32 %125, %11... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %132 = add nuw nsw i32 %131,... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %134 = add nsw i32 %133, %12... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %136 = add nsw i32 %135, %12... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %138 = add nsw i32 %137, %12... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %140 = add nsw i32 %139, %12... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = add nuw nsw i32 %119,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 35)
  %122 = add nsw i32 %121, %11... (idx: 1) -> main_signed_add_32_1 (mux inputs: 9)
  %124 = add nsw i32 %123, %11... (idx: 2) -> main_signed_add_32_2 (mux inputs: 5)
  %126 = add nsw i32 %125, %11... (idx: 3) -> main_signed_add_32_3 (mux inputs: 5)
  %132 = add nuw nsw i32 %131,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 3)
  %134 = add nsw i32 %133, %12... (idx: 5) -> main_signed_add_32_5 (mux inputs: 3)
  %136 = add nsw i32 %135, %12... (idx: 6) -> main_signed_add_32_6 (mux inputs: 3)
  %138 = add nsw i32 %137, %12... (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
  %140 = add nsw i32 %139, %12... (idx: 8) -> main_signed_add_32_8 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %145 = mul nsw i32 %144, %14... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %147 = mul nsw i32 %130, %14... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %149 = mul nsw i32 %118, %14... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %151 = mul nsw i32 %108, %14... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %153 = mul nsw i32 %100, %14... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %155 = mul nsw i32 %95, %144 (idx: 5)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %157 = mul nsw i32 %91, %144 (idx: 6)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %161 = mul nsw i32 %160, %16... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %163 = mul nsw i32 %144, %16... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %165 = mul nsw i32 %130, %16... (idx: 9)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %167 = mul nsw i32 %118, %16... (idx: 10)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %169 = mul nsw i32 %108, %16... (idx: 11)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %171 = mul nsw i32 %100, %16... (idx: 12)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %173 = mul nsw i32 %95, %160 (idx: 13)          100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %175 = mul nsw i32 %91, %160 (idx: 14)          100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %145 = mul nsw i32 %144, %14... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %147 = mul nsw i32 %130, %14... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %149 = mul nsw i32 %118, %14... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %151 = mul nsw i32 %108, %14... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %153 = mul nsw i32 %100, %14... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %155 = mul nsw i32 %95, %144 (idx: 5)           0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %157 = mul nsw i32 %91, %144 (idx: 6)           0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %161 = mul nsw i32 %160, %16... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %163 = mul nsw i32 %144, %16... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %165 = mul nsw i32 %130, %16... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %167 = mul nsw i32 %118, %16... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %169 = mul nsw i32 %108, %16... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %171 = mul nsw i32 %100, %16... (idx: 12)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %173 = mul nsw i32 %95, %160 (idx: 13)          0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %175 = mul nsw i32 %91, %160 (idx: 14)          0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = mul nsw i32 %144, %14... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 7)
  %147 = mul nsw i32 %130, %14... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 6)
  %149 = mul nsw i32 %118, %14... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 4)
  %151 = mul nsw i32 %108, %14... (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 4)
  %153 = mul nsw i32 %100, %14... (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 5)
  %155 = mul nsw i32 %95, %144 (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 4)
  %157 = mul nsw i32 %91, %144 (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 5)
  %161 = mul nsw i32 %160, %16... (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 3)
  %163 = mul nsw i32 %144, %16... (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 4)
  %165 = mul nsw i32 %130, %16... (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 3)
  %167 = mul nsw i32 %118, %16... (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 4)
  %169 = mul nsw i32 %108, %16... (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 2)
  %171 = mul nsw i32 %100, %16... (idx: 12) -> main_signed_multiply_32_12 (mux inputs: 2)
  %173 = mul nsw i32 %95, %160 (idx: 13) -> main_signed_multiply_32_13 (mux inputs: 2)
  %175 = mul nsw i32 %91, %160 (idx: 14) -> main_signed_multiply_32_14 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %146 = add nuw nsw i32 %145,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %148 = add nsw i32 %147, %13... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %150 = add nsw i32 %149, %13... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %152 = add nsw i32 %151, %13... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %154 = add nsw i32 %153, %14... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %156 = add nsw i32 %155, %14... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %162 = add nsw i32 %161, %14... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %164 = add nsw i32 %163, %14... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %166 = add nsw i32 %165, %15... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %168 = add nsw i32 %167, %15... (idx: 9)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %170 = add nsw i32 %169, %15... (idx: 10)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %172 = add nsw i32 %171, %15... (idx: 11)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %174 = add nsw i32 %173, %15... (idx: 12)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %146 = add nuw nsw i32 %145,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %148 = add nsw i32 %147, %13... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %150 = add nsw i32 %149, %13... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %152 = add nsw i32 %151, %13... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %154 = add nsw i32 %153, %14... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %156 = add nsw i32 %155, %14... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %162 = add nsw i32 %161, %14... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %164 = add nsw i32 %163, %14... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %166 = add nsw i32 %165, %15... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %168 = add nsw i32 %167, %15... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %170 = add nsw i32 %169, %15... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %172 = add nsw i32 %171, %15... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %174 = add nsw i32 %173, %15... (idx: 12)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %146 = add nuw nsw i32 %145,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 37)
  %148 = add nsw i32 %147, %13... (idx: 1) -> main_signed_add_32_1 (mux inputs: 11)
  %150 = add nsw i32 %149, %13... (idx: 2) -> main_signed_add_32_2 (mux inputs: 7)
  %152 = add nsw i32 %151, %13... (idx: 3) -> main_signed_add_32_3 (mux inputs: 7)
  %154 = add nsw i32 %153, %14... (idx: 4) -> main_signed_add_32_4 (mux inputs: 5)
  %156 = add nsw i32 %155, %14... (idx: 5) -> main_signed_add_32_5 (mux inputs: 5)
  %162 = add nsw i32 %161, %14... (idx: 6) -> main_signed_add_32_6 (mux inputs: 5)
  %164 = add nsw i32 %163, %14... (idx: 7) -> main_signed_add_32_7 (mux inputs: 4)
  %166 = add nsw i32 %165, %15... (idx: 8) -> main_signed_add_32_8 (mux inputs: 4)
  %168 = add nsw i32 %167, %15... (idx: 9) -> main_signed_add_32_9 (mux inputs: 2)
  %170 = add nsw i32 %169, %15... (idx: 10) -> main_signed_add_32_10 (mux inputs: 2)
  %172 = add nsw i32 %171, %15... (idx: 11) -> main_signed_add_32_11 (mux inputs: 2)
  %174 = add nsw i32 %173, %15... (idx: 12) -> main_signed_add_32_12 (mux inputs: 2)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %197 = load i16* %196, align... (idx: 0)        100                           100                           
  %205 = load i16* %204, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %197 = load i16* %196, align... (idx: 0)        1                             0                             
  %205 = load i16* %204, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %197 = load i16* %196, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 12)
  %205 = load i16* %204, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep38 = add i32 %gep_int37,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep40 = add i32 %gep_int39,... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep42 = add i32 %gep_int41,... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep44 = add i32 %gep_int43,... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep46 = add i32 %gep_int45,... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep48 = add i32 %gep_int47,... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep50 = add i32 %gep_int49,... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep52 = add i32 %gep_int51,... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %239 = add nsw i32 %i.010.i,... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep38 = add i32 %gep_int37,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep40 = add i32 %gep_int39,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep42 = add i32 %gep_int41,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep44 = add i32 %gep_int43,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep46 = add i32 %gep_int45,... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep48 = add i32 %gep_int47,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep50 = add i32 %gep_int49,... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep52 = add i32 %gep_int51,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %239 = add nsw i32 %i.010.i,... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep38 = add i32 %gep_int37,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 38)
  %gep40 = add i32 %gep_int39,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 12)
  %gep42 = add i32 %gep_int41,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 8)
  %gep44 = add i32 %gep_int43,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 8)
  %gep46 = add i32 %gep_int45,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 6)
  %gep48 = add i32 %gep_int47,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 6)
  %gep50 = add i32 %gep_int49,... (idx: 6) -> main_signed_add_32_6 (mux inputs: 6)
  %gep52 = add i32 %gep_int51,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 5)
  %239 = add nsw i32 %i.010.i,... (idx: 8) -> main_signed_add_32_8 (mux inputs: 5)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %210 = load i16* %209, align... (idx: 0)        100                           100                           
  %215 = load i16* %214, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %210 = load i16* %209, align... (idx: 0)        1                             0                             
  %215 = load i16* %214, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %210 = load i16* %209, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 13)
  %215 = load i16* %214, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %199 = mul nsw i32 %198, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %202 = mul nsw i32 %201, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %207 = mul nsw i32 %206, %19... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %199 = mul nsw i32 %198, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %202 = mul nsw i32 %201, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %207 = mul nsw i32 %206, %19... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %199 = mul nsw i32 %198, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 8)
  %202 = mul nsw i32 %201, %19... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 8)
  %207 = mul nsw i32 %206, %19... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 6)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %220 = load i16* %219, align... (idx: 0)        100                           100                           
  %225 = load i16* %224, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %220 = load i16* %219, align... (idx: 0)        1                             0                             
  %225 = load i16* %224, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = load i16* %219, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 14)
  %225 = load i16* %224, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %200 = add nsw i32 %199, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %203 = add nsw i32 %202, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %208 = add nsw i32 %207, %19... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %200 = add nsw i32 %199, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %203 = add nsw i32 %202, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %208 = add nsw i32 %207, %19... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %200 = add nsw i32 %199, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 40)
  %203 = add nsw i32 %202, %19... (idx: 1) -> main_signed_add_32_1 (mux inputs: 14)
  %208 = add nsw i32 %207, %19... (idx: 2) -> main_signed_add_32_2 (mux inputs: 10)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %212 = mul nsw i32 %211, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %217 = mul nsw i32 %216, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %212 = mul nsw i32 %211, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %217 = mul nsw i32 %216, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %212 = mul nsw i32 %211, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 9)
  %217 = mul nsw i32 %216, %19... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 9)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %230 = load i16* %229, align... (idx: 0)        100                           100                           
  %235 = load i16* %234, align... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %230 = load i16* %229, align... (idx: 0)        1                             0                             
  %235 = load i16* %234, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %230 = load i16* %229, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 15)
  %235 = load i16* %234, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %213 = add nsw i32 %212, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %218 = add nsw i32 %217, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %213 = add nsw i32 %212, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %218 = add nsw i32 %217, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %213 = add nsw i32 %212, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 42)
  %218 = add nsw i32 %217, %19... (idx: 1) -> main_signed_add_32_1 (mux inputs: 16)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %222 = mul nsw i32 %221, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %227 = mul nsw i32 %226, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %222 = mul nsw i32 %221, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %227 = mul nsw i32 %226, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %222 = mul nsw i32 %221, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 10)
  %227 = mul nsw i32 %226, %19... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 10)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %223 = add nsw i32 %222, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %228 = add nsw i32 %227, %18... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %223 = add nsw i32 %222, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %228 = add nsw i32 %227, %18... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = add nsw i32 %222, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 44)
  %228 = add nsw i32 %227, %18... (idx: 1) -> main_signed_add_32_1 (mux inputs: 18)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %232 = mul nsw i32 %231, %19... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %237 = mul nsw i32 %236, %19... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %232 = mul nsw i32 %231, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %237 = mul nsw i32 %236, %19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %232 = mul nsw i32 %231, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 11)
  %237 = mul nsw i32 %236, %19... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 11)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %233 = add nsw i32 %232, %18... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %238 = add nsw i32 %237, %18... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %233 = add nsw i32 %232, %18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %238 = add nsw i32 %237, %18... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %233 = add nsw i32 %232, %18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 46)
  %238 = add nsw i32 %237, %18... (idx: 1) -> main_signed_add_32_1 (mux inputs: 20)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %244, i16* %.08.i,... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %244, i16* %.08.i,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %244, i16* %.08.i,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep54 = add i32 %gep_int53,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep54 = add i32 %gep_int53,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep54 = add i32 %gep_int53,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 47)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %.pre.i = load i16* %241, al... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %.pre.i = load i16* %241, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i = load i16* %241, al... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %246 = add nsw i32 %k.47.i, ... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %246 = add nsw i32 %k.47.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %246 = add nsw i32 %k.47.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 48)
State: LEGUP_F_main_BB__259
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %262 = load i8* %261, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %262 = load i8* %261, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %262 = load i8* %261, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__259
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep70 = add i32 %gep_int69,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep70 = add i32 %gep_int69,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep70 = add i32 %gep_int69,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 50)
State: LEGUP_F_main_BB__259
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %264 = add nsw i32 %263, -1 (idx: 0)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %264 = add nsw i32 %263, -1 (idx: 0)            1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %264 = add nsw i32 %263, -1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 51)
State: LEGUP_F_main_BB__265
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %269 = load i8* %268, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %269 = load i8* %268, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %269 = load i8* %268, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__265
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep72 = add i32 %gep_int71,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep72 = add i32 %gep_int71,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep72 = add i32 %gep_int71,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 53)
State: LEGUP_F_main_BB__265
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %271 = add nuw nsw i32 %270,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %271 = add nuw nsw i32 %270,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %271 = add nuw nsw i32 %270,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 54)
State: LEGUP_F_main_BB__275
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %279 = load i8* %278, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %279 = load i8* %278, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %279 = load i8* %278, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB__275
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep74 = add i32 %gep_int73,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep74 = add i32 %gep_int73,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep74 = add i32 %gep_int73,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 56)
State: LEGUP_F_main_BB__275
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %281 = add nuw nsw i32 %280,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %281 = add nuw nsw i32 %280,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %281 = add nuw nsw i32 %280,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 57)
State: LEGUP_F_main_BB__282
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %285 = load i8* %284, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %285 = load i8* %284, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %285 = load i8* %284, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__282
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep76 = add i32 %gep_int75,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep76 = add i32 %gep_int75,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep76 = add i32 %gep_int75,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB__282
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %287 = add nuw nsw i32 %286,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %287 = add nuw nsw i32 %286,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %287 = add nuw nsw i32 %286,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 60)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %294, i16* %316, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %294, i16* %316, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %294, i16* %316, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep78 = add i32 %gep_int77,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep80 = add i32 %gep_int79,... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep82 = add i32 %gep_int81,... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep84 = add i32 %gep_int83,... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep86 = add i32 %gep_int85,... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep88 = add i32 %gep_int87,... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep90 = add i32 %gep_int89,... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep93 = add i32 %gep_int92,... (idx: 7)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep95 = add i32 %gep_int94,... (idx: 8)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep97 = add i32 %gep_int96,... (idx: 9)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep99 = add i32 %gep_int98,... (idx: 10)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep101 = add i32 %gep_int10... (idx: 11)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep103 = add i32 %gep_int10... (idx: 12)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep105 = add i32 %gep_int10... (idx: 13)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep107 = add i32 %gep_int10... (idx: 14)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep78 = add i32 %gep_int77,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep80 = add i32 %gep_int79,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep82 = add i32 %gep_int81,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep84 = add i32 %gep_int83,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep86 = add i32 %gep_int85,... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep88 = add i32 %gep_int87,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep90 = add i32 %gep_int89,... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep93 = add i32 %gep_int92,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %gep95 = add i32 %gep_int94,... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %gep97 = add i32 %gep_int96,... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %gep99 = add i32 %gep_int98,... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %gep101 = add i32 %gep_int10... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %gep103 = add i32 %gep_int10... (idx: 12)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %gep105 = add i32 %gep_int10... (idx: 13)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %gep107 = add i32 %gep_int10... (idx: 14)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep78 = add i32 %gep_int77,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 61)
  %gep80 = add i32 %gep_int79,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 21)
  %gep82 = add i32 %gep_int81,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 11)
  %gep84 = add i32 %gep_int83,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 9)
  %gep86 = add i32 %gep_int85,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 7)
  %gep88 = add i32 %gep_int87,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 7)
  %gep90 = add i32 %gep_int89,... (idx: 6) -> main_signed_add_32_6 (mux inputs: 7)
  %gep93 = add i32 %gep_int92,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 6)
  %gep95 = add i32 %gep_int94,... (idx: 8) -> main_signed_add_32_8 (mux inputs: 6)
  %gep97 = add i32 %gep_int96,... (idx: 9) -> main_signed_add_32_9 (mux inputs: 3)
  %gep99 = add i32 %gep_int98,... (idx: 10) -> main_signed_add_32_10 (mux inputs: 3)
  %gep101 = add i32 %gep_int10... (idx: 11) -> main_signed_add_32_11 (mux inputs: 3)
  %gep103 = add i32 %gep_int10... (idx: 12) -> main_signed_add_32_12 (mux inputs: 3)
  %gep105 = add i32 %gep_int10... (idx: 13) -> main_signed_add_32_13 (mux inputs: 1)
  %gep107 = add i32 %gep_int10... (idx: 14) -> main_signed_add_32_14 (mux inputs: 1)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %297, i16* %317, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %297, i16* %317, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %297, i16* %317, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %300, i16* %318, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %300, i16* %318, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %300, i16* %318, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %303, i16* %319, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %303, i16* %319, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %303, i16* %319, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %306, i16* %320, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %306, i16* %320, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %306, i16* %320, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %309, i16* %321, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %309, i16* %321, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %309, i16* %321, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %312, i16* %322, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %312, i16* %322, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %312, i16* %322, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %291, i16* %323, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %291, i16* %323, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %291, i16* %323, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %294, i16* %324, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %294, i16* %324, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %294, i16* %324, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %297, i16* %325, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %297, i16* %325, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %297, i16* %325, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %300, i16* %326, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %300, i16* %326, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %300, i16* %326, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %303, i16* %327, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %303, i16* %327, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %303, i16* %327, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %306, i16* %328, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %306, i16* %328, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %306, i16* %328, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %309, i16* %329, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %309, i16* %329, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %309, i16* %329, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %312, i16* %330, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %312, i16* %330, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %312, i16* %330, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %315, i16* %331, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %315, i16* %331, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %315, i16* %331, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__335
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %337 = sub i16 0, %333 (idx: 0)                 100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %337 = sub i16 0, %333 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = sub i16 0, %333 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_absexiti9
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %339 = load i16* %323, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %339 = load i16* %323, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %339 = load i16* %323, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 0, i16* %.224.i, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 0, i16* %.224.i, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 0, i16* %.224.i, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep109 = add i32 %gep_int10... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %343 = add nsw i32 %i.425.i,... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep109 = add i32 %gep_int10... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %343 = add nsw i32 %i.425.i,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep109 = add i32 %gep_int10... (idx: 0) -> main_signed_add_32_0 (mux inputs: 62)
  %343 = add nsw i32 %i.425.i,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 22)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %..i1.i = sub nsw i32 %348, ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %..i1.i = sub nsw i32 %348, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %..i1.i = sub nsw i32 %348, ... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__353
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %354 = sub nsw i32 %351, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %354 = sub nsw i32 %351, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %354 = sub nsw i32 %351, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__359
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %360 = sub nsw i32 %357, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %360 = sub nsw i32 %357, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %360 = sub nsw i32 %357, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__365
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %366 = sub nsw i32 %363, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %366 = sub nsw i32 %363, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %366 = sub nsw i32 %363, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__371
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %372 = sub nsw i32 %369, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %372 = sub nsw i32 %369, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %372 = sub nsw i32 %369, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__377
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %378 = sub nsw i32 %375, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %378 = sub nsw i32 %375, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %378 = sub nsw i32 %375, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__383
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %384 = sub nsw i32 %381, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %384 = sub nsw i32 %381, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %384 = sub nsw i32 %381, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB__389
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %390 = sub nsw i32 %387, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %390 = sub nsw i32 %387, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %390 = sub nsw i32 %387, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__395
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %396 = sub nsw i32 %393, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %396 = sub nsw i32 %393, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %396 = sub nsw i32 %393, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__401
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %402 = sub nsw i32 %399, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %402 = sub nsw i32 %399, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %402 = sub nsw i32 %399, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB__407
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %408 = sub nsw i32 %405, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %408 = sub nsw i32 %405, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %408 = sub nsw i32 %405, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB__413
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %414 = sub nsw i32 %411, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %414 = sub nsw i32 %411, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %414 = sub nsw i32 %411, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__419
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %420 = sub nsw i32 %417, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %420 = sub nsw i32 %417, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %420 = sub nsw i32 %417, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 16)
State: LEGUP_F_main_BB__425
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %426 = sub nsw i32 %423, %34... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %426 = sub nsw i32 %423, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %426 = sub nsw i32 %423, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB_gsm_divexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %431, i16* %.128.i... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %431, i16* %.128.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %431, i16* %.128.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_gsm_divexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %432 = load i16* %324, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %432 = load i16* %324, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %432 = load i16* %324, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__434
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %435, i16* %.128.i... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %435, i16* %.128.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %435, i16* %.128.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__434
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %435 = sub i16 0, %431 (idx: 0)                 100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %435 = sub i16 0, %431 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %435 = sub i16 0, %431 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 3)
State: LEGUP_F_main_BB__439
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %440 = load i16* %324, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %440 = load i16* %324, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %440 = load i16* %324, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__443
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %447 = mul i32 %446, %444 (idx: 0)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %447 = mul i32 %446, %444 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %447 = mul i32 %446, %444 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB__443
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %448 = add i32 %447, 32768 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %448 = add i32 %447, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %448 = add i32 %447, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
State: LEGUP_F_main_BB_gsm_mult_rexit11i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %449 = load i16* %323, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %449 = load i16* %323, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %449 = load i16* %323, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_gsm_mult_rexit11i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %451 = add nsw i32 %450, %.0... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %451 = add nsw i32 %450, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %451 = add nsw i32 %450, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 65)
State: LEGUP_F_main_BB_gsm_addexit8i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %456, i16* %323, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %456, i16* %323, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %456, i16* %323, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_main_BB_gsm_addexit8i
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %457 = sub nsw i32 8, %n.029... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %457 = sub nsw i32 8, %n.029... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %457 = sub nsw i32 8, %n.029... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %461 = load i16* %.128.i, al... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %461 = load i16* %.128.i, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %461 = load i16* %.128.i, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  %460 = load i16* %459, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  %460 = load i16* %459, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %460 = load i16* %459, align... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep112 = add i32 %gep_int11... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep112 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep112 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 67)
State: LEGUP_F_main_BB__464
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %468 = mul i32 %467, %465 (idx: 0)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %468 = mul i32 %467, %465 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %468 = mul i32 %467, %465 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__464
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %469 = add i32 %468, 32768 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %469 = add i32 %468, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %469 = add i32 %468, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 68)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %470 = add nsw i32 %m.026.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %470 = add nsw i32 %m.026.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %470 = add nsw i32 %m.026.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 69)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %472 = load i16* %471, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %472 = load i16* %471, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %472 = load i16* %471, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep115 = add i32 %gep_int11... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep115 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep115 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 71)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %474 = add nsw i32 %473, %.0... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %474 = add nsw i32 %473, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %474 = add nsw i32 %473, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 73)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %479, i16* %480, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %479, i16* %480, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %479, i16* %480, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep118 = add i32 %gep_int11... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep118 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep118 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 75)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %481 = load i16* %.128.i, al... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %481 = load i16* %.128.i, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %481 = load i16* %.128.i, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__484
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %487 = mul i32 %486, %485 (idx: 0)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %487 = mul i32 %486, %485 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %487 = mul i32 %486, %485 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB__484
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %488 = add i32 %487, 32768 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %488 = add i32 %487, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %488 = add i32 %487, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 76)
State: LEGUP_F_main_BB_gsm_mult_rexiti13
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %490 = add nsw i32 %489, %.0... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %490 = add nsw i32 %489, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %490 = add nsw i32 %489, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 78)
State: LEGUP_F_main_BB_gsm_addexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %495, i16* %459, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %495, i16* %459, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %495, i16* %459, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB__crit_edgei14
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %496 = add nsw i32 %n.029.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %496 = add nsw i32 %n.029.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %496 = add nsw i32 %n.029.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 79)
State: LEGUP_F_main_BB__crit_edge43i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %.pre.i15 = load i16* %324, ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %.pre.i15 = load i16* %324, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i15 = load i16* %324, ... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB__crit_edge43i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %indvars.iv.next.i = add i32... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep120 = add i32 %gep_int11... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %indvars.iv.next.i = add i32... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep120 = add i32 %gep_int11... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %indvars.iv.next.i = add i32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 80)
  %gep120 = add i32 %gep_int11... (idx: 1) -> main_signed_add_32_1 (mux inputs: 23)
State: LEGUP_F_main_BB_Reflection_coefficientsexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %499 = load i16* %.01.i.i, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %499 = load i16* %.01.i.i, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %499 = load i16* %.01.i.i, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__501
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %503 = sub i16 0, %499 (idx: 0)                 100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %503 = sub i16 0, %499 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %503 = sub i16 0, %499 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 4)
State: LEGUP_F_main_BB__512
Binding functional unit type: signed_add_16
Weight matrix for operation/function unit matching:
                                                  main_signed_add_16_0          
  %513 = add i16 %504, -11059 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_16_0          
  %513 = add i16 %504, -11059 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %513 = add i16 %504, -11059 (idx: 0) -> main_signed_add_16_0 (mux inputs: 1)
State: LEGUP_F_main_BB_threadii
Binding functional unit type: signed_add_16
Weight matrix for operation/function unit matching:
                                                  main_signed_add_16_0          
  %516 = add i16 %515, 26624 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_16_0          
  %516 = add i16 %515, 26624 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %516 = add i16 %515, 26624 (idx: 0) -> main_signed_add_16_0 (mux inputs: 2)
State: LEGUP_F_main_BB__517
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %519, i16* %.01.i.... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %519, i16* %.01.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %519, i16* %.01.i.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__517
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %520 = add nsw i32 %i.02.i.i... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep122 = add i32 %gep_int12... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %520 = add nsw i32 %i.02.i.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep122 = add i32 %gep_int12... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %520 = add nsw i32 %i.02.i.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 81)
  %gep122 = add i32 %gep_int12... (idx: 1) -> main_signed_add_32_1 (mux inputs: 24)
State: LEGUP_F_main_BB__517
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %518 = sub i16 0, %temp.0.i.... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %518 = sub i16 0, %temp.0.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %518 = sub i16 0, %temp.0.i.... (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 5)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %522 = load i16* %19, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %522 = load i16* %19, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %522 = load i16* %19, align ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %524 = mul i32 %523, 40960 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %524 = mul i32 %523, 40960 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %524 = mul i32 %523, 40960 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %526 = add nsw i32 %525, 256 (idx: 0)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %526 = add nsw i32 %525, 256 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %526 = add nsw i32 %525, 256 (idx: 0) -> main_signed_add_32_0 (mux inputs: 82)
State: LEGUP_F_main_BB__533
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %534 = add nsw i32 %.op.i, 3... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %534 = add nsw i32 %.op.i, 3... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %534 = add nsw i32 %.op.i, 3... (idx: 0) -> main_signed_add_32_0 (mux inputs: 83)
State: LEGUP_F_main_BB_threadi4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %535, i16* %19, al... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %535, i16* %19, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %535, i16* %19, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_threadi4
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep124 = add i32 %gep_int12... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep124 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep124 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 84)
State: LEGUP_F_main_BB_threadi4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %537 = load i16* %536, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %537 = load i16* %536, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %537 = load i16* %536, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB_threadi4
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %539 = mul i32 %538, 40960 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %539 = mul i32 %538, 40960 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %539 = mul i32 %538, 40960 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 19)
State: LEGUP_F_main_BB_threadi4
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %541 = add nsw i32 %540, 256 (idx: 0)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %541 = add nsw i32 %540, 256 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %541 = add nsw i32 %540, 256 (idx: 0) -> main_signed_add_32_0 (mux inputs: 85)
State: LEGUP_F_main_BB__548
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %549 = add nsw i32 %.op40.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %549 = add nsw i32 %.op40.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %549 = add nsw i32 %.op40.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 86)
State: LEGUP_F_main_BB_thread98i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %550, i16* %536, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %550, i16* %536, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %550, i16* %536, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_thread98i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep126 = add i32 %gep_int12... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep126 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep126 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 87)
State: LEGUP_F_main_BB_thread98i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %552 = load i16* %551, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %552 = load i16* %551, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %552 = load i16* %551, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_thread98i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %554 = mul i32 %553, 40960 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %554 = mul i32 %553, 40960 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %554 = mul i32 %553, 40960 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 20)
State: LEGUP_F_main_BB_thread98i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %556 = add nsw i32 %555, 204... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %556 = add nsw i32 %555, 204... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %556 = add nsw i32 %555, 204... (idx: 0) -> main_signed_add_32_0 (mux inputs: 88)
State: LEGUP_F_main_BB__558
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op45.i = add nsw i32 %560,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op45.i = add nsw i32 %560,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op45.i = add nsw i32 %560,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 89)
State: LEGUP_F_main_BB__566
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %567 = add nsw i32 %.op49.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %567 = add nsw i32 %.op49.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %567 = add nsw i32 %.op49.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 90)
State: LEGUP_F_main_BB_thread102i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %568, i16* %551, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %568, i16* %551, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %568, i16* %551, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_thread102i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep128 = add i32 %gep_int12... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep128 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep128 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 91)
State: LEGUP_F_main_BB_thread102i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %570 = load i16* %569, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %570 = load i16* %569, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %570 = load i16* %569, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_main_BB_thread102i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %572 = mul i32 %571, 40960 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %572 = mul i32 %571, 40960 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %572 = mul i32 %571, 40960 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 21)
State: LEGUP_F_main_BB_thread102i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %574 = add nsw i32 %573, -25... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %574 = add nsw i32 %573, -25... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %574 = add nsw i32 %573, -25... (idx: 0) -> main_signed_add_32_0 (mux inputs: 92)
State: LEGUP_F_main_BB__576
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op54.i = add nsw i32 %578,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op54.i = add nsw i32 %578,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op54.i = add nsw i32 %578,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 93)
State: LEGUP_F_main_BB__584
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %585 = add nsw i32 %.op58.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %585 = add nsw i32 %.op58.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %585 = add nsw i32 %.op58.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 94)
State: LEGUP_F_main_BB_thread107i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %586, i16* %569, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %586, i16* %569, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %586, i16* %569, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_thread107i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep130 = add i32 %gep_int12... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep130 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep130 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 95)
State: LEGUP_F_main_BB_thread107i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %588 = load i16* %587, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %588 = load i16* %587, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %588 = load i16* %587, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_thread107i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %590 = mul i32 %589, 27928 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %590 = mul i32 %589, 27928 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %590 = mul i32 %589, 27928 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 22)
State: LEGUP_F_main_BB_thread107i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %592 = add nsw i32 %591, 94 (idx: 0)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %592 = add nsw i32 %591, 94 (idx: 0)            1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %592 = add nsw i32 %591, 94 (idx: 0) -> main_signed_add_32_0 (mux inputs: 96)
State: LEGUP_F_main_BB__594
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op63.i = add nsw i32 %596,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op63.i = add nsw i32 %596,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op63.i = add nsw i32 %596,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 97)
State: LEGUP_F_main_BB__602
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %603 = add nsw i32 %.op67.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %603 = add nsw i32 %.op67.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %603 = add nsw i32 %.op67.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 98)
State: LEGUP_F_main_BB_thread112i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %604, i16* %587, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %604, i16* %587, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %604, i16* %587, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_thread112i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep132 = add i32 %gep_int13... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep132 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep132 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 99)
State: LEGUP_F_main_BB_thread112i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %606 = load i16* %605, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %606 = load i16* %605, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %606 = load i16* %605, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_thread112i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %608 = mul i32 %607, 30720 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %608 = mul i32 %607, 30720 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %608 = mul i32 %607, 30720 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 23)
State: LEGUP_F_main_BB_thread112i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %610 = add nsw i32 %609, -17... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %610 = add nsw i32 %609, -17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %610 = add nsw i32 %609, -17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 100)
State: LEGUP_F_main_BB__612
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op72.i = add nsw i32 %614,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op72.i = add nsw i32 %614,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op72.i = add nsw i32 %614,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 101)
State: LEGUP_F_main_BB__620
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %621 = add nsw i32 %.op76.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %621 = add nsw i32 %.op76.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %621 = add nsw i32 %.op76.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 102)
State: LEGUP_F_main_BB_thread117i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %622, i16* %605, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %622, i16* %605, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %622, i16* %605, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_thread117i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep134 = add i32 %gep_int13... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep134 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep134 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 103)
State: LEGUP_F_main_BB_thread117i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %624 = load i16* %623, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %624 = load i16* %623, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %624 = load i16* %623, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_main_BB_thread117i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %626 = mul i32 %625, 17068 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %626 = mul i32 %625, 17068 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %626 = mul i32 %625, 17068 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 24)
State: LEGUP_F_main_BB_thread117i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %628 = add nsw i32 %627, -34... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %628 = add nsw i32 %627, -34... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %628 = add nsw i32 %627, -34... (idx: 0) -> main_signed_add_32_0 (mux inputs: 104)
State: LEGUP_F_main_BB__630
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op81.i = add nsw i32 %632,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op81.i = add nsw i32 %632,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op81.i = add nsw i32 %632,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 105)
State: LEGUP_F_main_BB__638
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %639 = add nsw i32 %.op85.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %639 = add nsw i32 %.op85.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %639 = add nsw i32 %.op85.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 106)
State: LEGUP_F_main_BB_thread122i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %640, i16* %623, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %640, i16* %623, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %640, i16* %623, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB_thread122i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep136 = add i32 %gep_int13... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep136 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep136 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 107)
State: LEGUP_F_main_BB_thread122i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %642 = load i16* %641, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %642 = load i16* %641, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %642 = load i16* %641, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_main_BB_thread122i
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %644 = mul i32 %643, 18072 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %644 = mul i32 %643, 18072 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %644 = mul i32 %643, 18072 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB_thread122i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %646 = add nsw i32 %645, -11... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %646 = add nsw i32 %645, -11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %646 = add nsw i32 %645, -11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 108)
State: LEGUP_F_main_BB__648
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op90.i = add nsw i32 %650,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %.op90.i = add nsw i32 %650,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.op90.i = add nsw i32 %650,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 109)
State: LEGUP_F_main_BB__656
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %657 = add nsw i32 %.op94.i,... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %657 = add nsw i32 %.op94.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %657 = add nsw i32 %.op94.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 110)
State: LEGUP_F_main_BB_Quantization_and_codingexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %658, i16* %641, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %658, i16* %641, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %658, i16* %641, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %661 = add nsw i32 %660, %.l... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %664 = add nsw i32 %663, %66... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %667 = add nsw i32 %666, %66... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %670 = add nsw i32 %669, %66... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %673 = add nsw i32 %672, %67... (idx: 4)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %676 = add nsw i32 %675, %67... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %679 = add nsw i32 %678, %67... (idx: 6)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %661 = add nsw i32 %660, %.l... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %664 = add nsw i32 %663, %66... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %667 = add nsw i32 %666, %66... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %670 = add nsw i32 %669, %66... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %673 = add nsw i32 %672, %67... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %676 = add nsw i32 %675, %67... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %679 = add nsw i32 %678, %67... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %661 = add nsw i32 %660, %.l... (idx: 0) -> main_signed_add_32_0 (mux inputs: 112)
  %664 = add nsw i32 %663, %66... (idx: 1) -> main_signed_add_32_1 (mux inputs: 26)
  %667 = add nsw i32 %666, %66... (idx: 2) -> main_signed_add_32_2 (mux inputs: 13)
  %670 = add nsw i32 %669, %66... (idx: 3) -> main_signed_add_32_3 (mux inputs: 11)
  %673 = add nsw i32 %672, %67... (idx: 4) -> main_signed_add_32_4 (mux inputs: 9)
  %676 = add nsw i32 %675, %67... (idx: 5) -> main_signed_add_32_5 (mux inputs: 9)
  %679 = add nsw i32 %678, %67... (idx: 6) -> main_signed_add_32_6 (mux inputs: 9)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %682 = add nsw i32 %681, %67... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %682 = add nsw i32 %681, %67... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %682 = add nsw i32 %681, %67... (idx: 0) -> main_signed_add_32_0 (mux inputs: 114)
State: LEGUP_F_main_BB__685
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %693 = add nsw i32 %i.13, 1 (idx: 0)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %693 = add nsw i32 %i.13, 1 (idx: 0)            1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %693 = add nsw i32 %i.13, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 115)
State: LEGUP_F_main_BB__685
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %687 = load i16* %686, align... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %687 = load i16* %686, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %687 = load i16* %686, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_main_BB__685
Binding functional unit type: outData_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %689 = load i16* %688, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %689 = load i16* %688, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %689 = load i16* %688, align... (idx: 0) -> main_outData_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__685
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep153 = add i32 %gep_int15... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep156 = add i32 %gep_int15... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep153 = add i32 %gep_int15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep156 = add i32 %gep_int15... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep153 = add i32 %gep_int15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 117)
  %gep156 = add i32 %gep_int15... (idx: 1) -> main_signed_add_32_1 (mux inputs: 28)
State: LEGUP_F_main_BB__685
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %692 = add nsw i32 %691, %ma... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %692 = add nsw i32 %691, %ma... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %692 = add nsw i32 %691, %ma... (idx: 0) -> main_signed_add_32_0 (mux inputs: 119)

