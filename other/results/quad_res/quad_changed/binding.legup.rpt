//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Apr  1 12:19:48 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
mem_dual_port                 2                             
signed_add_32                 8                             
signed_multiply_32            5                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %1 = load i32* getelementptr... (idx: 0)        0                             0                             
  %2 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %1 = load i32* getelementptr... (idx: 0)        1                             0                             
  %2 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %1 = load i32* getelementptr... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %2 = load i32* getelementptr... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load i32* getelementptr... (idx: 0)        0                             0                             
  %4 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %3 = load i32* getelementptr... (idx: 0)        1                             0                             
  %4 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load i32* getelementptr... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %4 = load i32* getelementptr... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %5 = load i32* getelementptr... (idx: 0)        0                             0                             
  %6 = load i32* getelementptr... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %5 = load i32* getelementptr... (idx: 0)        1                             0                             
  %6 = load i32* getelementptr... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = load i32* getelementptr... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %6 = load i32* getelementptr... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %7 = load i32* getelementptr... (idx: 0)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %7 = load i32* getelementptr... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load i32* getelementptr... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %26 = mul nsw i32 %3, %4 (idx: 0)               -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %26 = mul nsw i32 %3, %4 (idx: 0)               1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %26 = mul nsw i32 %3, %4 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %8 = mul nsw i32 %1, %6 (idx: 0)                -30                           -10                           -10                           -10                           -10                           
  %13 = mul nsw i32 %3, %6 (idx: 1)               -25                           -10                           -10                           -10                           -10                           
  %16 = mul nsw i32 %4, %6 (idx: 2)               -25                           -10                           -10                           -10                           -10                           
  %23 = mul nsw i32 %1, %6 (idx: 3)               -30                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %8 = mul nsw i32 %1, %6 (idx: 0)                1                             0                             0                             0                             0                             
  %13 = mul nsw i32 %3, %6 (idx: 1)               0                             0                             1                             0                             0                             
  %16 = mul nsw i32 %4, %6 (idx: 2)               0                             0                             0                             1                             0                             
  %23 = mul nsw i32 %1, %6 (idx: 3)               0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %8 = mul nsw i32 %1, %6 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 4)
  %13 = mul nsw i32 %3, %6 (idx: 1) -> main_signed_multiply_32_2 (mux inputs: 2)
  %16 = mul nsw i32 %4, %6 (idx: 2) -> main_signed_multiply_32_3 (mux inputs: 2)
  %23 = mul nsw i32 %1, %6 (idx: 3) -> main_signed_multiply_32_4 (mux inputs: 2)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %9 = mul nsw i32 %8, %6 (idx: 0)                -45                           -10                           -25                           -25                           -25                           
  %10 = mul nsw i32 %2, %7 (idx: 1)               -50                           -10                           -30                           -30                           -30                           
  %14 = mul nsw i32 %13, %7 (idx: 2)              -50                           -10                           -30                           -30                           -30                           
  %18 = mul nsw i32 %5, %7 (idx: 3)               -50                           -10                           -30                           -30                           -30                           
  %20 = mul nsw i32 %1, %7 (idx: 4)               -45                           -10                           -30                           -30                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %9 = mul nsw i32 %8, %6 (idx: 0)                0                             1                             0                             0                             0                             
  %10 = mul nsw i32 %2, %7 (idx: 1)               0                             0                             0                             0                             1                             
  %14 = mul nsw i32 %13, %7 (idx: 2)              1                             0                             0                             0                             0                             
  %18 = mul nsw i32 %5, %7 (idx: 3)               0                             0                             0                             1                             0                             
  %20 = mul nsw i32 %1, %7 (idx: 4)               0                             0                             1                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = mul nsw i32 %13, %7 (idx: 2) -> main_signed_multiply_32_0 (mux inputs: 6)
  %9 = mul nsw i32 %8, %6 (idx: 0) -> main_signed_multiply_32_1 (mux inputs: 2)
  %20 = mul nsw i32 %1, %7 (idx: 4) -> main_signed_multiply_32_2 (mux inputs: 4)
  %18 = mul nsw i32 %5, %7 (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 4)
  %10 = mul nsw i32 %2, %7 (idx: 1) -> main_signed_multiply_32_4 (mux inputs: 4)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %11 = mul nsw i32 %10, %7 (idx: 0)              -55                           -30                           -35                           -45                           -45                           
  %21 = mul nsw i32 %20, %7 (idx: 1)              -55                           -30                           -35                           -45                           -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     
  %11 = mul nsw i32 %10, %7 (idx: 0)              1                             0                             0                             0                             0                             
  %21 = mul nsw i32 %20, %7 (idx: 1)              0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %11 = mul nsw i32 %10, %7 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 7)
  %21 = mul nsw i32 %20, %7 (idx: 1) -> main_signed_multiply_32_4 (mux inputs: 5)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %12 = add nsw i32 %9, %11 (idx: 0)              -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %15 = add nsw i32 %12, %14 (idx: 1)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %17 = add nsw i32 %15, %16 (idx: 2)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %19 = add nsw i32 %17, %18 (idx: 3)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %22 = add nsw i32 %19, %21 (idx: 4)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %24 = add nsw i32 %22, %23 (idx: 5)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %25 = add nsw i32 %24, %2 (idx: 6)              -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %27 = add nsw i32 %25, %26 (idx: 7)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %12 = add nsw i32 %9, %11 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             
  %15 = add nsw i32 %12, %14 (idx: 1)             0                             1                             0                             0                             0                             0                             0                             0                             
  %17 = add nsw i32 %15, %16 (idx: 2)             0                             0                             1                             0                             0                             0                             0                             0                             
  %19 = add nsw i32 %17, %18 (idx: 3)             0                             0                             0                             1                             0                             0                             0                             0                             
  %22 = add nsw i32 %19, %21 (idx: 4)             0                             0                             0                             0                             1                             0                             0                             0                             
  %24 = add nsw i32 %22, %23 (idx: 5)             0                             0                             0                             0                             0                             1                             0                             0                             
  %25 = add nsw i32 %24, %2 (idx: 6)              0                             0                             0                             0                             0                             0                             1                             0                             
  %27 = add nsw i32 %25, %26 (idx: 7)             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %12 = add nsw i32 %9, %11 (idx: 0) -> main_signed_add_32_0 (mux inputs: 2)
  %15 = add nsw i32 %12, %14 (idx: 1) -> main_signed_add_32_1 (mux inputs: 2)
  %17 = add nsw i32 %15, %16 (idx: 2) -> main_signed_add_32_2 (mux inputs: 2)
  %19 = add nsw i32 %17, %18 (idx: 3) -> main_signed_add_32_3 (mux inputs: 2)
  %22 = add nsw i32 %19, %21 (idx: 4) -> main_signed_add_32_4 (mux inputs: 2)
  %24 = add nsw i32 %22, %23 (idx: 5) -> main_signed_add_32_5 (mux inputs: 2)
  %25 = add nsw i32 %24, %2 (idx: 6) -> main_signed_add_32_6 (mux inputs: 2)
  %27 = add nsw i32 %25, %26 (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
State: LEGUP_F_main_BB__0
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %28 = add nsw i32 %27, %5 (idx: 0)              -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %28 = add nsw i32 %27, %5 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = add nsw i32 %27, %5 (idx: 0) -> main_signed_add_32_0 (mux inputs: 4)

