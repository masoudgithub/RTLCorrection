//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Mar 31 11:15:21 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: legup_memset_2_i64
--------------------------------------------------------------------------------
Function unit type:           Number Required               
legup_memset_2_i64_0_1_local_mem_dual_port1                             
legup_memset_2_i64_0_2_local_mem_dual_port1                             
legup_memset_2_i64_0_3_local_mem_dual_port1                             
legup_memset_2_i64_0_c_local_mem_dual_port2                             
legup_memset_2_i64_0_s_local_mem_dual_port2                             
signed_add_32                 1                             
signed_add_64                 1                             
--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
bitoff_local_mem_dual_port    1                             
inData_local_mem_dual_port    1                             
main_0_Ki_local_mem_dual_port 1                             
main_0_Pi_local_mem_dual_port 1                             
main_0_so_local_mem_dual_port 2                             
mem_dual_port                 1                             
outData_local_mem_dual_port   1                             
signed_add_16                 1                             
signed_add_32                 15                            
signed_multiply_32            15                            
signed_subtract_16            1                             
signed_subtract_32            1                             

Running Bipartite Weighted Matching on function: legup_memset_2_i64
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %m, i8** %1, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %c1, i8* %2, align ... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %n, i64* %3, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  %13 = load i8** %1, align 4 (idx: 0)            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0
  %13 = load i8** %1, align 4 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load i8** %1, align 4 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i8* %2, align 1 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %15 = load i64* %3, align 8 (idx: 0)            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %15 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %15 = load i64* %3, align 8 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %16, i64* %3, alig... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %16, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %16, i64* %3, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %5, i16* %c, align... (idx: 0)        -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %5, i16* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %5, i16* %c, align... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %14, i16** %s, al... (idx: 0)        -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %14, i16** %s, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16* %14, i16** %s, al... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %6 = load i16* %c, align 2 (idx: 0)             -10                           -5                            
  %9 = load i16* %c, align 2 (idx: 1)             -10                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %6 = load i16* %c, align 2 (idx: 0)             1                             0                             
  %9 = load i16* %c, align 2 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i16* %c, align 2 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
  %9 = load i16* %c, align 2 (idx: 1) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__0
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %12, i16* %c, alig... (idx: 0)        -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  store i16 %12, i16* %c, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %12, i16* %c, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %18 = load i64* %3, align 8 (idx: 0)            -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  %18 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %18 = load i64* %3, align 8 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: legup_memset_2_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %19, i64* %3, alig... (idx: 0)        -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0
  store i64 %19, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %19, i64* %3, alig... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_3_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__17
Binding functional unit type: signed_add_64
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_64_0
  %19 = add i64 %18, -1 (idx: 0)                  -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_64_0
  %19 = add i64 %18, -1 (idx: 0)                  1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = add i64 %18, -1 (idx: 0) -> legup_memset_2_i64_signed_add_64_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %22 = load i16* %c, align 2 (idx: 0)            -20                           0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_1
  %22 = load i16* %c, align 2 (idx: 0)            1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i16* %c, align 2 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  %23 = load i16** %s, align 4 (idx: 0)           -10                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  %23 = load i16** %s, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i16** %s, align 4 (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: legup_memset_2_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %24, i16** %s, al... (idx: 0)        -15                           -10                           
  store i16 %22, i16* %23, ali... (idx: 1)        -20                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1
  store i16* %24, i16** %s, al... (idx: 0)        0                             1                             
  store i16 %22, i16* %23, ali... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %22, i16* %23, ali... (idx: 1) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_0 (mux inputs: 4)
  store i16* %24, i16** %s, al... (idx: 0) -> legup_memset_2_i64_legup_memset_2_i64_0_s_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_legup_memset_2_i64_BB__21
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_32_0
  %gep = add i32 %gep_int, 2 (idx: 0)             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_2_i64_signed_add_32_0
  %gep = add i32 %gep_int, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, 2 (idx: 0) -> legup_memset_2_i64_signed_add_32_0 (mux inputs: 1)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %5 = add nsw i32 %i.05, 1 (idx: 0)              -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %5 = add nsw i32 %i.05, 1 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %5 = add nsw i32 %i.05, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: inData_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_inData_local_mem_dual_port_0
  %3 = load i16* %2, align 2, ... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_inData_local_mem_dual_port_0
  %3 = load i16* %2, align 2, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %3 = load i16* %2, align 2, ... (idx: 0) -> main_inData_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep = add i32 %gep_int, %ge... (idx: 0)        -20                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %gep3 = add i32 %gep_int1, %... (idx: 1)        -20                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep = add i32 %gep_int, %ge... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep3 = add i32 %gep_int1, %... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 3)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_14 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %3, i16* %4, align... (idx: 0)        -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %3, i16* %4, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %3, i16* %4, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__8
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %10 = load i16* %9, align 2,... (idx: 0)        -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %10 = load i16* %9, align 2,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i16* %9, align 2,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__8
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep7 = add i32 %gep_int5, %... (idx: 0)        -30                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep7 = add i32 %gep_int5, %... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep7 = add i32 %gep_int5, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__12
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %14 = sub i16 0, %10 (idx: 0)                   -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %14 = sub i16 0, %10 (idx: 0)                   1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = sub i16 0, %10 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 1)
State: LEGUP_F_main_BB_gsm_absexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %17 = add nsw i32 %k.029.i, ... (idx: 0)        -45                           -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %17 = add nsw i32 %k.029.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %17 = add nsw i32 %k.029.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__33
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %36 = load i8* %35, align 1,... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %36 = load i8* %35, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %36 = load i8* %35, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__33
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep10 = add i32 %gep_int9, ... (idx: 0)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep10 = add i32 %gep_int9, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep10 = add i32 %gep_int9, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__33
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %38 = add nsw i32 %37, -1 (idx: 0)              -85                           -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %38 = add nsw i32 %37, -1 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = add nsw i32 %37, -1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__39
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %43 = load i8* %42, align 1,... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %43 = load i8* %42, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %43 = load i8* %42, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB__39
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep12 = add i32 %gep_int11,... (idx: 0)        -90                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep12 = add i32 %gep_int11,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep12 = add i32 %gep_int11,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__39
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %45 = add nuw nsw i32 %44, 7 (idx: 0)           -105                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %45 = add nuw nsw i32 %44, 7 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %45 = add nuw nsw i32 %44, 7 (idx: 0) -> main_signed_add_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__49
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %53 = load i8* %52, align 1,... (idx: 0)        -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %53 = load i8* %52, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load i8* %52, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__49
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep14 = add i32 %gep_int13,... (idx: 0)        -120                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep14 = add i32 %gep_int13,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep14 = add i32 %gep_int13,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB__49
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %55 = add nuw nsw i32 %54, 1... (idx: 0)        -135                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %55 = add nuw nsw i32 %54, 1... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %55 = add nuw nsw i32 %54, 1... (idx: 0) -> main_signed_add_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__56
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %59 = load i8* %58, align 1,... (idx: 0)        -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %59 = load i8* %58, align 1,... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %59 = load i8* %58, align 1,... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__56
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep16 = add i32 %gep_int15,... (idx: 0)        -150                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep16 = add i32 %gep_int15,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep16 = add i32 %gep_int15,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB__56
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %61 = add nuw nsw i32 %60, 2... (idx: 0)        -165                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %61 = add nuw nsw i32 %60, 2... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %61 = add nuw nsw i32 %60, 2... (idx: 0) -> main_signed_add_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB__62
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %sext.off.i = add i32 %sext.... (idx: 0)        -175                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %sext.off.i = add i32 %sext.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %sext.off.i = add i32 %sext.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 19)
State: LEGUP_F_main_BB__62
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %63 = sub i32 4, %.01.i.i1 (idx: 0)             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %63 = sub i32 4, %.01.i.i1 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %63 = sub i32 4, %.01.i.i1 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %66 = add nsw i32 %phitmp.i,... (idx: 0)        -185                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %66 = add nsw i32 %phitmp.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = add nsw i32 %phitmp.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
State: LEGUP_F_main_BB_preheader6splitusi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %72 = load i16* %71, align 2... (idx: 0)        -25                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %72 = load i16* %71, align 2... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load i16* %71, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheader6splitusi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep19 = add i32 %gep_int17,... (idx: 0)        -200                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep19 = add i32 %gep_int17,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep19 = add i32 %gep_int17,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
State: LEGUP_F_main_BB__74
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %76 = mul nsw i32 %75, %70 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %76 = mul nsw i32 %75, %70 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = mul nsw i32 %75, %70 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__74
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %77 = add nsw i32 %76, 16384 (idx: 0)           -215                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %77 = add nsw i32 %76, 16384 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = add nsw i32 %76, 16384 (idx: 0) -> main_signed_add_32_0 (mux inputs: 23)
State: LEGUP_F_main_BB_gsm_mult_rexitusi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %.0.i.us.i, i16* %... (idx: 0)        -35                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %.0.i.us.i, i16* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %.0.i.us.i, i16* %... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_gsm_mult_rexitusi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %80 = add nsw i32 %k.128.us.... (idx: 0)        -225                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %80 = add nsw i32 %k.128.us.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %80 = add nsw i32 %k.128.us.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 24)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %88 = add nsw i32 %k.128.i, ... (idx: 0)        -235                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %88 = add nsw i32 %k.128.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = add nsw i32 %k.128.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %82 = load i16* %81, align 2... (idx: 0)        -45                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %82 = load i16* %81, align 2... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i16* %81, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep22 = add i32 %gep_int20,... (idx: 0)        -250                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep22 = add i32 %gep_int20,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep22 = add i32 %gep_int20,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 27)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %84 = mul nsw i32 %83, %70 (idx: 0)             -15                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %84 = mul nsw i32 %83, %70 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = mul nsw i32 %83, %70 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %87, i16* %81, ali... (idx: 0)        -55                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %87, i16* %81, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %87, i16* %81, ali... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_gsm_mult_rexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %85 = add nsw i32 %84, 16384 (idx: 0)           -265                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %85 = add nsw i32 %84, 16384 (idx: 0)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %85 = add nsw i32 %84, 16384 (idx: 0) -> main_signed_add_32_0 (mux inputs: 28)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %90 = load i16* %7, align 2,... (idx: 0)        -65                           -5                            
  %94 = load i16* %93, align 2... (idx: 1)        -65                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %90 = load i16* %7, align 2,... (idx: 0)        1                             0                             
  %94 = load i16* %93, align 2... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i16* %7, align 2,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 8)
  %94 = load i16* %93, align 2... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep24 = add i32 %gep_int23,... (idx: 0)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep26 = add i32 %gep_int25,... (idx: 1)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep28 = add i32 %gep_int27,... (idx: 2)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep30 = add i32 %gep_int29,... (idx: 3)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep32 = add i32 %gep_int31,... (idx: 4)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep34 = add i32 %gep_int33,... (idx: 5)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
  %gep36 = add i32 %gep_int35,... (idx: 6)        -275                          -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep24 = add i32 %gep_int23,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep26 = add i32 %gep_int25,... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %gep28 = add i32 %gep_int27,... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %gep30 = add i32 %gep_int29,... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %gep32 = add i32 %gep_int31,... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %gep34 = add i32 %gep_int33,... (idx: 5)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %gep36 = add i32 %gep_int35,... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep24 = add i32 %gep_int23,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 29)
  %gep28 = add i32 %gep_int27,... (idx: 2) -> main_signed_add_32_9 (mux inputs: 1)
  %gep30 = add i32 %gep_int29,... (idx: 3) -> main_signed_add_32_10 (mux inputs: 1)
  %gep32 = add i32 %gep_int31,... (idx: 4) -> main_signed_add_32_11 (mux inputs: 1)
  %gep34 = add i32 %gep_int33,... (idx: 5) -> main_signed_add_32_12 (mux inputs: 1)
  %gep36 = add i32 %gep_int35,... (idx: 6) -> main_signed_add_32_13 (mux inputs: 1)
  %gep26 = add i32 %gep_int25,... (idx: 1) -> main_signed_add_32_14 (mux inputs: 3)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %99 = load i16* %98, align 2... (idx: 0)        -75                           -5                            
  %107 = load i16* %106, align... (idx: 1)        -75                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %99 = load i16* %98, align 2... (idx: 0)        1                             0                             
  %107 = load i16* %106, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = load i16* %98, align 2... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 9)
  %107 = load i16* %106, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %92 = mul nsw i32 %91, %91 (idx: 0)             -30                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %96 = mul nsw i32 %95, %95 (idx: 1)             -30                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %92 = mul nsw i32 %91, %91 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %96 = mul nsw i32 %95, %95 (idx: 1)             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = mul nsw i32 %91, %91 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 4)
  %96 = mul nsw i32 %95, %95 (idx: 1) -> main_signed_multiply_32_14 (mux inputs: 1)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %117 = load i16* %116, align... (idx: 0)        -85                           -15                           
  %129 = load i16* %128, align... (idx: 1)        -85                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %117 = load i16* %116, align... (idx: 0)        1                             0                             
  %129 = load i16* %128, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = load i16* %116, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 10)
  %129 = load i16* %128, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %97 = add nuw nsw i32 %96, %... (idx: 0)        -290                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           
  %103 = add nsw i32 %100, %91 (idx: 1)           -290                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %97 = add nuw nsw i32 %96, %... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %103 = add nsw i32 %100, %91 (idx: 1)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %97 = add nuw nsw i32 %96, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 31)
  %103 = add nsw i32 %100, %91 (idx: 1) -> main_signed_add_32_14 (mux inputs: 5)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %101 = mul nsw i32 %100, %10... (idx: 0)        -40                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %104 = mul nsw i32 %95, %103 (idx: 1)           -40                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -5                            
  %105 = mul nsw i32 %91, %100 (idx: 2)           -35                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %109 = mul nsw i32 %108, %10... (idx: 3)        -40                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %111 = mul nsw i32 %100, %10... (idx: 4)        -40                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %113 = mul nsw i32 %95, %108 (idx: 5)           -40                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -5                            
  %115 = mul nsw i32 %91, %108 (idx: 6)           -35                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %101 = mul nsw i32 %100, %10... (idx: 0)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %104 = mul nsw i32 %95, %103 (idx: 1)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %105 = mul nsw i32 %91, %100 (idx: 2)           0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %109 = mul nsw i32 %108, %10... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %111 = mul nsw i32 %100, %10... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %113 = mul nsw i32 %95, %108 (idx: 5)           1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %115 = mul nsw i32 %91, %108 (idx: 6)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %113 = mul nsw i32 %95, %108 (idx: 5) -> main_signed_multiply_32_0 (mux inputs: 6)
  %105 = mul nsw i32 %91, %100 (idx: 2) -> main_signed_multiply_32_9 (mux inputs: 2)
  %115 = mul nsw i32 %91, %108 (idx: 6) -> main_signed_multiply_32_10 (mux inputs: 2)
  %104 = mul nsw i32 %95, %103 (idx: 1) -> main_signed_multiply_32_11 (mux inputs: 2)
  %109 = mul nsw i32 %108, %10... (idx: 3) -> main_signed_multiply_32_12 (mux inputs: 1)
  %111 = mul nsw i32 %100, %10... (idx: 4) -> main_signed_multiply_32_13 (mux inputs: 2)
  %101 = mul nsw i32 %100, %10... (idx: 0) -> main_signed_multiply_32_14 (mux inputs: 2)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %143 = load i16* %142, align... (idx: 0)        -95                           -25                           
  %159 = load i16* %158, align... (idx: 1)        -95                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %143 = load i16* %142, align... (idx: 0)        1                             0                             
  %159 = load i16* %158, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load i16* %142, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 11)
  %159 = load i16* %158, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %102 = add nuw nsw i32 %101,... (idx: 0)        -310                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -50                           
  %110 = add nuw nsw i32 %109,... (idx: 1)        -310                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -50                           
  %112 = add nsw i32 %111, %10... (idx: 2)        -310                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -50                           
  %114 = add nsw i32 %113, %10... (idx: 3)        -310                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -50                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %102 = add nuw nsw i32 %101,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %110 = add nuw nsw i32 %109,... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %112 = add nsw i32 %111, %10... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %114 = add nsw i32 %113, %10... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = add nuw nsw i32 %101,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 33)
  %112 = add nsw i32 %111, %10... (idx: 2) -> main_signed_add_32_12 (mux inputs: 3)
  %114 = add nsw i32 %113, %10... (idx: 3) -> main_signed_add_32_13 (mux inputs: 3)
  %110 = add nuw nsw i32 %109,... (idx: 1) -> main_signed_add_32_14 (mux inputs: 7)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %119 = mul nsw i32 %118, %11... (idx: 0)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -30                           -20                           -10                           -20                           -20                           
  %121 = mul nsw i32 %108, %11... (idx: 1)        -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -25                           -20                           -5                            -15                           -20                           
  %123 = mul nsw i32 %100, %11... (idx: 2)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -15                           -30                           -20                           -10                           -15                           -15                           
  %125 = mul nsw i32 %95, %118 (idx: 3)           -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -30                           -15                           -10                           -20                           -15                           
  %127 = mul nsw i32 %91, %118 (idx: 4)           -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -15                           -25                           -20                           -10                           -20                           -20                           
  %131 = mul nsw i32 %130, %13... (idx: 5)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -30                           -20                           -10                           -20                           -20                           
  %133 = mul nsw i32 %118, %13... (idx: 6)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -30                           -20                           -10                           -20                           -20                           
  %135 = mul nsw i32 %108, %13... (idx: 7)        -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -25                           -20                           -5                            -15                           -20                           
  %137 = mul nsw i32 %100, %13... (idx: 8)        -60                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -15                           -30                           -20                           -10                           -15                           -15                           
  %139 = mul nsw i32 %95, %130 (idx: 9)           -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -30                           -15                           -10                           -20                           -15                           
  %141 = mul nsw i32 %91, %130 (idx: 10)          -55                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -15                           -25                           -20                           -10                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %119 = mul nsw i32 %118, %11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %121 = mul nsw i32 %108, %11... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %123 = mul nsw i32 %100, %11... (idx: 2)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %125 = mul nsw i32 %95, %118 (idx: 3)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %127 = mul nsw i32 %91, %118 (idx: 4)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %131 = mul nsw i32 %130, %13... (idx: 5)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %133 = mul nsw i32 %118, %13... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %135 = mul nsw i32 %108, %13... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %137 = mul nsw i32 %100, %13... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %139 = mul nsw i32 %95, %130 (idx: 9)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %141 = mul nsw i32 %91, %130 (idx: 10)          0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %119 = mul nsw i32 %118, %11... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 7)
  %141 = mul nsw i32 %91, %130 (idx: 10) -> main_signed_multiply_32_5 (mux inputs: 2)
  %123 = mul nsw i32 %100, %11... (idx: 2) -> main_signed_multiply_32_6 (mux inputs: 2)
  %131 = mul nsw i32 %130, %13... (idx: 5) -> main_signed_multiply_32_7 (mux inputs: 1)
  %133 = mul nsw i32 %118, %13... (idx: 6) -> main_signed_multiply_32_8 (mux inputs: 2)
  %121 = mul nsw i32 %108, %11... (idx: 1) -> main_signed_multiply_32_9 (mux inputs: 4)
  %125 = mul nsw i32 %95, %118 (idx: 3) -> main_signed_multiply_32_10 (mux inputs: 4)
  %127 = mul nsw i32 %91, %118 (idx: 4) -> main_signed_multiply_32_11 (mux inputs: 4)
  %137 = mul nsw i32 %100, %13... (idx: 8) -> main_signed_multiply_32_12 (mux inputs: 3)
  %139 = mul nsw i32 %95, %130 (idx: 9) -> main_signed_multiply_32_13 (mux inputs: 4)
  %135 = mul nsw i32 %108, %13... (idx: 7) -> main_signed_multiply_32_14 (mux inputs: 4)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %120 = add nuw nsw i32 %119,... (idx: 0)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %122 = add nsw i32 %121, %11... (idx: 1)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %124 = add nsw i32 %123, %11... (idx: 2)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %126 = add nsw i32 %125, %11... (idx: 3)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %132 = add nuw nsw i32 %131,... (idx: 4)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %134 = add nsw i32 %133, %12... (idx: 5)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %136 = add nsw i32 %135, %12... (idx: 6)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %138 = add nsw i32 %137, %12... (idx: 7)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
  %140 = add nsw i32 %139, %12... (idx: 8)        -330                          -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -70                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %120 = add nuw nsw i32 %119,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %122 = add nsw i32 %121, %11... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %124 = add nsw i32 %123, %11... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %126 = add nsw i32 %125, %11... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %132 = add nuw nsw i32 %131,... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %134 = add nsw i32 %133, %12... (idx: 5)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %136 = add nsw i32 %135, %12... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %138 = add nsw i32 %137, %12... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %140 = add nsw i32 %139, %12... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = add nuw nsw i32 %119,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 35)
  %132 = add nuw nsw i32 %131,... (idx: 4) -> main_signed_add_32_7 (mux inputs: 2)
  %134 = add nsw i32 %133, %12... (idx: 5) -> main_signed_add_32_8 (mux inputs: 2)
  %136 = add nsw i32 %135, %12... (idx: 6) -> main_signed_add_32_9 (mux inputs: 3)
  %138 = add nsw i32 %137, %12... (idx: 7) -> main_signed_add_32_10 (mux inputs: 3)
  %140 = add nsw i32 %139, %12... (idx: 8) -> main_signed_add_32_11 (mux inputs: 3)
  %124 = add nsw i32 %123, %11... (idx: 2) -> main_signed_add_32_12 (mux inputs: 5)
  %126 = add nsw i32 %125, %11... (idx: 3) -> main_signed_add_32_13 (mux inputs: 5)
  %122 = add nsw i32 %121, %11... (idx: 1) -> main_signed_add_32_14 (mux inputs: 9)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %145 = mul nsw i32 %144, %14... (idx: 0)        -70                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -40                           -40                           -40                           -30                           -40                           -40                           
  %147 = mul nsw i32 %130, %14... (idx: 1)        -70                           -10                           -10                           -10                           -10                           -25                           -20                           -5                            -15                           -40                           -40                           -40                           -25                           -35                           -35                           
  %149 = mul nsw i32 %118, %14... (idx: 2)        -65                           -10                           -10                           -10                           -10                           -30                           -15                           -10                           -15                           -35                           -35                           -35                           -30                           -40                           -40                           
  %151 = mul nsw i32 %108, %14... (idx: 3)        -65                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -35                           -35                           -40                           -25                           -35                           -35                           
  %153 = mul nsw i32 %100, %14... (idx: 4)        -70                           -10                           -10                           -10                           -10                           -30                           -15                           -10                           -20                           -35                           -40                           -40                           -25                           -35                           -35                           
  %155 = mul nsw i32 %95, %144 (idx: 5)           -65                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -40                           -35                           -35                           -30                           -35                           -35                           
  %157 = mul nsw i32 %91, %144 (idx: 6)           -65                           -10                           -10                           -10                           -10                           -25                           -20                           -10                           -20                           -35                           -35                           -35                           -30                           -40                           -40                           
  %161 = mul nsw i32 %160, %16... (idx: 7)        -70                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -40                           -40                           -40                           -30                           -40                           -40                           
  %163 = mul nsw i32 %144, %16... (idx: 8)        -70                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -40                           -40                           -40                           -30                           -40                           -40                           
  %165 = mul nsw i32 %130, %16... (idx: 9)        -70                           -10                           -10                           -10                           -10                           -25                           -20                           -5                            -15                           -40                           -40                           -40                           -25                           -35                           -35                           
  %167 = mul nsw i32 %118, %16... (idx: 10)       -65                           -10                           -10                           -10                           -10                           -30                           -15                           -10                           -15                           -35                           -35                           -35                           -30                           -40                           -40                           
  %169 = mul nsw i32 %108, %16... (idx: 11)       -65                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -35                           -35                           -40                           -25                           -35                           -35                           
  %171 = mul nsw i32 %100, %16... (idx: 12)       -70                           -10                           -10                           -10                           -10                           -30                           -15                           -10                           -20                           -35                           -40                           -40                           -25                           -35                           -35                           
  %173 = mul nsw i32 %95, %160 (idx: 13)          -65                           -10                           -10                           -10                           -10                           -30                           -20                           -10                           -20                           -40                           -35                           -35                           -30                           -35                           -35                           
  %175 = mul nsw i32 %91, %160 (idx: 14)          -65                           -10                           -10                           -10                           -10                           -25                           -30                           -20                           -30                           -45                           -45                           -45                           -40                           -50                           -50                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %145 = mul nsw i32 %144, %14... (idx: 0)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %147 = mul nsw i32 %130, %14... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %149 = mul nsw i32 %118, %14... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %151 = mul nsw i32 %108, %14... (idx: 3)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %153 = mul nsw i32 %100, %14... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %155 = mul nsw i32 %95, %144 (idx: 5)           0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %157 = mul nsw i32 %91, %144 (idx: 6)           0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %161 = mul nsw i32 %160, %16... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %163 = mul nsw i32 %144, %16... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %165 = mul nsw i32 %130, %16... (idx: 9)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %167 = mul nsw i32 %118, %16... (idx: 10)       0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %169 = mul nsw i32 %108, %16... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %171 = mul nsw i32 %100, %16... (idx: 12)       0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %173 = mul nsw i32 %95, %160 (idx: 13)          0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %175 = mul nsw i32 %91, %160 (idx: 14)          0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %165 = mul nsw i32 %130, %16... (idx: 9) -> main_signed_multiply_32_0 (mux inputs: 9)
  %171 = mul nsw i32 %100, %16... (idx: 12) -> main_signed_multiply_32_1 (mux inputs: 2)
  %151 = mul nsw i32 %108, %14... (idx: 3) -> main_signed_multiply_32_2 (mux inputs: 2)
  %155 = mul nsw i32 %95, %144 (idx: 5) -> main_signed_multiply_32_3 (mux inputs: 2)
  %157 = mul nsw i32 %91, %144 (idx: 6) -> main_signed_multiply_32_4 (mux inputs: 2)
  %167 = mul nsw i32 %118, %16... (idx: 10) -> main_signed_multiply_32_5 (mux inputs: 4)
  %175 = mul nsw i32 %91, %160 (idx: 14) -> main_signed_multiply_32_6 (mux inputs: 4)
  %153 = mul nsw i32 %100, %14... (idx: 4) -> main_signed_multiply_32_7 (mux inputs: 3)
  %161 = mul nsw i32 %160, %16... (idx: 7) -> main_signed_multiply_32_8 (mux inputs: 3)
  %173 = mul nsw i32 %95, %160 (idx: 13) -> main_signed_multiply_32_9 (mux inputs: 6)
  %147 = mul nsw i32 %130, %14... (idx: 1) -> main_signed_multiply_32_10 (mux inputs: 6)
  %169 = mul nsw i32 %108, %16... (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 6)
  %163 = mul nsw i32 %144, %16... (idx: 8) -> main_signed_multiply_32_12 (mux inputs: 5)
  %145 = mul nsw i32 %144, %14... (idx: 0) -> main_signed_multiply_32_13 (mux inputs: 5)
  %149 = mul nsw i32 %118, %14... (idx: 2) -> main_signed_multiply_32_14 (mux inputs: 6)
State: LEGUP_F_main_BB_threadi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %146 = add nuw nsw i32 %145,... (idx: 0)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %148 = add nsw i32 %147, %13... (idx: 1)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %150 = add nsw i32 %149, %13... (idx: 2)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %152 = add nsw i32 %151, %13... (idx: 3)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %154 = add nsw i32 %153, %14... (idx: 4)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %156 = add nsw i32 %155, %14... (idx: 5)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -30                           -30                           -30                           -50                           -50                           -90                           
  %162 = add nsw i32 %161, %14... (idx: 6)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %164 = add nsw i32 %163, %14... (idx: 7)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %166 = add nsw i32 %165, %15... (idx: 8)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %168 = add nsw i32 %167, %15... (idx: 9)        -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %170 = add nsw i32 %169, %15... (idx: 10)       -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %172 = add nsw i32 %171, %15... (idx: 11)       -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
  %174 = add nsw i32 %173, %15... (idx: 12)       -350                          -10                           -10                           -10                           -10                           -10                           -10                           -30                           -30                           -40                           -40                           -40                           -60                           -60                           -90                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %146 = add nuw nsw i32 %145,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %148 = add nsw i32 %147, %13... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %150 = add nsw i32 %149, %13... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %152 = add nsw i32 %151, %13... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %154 = add nsw i32 %153, %14... (idx: 4)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %156 = add nsw i32 %155, %14... (idx: 5)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %162 = add nsw i32 %161, %14... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %164 = add nsw i32 %163, %14... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %166 = add nsw i32 %165, %15... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %168 = add nsw i32 %167, %15... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %170 = add nsw i32 %169, %15... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %172 = add nsw i32 %171, %15... (idx: 11)       0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %174 = add nsw i32 %173, %15... (idx: 12)       0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %146 = add nuw nsw i32 %145,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 37)
  %154 = add nsw i32 %153, %14... (idx: 4) -> main_signed_add_32_3 (mux inputs: 2)
  %156 = add nsw i32 %155, %14... (idx: 5) -> main_signed_add_32_4 (mux inputs: 2)
  %172 = add nsw i32 %171, %15... (idx: 11) -> main_signed_add_32_5 (mux inputs: 2)
  %174 = add nsw i32 %173, %15... (idx: 12) -> main_signed_add_32_6 (mux inputs: 2)
  %150 = add nsw i32 %149, %13... (idx: 2) -> main_signed_add_32_7 (mux inputs: 4)
  %152 = add nsw i32 %151, %13... (idx: 3) -> main_signed_add_32_8 (mux inputs: 4)
  %166 = add nsw i32 %165, %15... (idx: 8) -> main_signed_add_32_9 (mux inputs: 5)
  %168 = add nsw i32 %167, %15... (idx: 9) -> main_signed_add_32_10 (mux inputs: 5)
  %170 = add nsw i32 %169, %15... (idx: 10) -> main_signed_add_32_11 (mux inputs: 5)
  %162 = add nsw i32 %161, %14... (idx: 6) -> main_signed_add_32_12 (mux inputs: 7)
  %164 = add nsw i32 %163, %14... (idx: 7) -> main_signed_add_32_13 (mux inputs: 7)
  %148 = add nsw i32 %147, %13... (idx: 1) -> main_signed_add_32_14 (mux inputs: 11)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %197 = load i16* %196, align... (idx: 0)        -105                          -35                           
  %205 = load i16* %204, align... (idx: 1)        -105                          -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %197 = load i16* %196, align... (idx: 0)        1                             0                             
  %205 = load i16* %204, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %197 = load i16* %196, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 12)
  %205 = load i16* %204, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep38 = add i32 %gep_int37,... (idx: 0)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep40 = add i32 %gep_int39,... (idx: 1)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep42 = add i32 %gep_int41,... (idx: 2)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep44 = add i32 %gep_int43,... (idx: 3)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep46 = add i32 %gep_int45,... (idx: 4)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep48 = add i32 %gep_int47,... (idx: 5)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep50 = add i32 %gep_int49,... (idx: 6)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %gep52 = add i32 %gep_int51,... (idx: 7)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
  %239 = add nsw i32 %i.010.i,... (idx: 8)        -365                          -5                            -5                            -15                           -15                           -25                           -25                           -35                           -35                           -45                           -45                           -45                           -65                           -65                           -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep38 = add i32 %gep_int37,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep40 = add i32 %gep_int39,... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %gep42 = add i32 %gep_int41,... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %gep44 = add i32 %gep_int43,... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %gep46 = add i32 %gep_int45,... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %gep48 = add i32 %gep_int47,... (idx: 5)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %gep50 = add i32 %gep_int49,... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %gep52 = add i32 %gep_int51,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %239 = add nsw i32 %i.010.i,... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep38 = add i32 %gep_int37,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 38)
  %gep52 = add i32 %gep_int51,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 5)
  %239 = add nsw i32 %i.010.i,... (idx: 8) -> main_signed_add_32_8 (mux inputs: 5)
  %gep46 = add i32 %gep_int45,... (idx: 4) -> main_signed_add_32_9 (mux inputs: 6)
  %gep48 = add i32 %gep_int47,... (idx: 5) -> main_signed_add_32_10 (mux inputs: 6)
  %gep50 = add i32 %gep_int49,... (idx: 6) -> main_signed_add_32_11 (mux inputs: 6)
  %gep42 = add i32 %gep_int41,... (idx: 2) -> main_signed_add_32_12 (mux inputs: 8)
  %gep44 = add i32 %gep_int43,... (idx: 3) -> main_signed_add_32_13 (mux inputs: 8)
  %gep40 = add i32 %gep_int39,... (idx: 1) -> main_signed_add_32_14 (mux inputs: 12)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %210 = load i16* %209, align... (idx: 0)        -115                          -45                           
  %215 = load i16* %214, align... (idx: 1)        -115                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %210 = load i16* %209, align... (idx: 0)        1                             0                             
  %215 = load i16* %214, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %210 = load i16* %209, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 13)
  %215 = load i16* %214, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %199 = mul nsw i32 %198, %19... (idx: 0)        -90                           -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -60                           -60                           -60                           -50                           -50                           -60                           
  %202 = mul nsw i32 %201, %19... (idx: 1)        -90                           -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -60                           -60                           -60                           -50                           -50                           -60                           
  %207 = mul nsw i32 %206, %19... (idx: 2)        -90                           -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -60                           -60                           -60                           -50                           -50                           -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %199 = mul nsw i32 %198, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %202 = mul nsw i32 %201, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %207 = mul nsw i32 %206, %19... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %199 = mul nsw i32 %198, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 10)
  %207 = mul nsw i32 %206, %19... (idx: 2) -> main_signed_multiply_32_9 (mux inputs: 8)
  %202 = mul nsw i32 %201, %19... (idx: 1) -> main_signed_multiply_32_14 (mux inputs: 8)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %220 = load i16* %219, align... (idx: 0)        -125                          -55                           
  %225 = load i16* %224, align... (idx: 1)        -125                          -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %220 = load i16* %219, align... (idx: 0)        1                             0                             
  %225 = load i16* %224, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = load i16* %219, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 14)
  %225 = load i16* %224, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %200 = add nsw i32 %199, %19... (idx: 0)        -380                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -80                           -120                          
  %203 = add nsw i32 %202, %19... (idx: 1)        -380                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -80                           -120                          
  %208 = add nsw i32 %207, %19... (idx: 2)        -380                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -80                           -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %200 = add nsw i32 %199, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %203 = add nsw i32 %202, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %208 = add nsw i32 %207, %19... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %200 = add nsw i32 %199, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 40)
  %208 = add nsw i32 %207, %19... (idx: 2) -> main_signed_add_32_13 (mux inputs: 10)
  %203 = add nsw i32 %202, %19... (idx: 1) -> main_signed_add_32_14 (mux inputs: 14)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %212 = mul nsw i32 %211, %19... (idx: 0)        -95                           -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -75                           
  %217 = mul nsw i32 %216, %19... (idx: 1)        -95                           -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %212 = mul nsw i32 %211, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %217 = mul nsw i32 %216, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %212 = mul nsw i32 %211, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 11)
  %217 = mul nsw i32 %216, %19... (idx: 1) -> main_signed_multiply_32_14 (mux inputs: 9)
State: LEGUP_F_main_BB__185
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %230 = load i16* %229, align... (idx: 0)        -135                          -65                           
  %235 = load i16* %234, align... (idx: 1)        -135                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %230 = load i16* %229, align... (idx: 0)        1                             0                             
  %235 = load i16* %234, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %230 = load i16* %229, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 15)
  %235 = load i16* %234, align... (idx: 1) -> main_main_0_so_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %213 = add nsw i32 %212, %19... (idx: 0)        -400                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -140                          
  %218 = add nsw i32 %217, %19... (idx: 1)        -400                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -140                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %213 = add nsw i32 %212, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %218 = add nsw i32 %217, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %213 = add nsw i32 %212, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 42)
  %218 = add nsw i32 %217, %19... (idx: 1) -> main_signed_add_32_14 (mux inputs: 16)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %222 = mul nsw i32 %221, %19... (idx: 0)        -105                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -85                           
  %227 = mul nsw i32 %226, %19... (idx: 1)        -105                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -85                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %222 = mul nsw i32 %221, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %227 = mul nsw i32 %226, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %222 = mul nsw i32 %221, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 12)
  %227 = mul nsw i32 %226, %19... (idx: 1) -> main_signed_multiply_32_14 (mux inputs: 10)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %223 = add nsw i32 %222, %19... (idx: 0)        -420                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -160                          
  %228 = add nsw i32 %227, %18... (idx: 1)        -420                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -160                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %223 = add nsw i32 %222, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %228 = add nsw i32 %227, %18... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = add nsw i32 %222, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 44)
  %228 = add nsw i32 %227, %18... (idx: 1) -> main_signed_add_32_14 (mux inputs: 18)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %232 = mul nsw i32 %231, %19... (idx: 0)        -115                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -95                           
  %237 = mul nsw i32 %236, %19... (idx: 1)        -115                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -75                           -60                           -60                           -50                           -50                           -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %232 = mul nsw i32 %231, %19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %237 = mul nsw i32 %236, %19... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %232 = mul nsw i32 %231, %19... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 13)
  %237 = mul nsw i32 %236, %19... (idx: 1) -> main_signed_multiply_32_14 (mux inputs: 11)
State: LEGUP_F_main_BB__185
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %233 = add nsw i32 %232, %18... (idx: 0)        -440                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -180                          
  %238 = add nsw i32 %237, %18... (idx: 1)        -440                          -10                           -10                           -20                           -20                           -30                           -30                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -180                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %233 = add nsw i32 %232, %18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %238 = add nsw i32 %237, %18... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %233 = add nsw i32 %232, %18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 46)
  %238 = add nsw i32 %237, %18... (idx: 1) -> main_signed_add_32_14 (mux inputs: 20)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %244, i16* %.08.i,... (idx: 0)        -150                          -80                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  store i16 %244, i16* %.08.i,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %244, i16* %.08.i,... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep54 = add i32 %gep_int53,... (idx: 0)        -455                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep54 = add i32 %gep_int53,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep54 = add i32 %gep_int53,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 47)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %.pre.i = load i16* %241, al... (idx: 0)        -165                          -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %.pre.i = load i16* %241, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i = load i16* %241, al... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %246 = add nsw i32 %k.47.i, ... (idx: 0)        -465                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %246 = add nsw i32 %k.47.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %246 = add nsw i32 %k.47.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 48)
State: LEGUP_F_main_BB__259
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %262 = load i8* %261, align ... (idx: 0)        -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %262 = load i8* %261, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %262 = load i8* %261, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__259
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep70 = add i32 %gep_int69,... (idx: 0)        -480                          -10                           -10                           -20                           -20                           -20                           -20                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep70 = add i32 %gep_int69,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep70 = add i32 %gep_int69,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 50)
State: LEGUP_F_main_BB__259
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %264 = add nsw i32 %263, -1 (idx: 0)            -505                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %264 = add nsw i32 %263, -1 (idx: 0)            1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %264 = add nsw i32 %263, -1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 51)
State: LEGUP_F_main_BB__265
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %269 = load i8* %268, align ... (idx: 0)        -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %269 = load i8* %268, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %269 = load i8* %268, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__265
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep72 = add i32 %gep_int71,... (idx: 0)        -510                          -10                           -10                           -20                           -20                           -20                           -20                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep72 = add i32 %gep_int71,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep72 = add i32 %gep_int71,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 53)
State: LEGUP_F_main_BB__265
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %271 = add nuw nsw i32 %270,... (idx: 0)        -525                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %271 = add nuw nsw i32 %270,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %271 = add nuw nsw i32 %270,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 54)
State: LEGUP_F_main_BB__275
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %279 = load i8* %278, align ... (idx: 0)        -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %279 = load i8* %278, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %279 = load i8* %278, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB__275
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep74 = add i32 %gep_int73,... (idx: 0)        -540                          -10                           -10                           -20                           -20                           -20                           -20                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep74 = add i32 %gep_int73,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep74 = add i32 %gep_int73,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 56)
State: LEGUP_F_main_BB__275
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %281 = add nuw nsw i32 %280,... (idx: 0)        -555                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %281 = add nuw nsw i32 %280,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %281 = add nuw nsw i32 %280,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 57)
State: LEGUP_F_main_BB__282
Binding functional unit type: bitoff_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %285 = load i8* %284, align ... (idx: 0)        -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_bitoff_local_mem_dual_port_0
  %285 = load i8* %284, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %285 = load i8* %284, align ... (idx: 0) -> main_bitoff_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB__282
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep76 = add i32 %gep_int75,... (idx: 0)        -570                          -10                           -10                           -20                           -20                           -20                           -20                           -50                           -50                           -60                           -60                           -60                           -80                           -100                          -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep76 = add i32 %gep_int75,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep76 = add i32 %gep_int75,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB__282
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %287 = add nuw nsw i32 %286,... (idx: 0)        -585                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %287 = add nuw nsw i32 %286,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %287 = add nuw nsw i32 %286,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 60)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %294, i16* %316, a... (idx: 0)        -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %294, i16* %316, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %294, i16* %316, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep78 = add i32 %gep_int77,... (idx: 0)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep80 = add i32 %gep_int79,... (idx: 1)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep82 = add i32 %gep_int81,... (idx: 2)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep84 = add i32 %gep_int83,... (idx: 3)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep86 = add i32 %gep_int85,... (idx: 4)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep88 = add i32 %gep_int87,... (idx: 5)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep90 = add i32 %gep_int89,... (idx: 6)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep93 = add i32 %gep_int92,... (idx: 7)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep95 = add i32 %gep_int94,... (idx: 8)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep97 = add i32 %gep_int96,... (idx: 9)        -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep99 = add i32 %gep_int98,... (idx: 10)       -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep101 = add i32 %gep_int10... (idx: 11)       -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep103 = add i32 %gep_int10... (idx: 12)       -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep105 = add i32 %gep_int10... (idx: 13)       -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
  %gep107 = add i32 %gep_int10... (idx: 14)       -595                          -5                            -5                            -15                           -15                           -15                           -15                           -45                           -45                           -55                           -55                           -55                           -75                           -95                           -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep78 = add i32 %gep_int77,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep80 = add i32 %gep_int79,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep82 = add i32 %gep_int81,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep84 = add i32 %gep_int83,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep86 = add i32 %gep_int85,... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep88 = add i32 %gep_int87,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep90 = add i32 %gep_int89,... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep93 = add i32 %gep_int92,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %gep95 = add i32 %gep_int94,... (idx: 8)        0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %gep97 = add i32 %gep_int96,... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %gep99 = add i32 %gep_int98,... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %gep101 = add i32 %gep_int10... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %gep103 = add i32 %gep_int10... (idx: 12)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %gep105 = add i32 %gep_int10... (idx: 13)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %gep107 = add i32 %gep_int10... (idx: 14)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep78 = add i32 %gep_int77,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 61)
  %gep80 = add i32 %gep_int79,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 1)
  %gep82 = add i32 %gep_int81,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 1)
  %gep84 = add i32 %gep_int83,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 3)
  %gep86 = add i32 %gep_int85,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 3)
  %gep88 = add i32 %gep_int87,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 3)
  %gep90 = add i32 %gep_int89,... (idx: 6) -> main_signed_add_32_6 (mux inputs: 3)
  %gep93 = add i32 %gep_int92,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 6)
  %gep95 = add i32 %gep_int94,... (idx: 8) -> main_signed_add_32_8 (mux inputs: 6)
  %gep97 = add i32 %gep_int96,... (idx: 9) -> main_signed_add_32_9 (mux inputs: 7)
  %gep99 = add i32 %gep_int98,... (idx: 10) -> main_signed_add_32_10 (mux inputs: 7)
  %gep101 = add i32 %gep_int10... (idx: 11) -> main_signed_add_32_11 (mux inputs: 7)
  %gep103 = add i32 %gep_int10... (idx: 12) -> main_signed_add_32_12 (mux inputs: 9)
  %gep105 = add i32 %gep_int10... (idx: 13) -> main_signed_add_32_13 (mux inputs: 11)
  %gep107 = add i32 %gep_int10... (idx: 14) -> main_signed_add_32_14 (mux inputs: 21)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %297, i16* %317, a... (idx: 0)        -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %297, i16* %317, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %297, i16* %317, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %300, i16* %318, a... (idx: 0)        -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %300, i16* %318, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %300, i16* %318, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %303, i16* %319, a... (idx: 0)        -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %303, i16* %319, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %303, i16* %319, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %306, i16* %320, a... (idx: 0)        -80                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %306, i16* %320, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %306, i16* %320, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %309, i16* %321, a... (idx: 0)        -100                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %309, i16* %321, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %309, i16* %321, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %312, i16* %322, a... (idx: 0)        -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %312, i16* %322, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %312, i16* %322, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %291, i16* %323, a... (idx: 0)        -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %291, i16* %323, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %291, i16* %323, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %294, i16* %324, a... (idx: 0)        -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %294, i16* %324, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %294, i16* %324, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %297, i16* %325, a... (idx: 0)        -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %297, i16* %325, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %297, i16* %325, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %300, i16* %326, a... (idx: 0)        -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %300, i16* %326, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %300, i16* %326, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %303, i16* %327, a... (idx: 0)        -80                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %303, i16* %327, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %303, i16* %327, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %306, i16* %328, a... (idx: 0)        -100                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %306, i16* %328, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %306, i16* %328, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %309, i16* %329, a... (idx: 0)        -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %309, i16* %329, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %309, i16* %329, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %312, i16* %330, a... (idx: 0)        -140                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %312, i16* %330, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %312, i16* %330, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_gsm_normexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %315, i16* %331, a... (idx: 0)        -160                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %315, i16* %331, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %315, i16* %331, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__335
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %337 = sub i16 0, %333 (idx: 0)                 -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %337 = sub i16 0, %333 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = sub i16 0, %333 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 2)
State: LEGUP_F_main_BB_gsm_absexiti6
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %339 = load i16* %323, align... (idx: 0)        -170                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %339 = load i16* %323, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %339 = load i16* %323, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 0, i16* %.224.i, a... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 0, i16* %.224.i, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 0, i16* %.224.i, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep109 = add i32 %gep_int10... (idx: 0)        -605                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
  %343 = add nsw i32 %i.425.i,... (idx: 1)        -605                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep109 = add i32 %gep_int10... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %343 = add nsw i32 %i.425.i,... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep109 = add i32 %gep_int10... (idx: 0) -> main_signed_add_32_0 (mux inputs: 62)
  %343 = add nsw i32 %i.425.i,... (idx: 1) -> main_signed_add_32_14 (mux inputs: 22)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %..i1.i = sub nsw i32 %348, ... (idx: 0)        -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %..i1.i = sub nsw i32 %348, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %..i1.i = sub nsw i32 %348, ... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__353
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %354 = sub nsw i32 %351, %34... (idx: 0)        -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %354 = sub nsw i32 %351, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %354 = sub nsw i32 %351, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__359
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %360 = sub nsw i32 %357, %34... (idx: 0)        -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %360 = sub nsw i32 %357, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %360 = sub nsw i32 %357, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__365
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %366 = sub nsw i32 %363, %34... (idx: 0)        -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %366 = sub nsw i32 %363, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %366 = sub nsw i32 %363, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__371
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %372 = sub nsw i32 %369, %34... (idx: 0)        -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %372 = sub nsw i32 %369, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %372 = sub nsw i32 %369, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__377
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %378 = sub nsw i32 %375, %34... (idx: 0)        -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %378 = sub nsw i32 %375, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %378 = sub nsw i32 %375, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__383
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %384 = sub nsw i32 %381, %34... (idx: 0)        -85                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %384 = sub nsw i32 %381, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %384 = sub nsw i32 %381, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB__389
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %390 = sub nsw i32 %387, %34... (idx: 0)        -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %390 = sub nsw i32 %387, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %390 = sub nsw i32 %387, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__395
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %396 = sub nsw i32 %393, %34... (idx: 0)        -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %396 = sub nsw i32 %393, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %396 = sub nsw i32 %393, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__401
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %402 = sub nsw i32 %399, %34... (idx: 0)        -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %402 = sub nsw i32 %399, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %402 = sub nsw i32 %399, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB__407
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %408 = sub nsw i32 %405, %34... (idx: 0)        -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %408 = sub nsw i32 %405, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %408 = sub nsw i32 %405, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 14)
State: LEGUP_F_main_BB__413
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %414 = sub nsw i32 %411, %34... (idx: 0)        -135                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %414 = sub nsw i32 %411, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %414 = sub nsw i32 %411, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__419
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %420 = sub nsw i32 %417, %34... (idx: 0)        -145                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %420 = sub nsw i32 %417, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %420 = sub nsw i32 %417, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 16)
State: LEGUP_F_main_BB__425
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %426 = sub nsw i32 %423, %34... (idx: 0)        -155                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %426 = sub nsw i32 %423, %34... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %426 = sub nsw i32 %423, %34... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB_gsm_divexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %431, i16* %.128.i... (idx: 0)        -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %431, i16* %.128.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %431, i16* %.128.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_gsm_divexiti
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %432 = load i16* %324, align... (idx: 0)        -170                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %432 = load i16* %324, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %432 = load i16* %324, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__434
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %435, i16* %.128.i... (idx: 0)        -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %435, i16* %.128.i... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %435, i16* %.128.i... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__434
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %435 = sub i16 0, %431 (idx: 0)                 -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %435 = sub i16 0, %431 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %435 = sub i16 0, %431 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 3)
State: LEGUP_F_main_BB__439
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %440 = load i16* %324, align... (idx: 0)        -170                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %440 = load i16* %324, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %440 = load i16* %324, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__443
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %447 = mul i32 %446, %444 (idx: 0)              -130                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -80                           -60                           -60                           -50                           -50                           -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %447 = mul i32 %446, %444 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %447 = mul i32 %446, %444 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__443
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %448 = add i32 %447, 32768 (idx: 0)             -615                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %448 = add i32 %447, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %448 = add i32 %447, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
State: LEGUP_F_main_BB_gsm_mult_rexit11i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %449 = load i16* %323, align... (idx: 0)        -170                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %449 = load i16* %323, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %449 = load i16* %323, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB_gsm_mult_rexit11i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %451 = add nsw i32 %450, %.0... (idx: 0)        -630                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %451 = add nsw i32 %450, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %451 = add nsw i32 %450, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 65)
State: LEGUP_F_main_BB_gsm_addexit8i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %456, i16* %323, a... (idx: 0)        -175                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %456, i16* %323, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %456, i16* %323, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_main_BB_gsm_addexit8i
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %457 = sub nsw i32 8, %n.029... (idx: 0)        -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     
  %457 = sub nsw i32 8, %n.029... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %457 = sub nsw i32 8, %n.029... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %461 = load i16* %.128.i, al... (idx: 0)        -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %461 = load i16* %.128.i, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %461 = load i16* %.128.i, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  %460 = load i16* %459, align... (idx: 0)        -135                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  %460 = load i16* %459, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %460 = load i16* %459, align... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_lrph27i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep112 = add i32 %gep_int11... (idx: 0)        -650                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep112 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep112 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 67)
State: LEGUP_F_main_BB__464
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %468 = mul i32 %467, %465 (idx: 0)              -150                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -80                           -60                           -60                           -50                           -50                           -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %468 = mul i32 %467, %465 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %468 = mul i32 %467, %465 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB__464
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %469 = add i32 %468, 32768 (idx: 0)             -665                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %469 = add i32 %468, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %469 = add i32 %468, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 68)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %470 = add nsw i32 %m.026.i,... (idx: 0)        -675                          -15                           -15                           -35                           -35                           -35                           -35                           -65                           -65                           -75                           -75                           -75                           -95                           -115                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %470 = add nsw i32 %m.026.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %470 = add nsw i32 %m.026.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 69)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %472 = load i16* %471, align... (idx: 0)        -185                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %472 = load i16* %471, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %472 = load i16* %471, align... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep115 = add i32 %gep_int11... (idx: 0)        -690                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep115 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep115 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 71)
State: LEGUP_F_main_BB_gsm_mult_rexit6i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %474 = add nsw i32 %473, %.0... (idx: 0)        -710                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %474 = add nsw i32 %473, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %474 = add nsw i32 %473, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 73)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %479, i16* %480, a... (idx: 0)        -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  store i16 %479, i16* %480, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %479, i16* %480, a... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep118 = add i32 %gep_int11... (idx: 0)        -730                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep118 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep118 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 75)
State: LEGUP_F_main_BB_gsm_addexit3i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %481 = load i16* %.128.i, al... (idx: 0)        -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %481 = load i16* %.128.i, al... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %481 = load i16* %.128.i, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB__484
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %487 = mul i32 %486, %485 (idx: 0)              -170                          -20                           -20                           -20                           -20                           -40                           -40                           -30                           -30                           -80                           -60                           -60                           -50                           -50                           -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    
  %487 = mul i32 %486, %485 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %487 = mul i32 %486, %485 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 19)
State: LEGUP_F_main_BB__484
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %488 = add i32 %487, 32768 (idx: 0)             -745                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %488 = add i32 %487, 32768 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %488 = add i32 %487, 32768 (idx: 0) -> main_signed_add_32_0 (mux inputs: 76)
State: LEGUP_F_main_BB_gsm_mult_rexiti10
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %490 = add nsw i32 %489, %.0... (idx: 0)        -760                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -70                           -70                           -70                           -90                           -110                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %490 = add nsw i32 %489, %.0... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %490 = add nsw i32 %489, %.0... (idx: 0) -> main_signed_add_32_0 (mux inputs: 78)
State: LEGUP_F_main_BB_gsm_addexiti
Binding functional unit type: main_0_Ki_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %495, i16* %459, a... (idx: 0)        -145                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Ki_local_mem_dual_port_0
  store i16 %495, i16* %459, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %495, i16* %459, a... (idx: 0) -> main_main_0_Ki_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB__crit_edgei11
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %496 = add nsw i32 %n.029.i,... (idx: 0)        -775                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %496 = add nsw i32 %n.029.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %496 = add nsw i32 %n.029.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 79)
State: LEGUP_F_main_BB__crit_edge43i
Binding functional unit type: main_0_Pi_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %.pre.i12 = load i16* %324, ... (idx: 0)        -210                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_Pi_local_mem_dual_port_0
  %.pre.i12 = load i16* %324, ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i12 = load i16* %324, ... (idx: 0) -> main_main_0_Pi_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB__crit_edge43i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %indvars.iv.next.i = add i32... (idx: 0)        -785                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
  %gep120 = add i32 %gep_int11... (idx: 1)        -785                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %indvars.iv.next.i = add i32... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep120 = add i32 %gep_int11... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %indvars.iv.next.i = add i32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 80)
  %gep120 = add i32 %gep_int11... (idx: 1) -> main_signed_add_32_14 (mux inputs: 23)
State: LEGUP_F_main_BB_Reflection_coefficientsexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  %499 = load i16* %.01.i.i, a... (idx: 0)        -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  %499 = load i16* %.01.i.i, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %499 = load i16* %.01.i.i, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__501
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %503 = sub i16 0, %499 (idx: 0)                 -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %503 = sub i16 0, %499 (idx: 0)                 1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %503 = sub i16 0, %499 (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 4)
State: LEGUP_F_main_BB__512
Binding functional unit type: signed_add_16
Weight matrix for operation/function unit matching:
                                                  main_signed_add_16_0          
  %513 = add i16 %504, -11059 (idx: 0)            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_16_0          
  %513 = add i16 %504, -11059 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %513 = add i16 %504, -11059 (idx: 0) -> main_signed_add_16_0 (mux inputs: 1)
State: LEGUP_F_main_BB_threadii
Binding functional unit type: signed_add_16
Weight matrix for operation/function unit matching:
                                                  main_signed_add_16_0          
  %516 = add i16 %515, 26624 (idx: 0)             -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_16_0          
  %516 = add i16 %515, 26624 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %516 = add i16 %515, 26624 (idx: 0) -> main_signed_add_16_0 (mux inputs: 2)
State: LEGUP_F_main_BB__517
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %519, i16* %.01.i.... (idx: 0)        -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 %519, i16* %.01.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 %519, i16* %.01.i.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__517
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %520 = add nsw i32 %i.02.i.i... (idx: 0)        -795                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -225                          
  %gep122 = add i32 %gep_int12... (idx: 1)        -795                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -225                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %520 = add nsw i32 %i.02.i.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep122 = add i32 %gep_int12... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %520 = add nsw i32 %i.02.i.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 81)
  %gep122 = add i32 %gep_int12... (idx: 1) -> main_signed_add_32_14 (mux inputs: 24)
State: LEGUP_F_main_BB__517
Binding functional unit type: signed_subtract_16
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %518 = sub i16 0, %temp.0.i.... (idx: 0)        -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_16_0     
  %518 = sub i16 0, %temp.0.i.... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %518 = sub i16 0, %temp.0.i.... (idx: 0) -> main_signed_subtract_16_0 (mux inputs: 5)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 32, i16* %19, alig... (idx: 0)        -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 32, i16* %19, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 32, i16* %19, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep124 = add i32 %gep_int12... (idx: 0)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep126 = add i32 %gep_int12... (idx: 1)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep128 = add i32 %gep_int12... (idx: 2)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep130 = add i32 %gep_int12... (idx: 3)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep132 = add i32 %gep_int13... (idx: 4)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep134 = add i32 %gep_int13... (idx: 5)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
  %gep136 = add i32 %gep_int13... (idx: 6)        -805                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -65                           -65                           -65                           -85                           -105                          -235                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep124 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep126 = add i32 %gep_int12... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
  %gep128 = add i32 %gep_int12... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %gep130 = add i32 %gep_int12... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
  %gep132 = add i32 %gep_int13... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %gep134 = add i32 %gep_int13... (idx: 5)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             
  %gep136 = add i32 %gep_int13... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep124 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 82)
  %gep132 = add i32 %gep_int13... (idx: 4) -> main_signed_add_32_9 (mux inputs: 8)
  %gep134 = add i32 %gep_int13... (idx: 5) -> main_signed_add_32_10 (mux inputs: 8)
  %gep136 = add i32 %gep_int13... (idx: 6) -> main_signed_add_32_11 (mux inputs: 8)
  %gep130 = add i32 %gep_int12... (idx: 3) -> main_signed_add_32_12 (mux inputs: 10)
  %gep128 = add i32 %gep_int12... (idx: 2) -> main_signed_add_32_13 (mux inputs: 12)
  %gep126 = add i32 %gep_int12... (idx: 1) -> main_signed_add_32_14 (mux inputs: 25)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 32, i16* %522, ali... (idx: 0)        -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 32, i16* %522, ali... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 32, i16* %522, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 20, i16* %523, ali... (idx: 0)        -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 20, i16* %523, ali... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 20, i16* %523, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 11, i16* %524, ali... (idx: 0)        -85                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 11, i16* %524, ali... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 11, i16* %524, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 8, i16* %525, alig... (idx: 0)        -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 8, i16* %525, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 8, i16* %525, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 5, i16* %526, alig... (idx: 0)        -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 5, i16* %526, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 5, i16* %526, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 3, i16* %527, alig... (idx: 0)        -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 3, i16* %527, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 3, i16* %527, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
State: LEGUP_F_main_BB_Gsm_LPC_Analysisexit
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 2, i16* %528, alig... (idx: 0)        -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          
  store i16 2, i16* %528, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i16 2, i16* %528, alig... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %529 = add nsw i32 %.lcssa, ... (idx: 0)        -815                          -5                            -5                            -25                           -25                           -25                           -25                           -55                           -55                           -75                           -75                           -75                           -95                           -115                          -245                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %529 = add nsw i32 %.lcssa, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %529 = add nsw i32 %.lcssa, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 83)
State: LEGUP_F_main_BB__532
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %540 = add nsw i32 %i.13, 1 (idx: 0)            -825                          -15                           -15                           -35                           -35                           -35                           -35                           -65                           -65                           -85                           -85                           -85                           -105                          -125                          -255                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %540 = add nsw i32 %i.13, 1 (idx: 0)            1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %540 = add nsw i32 %i.13, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 84)
State: LEGUP_F_main_BB__532
Binding functional unit type: main_0_so_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %534 = load i16* %533, align... (idx: 0)        -175                          -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_so_local_mem_dual_port_0main_main_0_so_local_mem_dual_port_1
  %534 = load i16* %533, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %534 = load i16* %533, align... (idx: 0) -> main_main_0_so_local_mem_dual_port_0 (mux inputs: 19)
State: LEGUP_F_main_BB__532
Binding functional unit type: outData_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %536 = load i16* %535, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_outData_local_mem_dual_port_0
  %536 = load i16* %535, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %536 = load i16* %535, align... (idx: 0) -> main_outData_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__532
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep139 = add i32 %gep_int13... (idx: 0)        -840                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -80                           -80                           -80                           -100                          -120                          -250                          
  %gep142 = add i32 %gep_int14... (idx: 1)        -840                          -10                           -10                           -30                           -30                           -30                           -30                           -60                           -60                           -80                           -80                           -80                           -100                          -120                          -250                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %gep139 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep142 = add i32 %gep_int14... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep139 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 86)
  %gep142 = add i32 %gep_int14... (idx: 1) -> main_signed_add_32_14 (mux inputs: 27)
State: LEGUP_F_main_BB__532
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %539 = add nsw i32 %538, %ma... (idx: 0)        -870                          -20                           -20                           -40                           -40                           -40                           -40                           -70                           -70                           -90                           -90                           -90                           -110                          -130                          -280                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         
  %539 = add nsw i32 %538, %ma... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %539 = add nsw i32 %538, %ma... (idx: 0) -> main_signed_add_32_0 (mux inputs: 88)

