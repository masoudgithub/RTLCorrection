//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Mon Apr  1 07:49:58 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
ilb_table_local_mem_dual_port 1                             
mem_dual_port                 2                             
qq2_code2_table_local_mem_dual_port1                             
qq4_code4_table_local_mem_dual_port1                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    1                             
signed_add_32                 19                            
signed_divide_32              1                             
signed_multiply_32            29                            
signed_subtract_32            2                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             
tqmf_local_mem_dual_port      2                             
wh_code_table_local_mem_dual_port1                             
wl_code_table_local_mem_dual_port1                             
--------------------------------------------------------------------------------
Function: legup_memset_4_i64
--------------------------------------------------------------------------------
Function unit type:           Number Required               
legup_memset_4_i64_0_1_local_mem_dual_port1                             
legup_memset_4_i64_0_2_local_mem_dual_port1                             
legup_memset_4_i64_0_3_local_mem_dual_port1                             
legup_memset_4_i64_0_c_local_mem_dual_port2                             
legup_memset_4_i64_0_s_local_mem_dual_port2                             
signed_add_32                 1                             
signed_add_64                 1                             

Running Bipartite Weighted Matching on function: legup_memset_4_i64
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %m, i8** %1, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %c1, i8* %2, align ... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %n, i64* %3, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  %14 = load i8** %1, align 4 (idx: 0)            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  %14 = load i8** %1, align 4 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load i8** %1, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i8* %2, align 1 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %16 = load i64* %3, align 8 (idx: 0)            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %16 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load i64* %3, align 8 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %17, i64* %3, alig... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %17, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %17, i64* %3, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %5, i32* %c, align... (idx: 0)        -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %5, i32* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %5, i32* %c, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %15, i32** %s, al... (idx: 0)        -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %15, i32** %s, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32* %15, i32** %s, al... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %6 = load i32* %c, align 4 (idx: 0)             -10                           -5                            
  %8 = load i32* %c, align 4 (idx: 1)             -10                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %6 = load i32* %c, align 4 (idx: 0)             1                             0                             
  %8 = load i32* %c, align 4 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
  %8 = load i32* %c, align 4 (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %9, i32* %c, align... (idx: 0)        -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %9, i32* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %9, i32* %c, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %10 = load i32* %c, align 4 (idx: 0)            -20                           0                             
  %12 = load i32* %c, align 4 (idx: 1)            -20                           0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %10 = load i32* %c, align 4 (idx: 0)            1                             0                             
  %12 = load i32* %c, align 4 (idx: 1)            0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
  %12 = load i32* %c, align 4 (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %13, i32* %c, alig... (idx: 0)        -25                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %13, i32* %c, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %13, i32* %c, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %19 = load i64* %3, align 8 (idx: 0)            -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %19 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load i64* %3, align 8 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %20, i64* %3, alig... (idx: 0)        -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %20, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %20, i64* %3, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: signed_add_64
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_64_0
  %20 = add i64 %19, -1 (idx: 0)                  -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_64_0
  %20 = add i64 %19, -1 (idx: 0)                  1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = add i64 %19, -1 (idx: 0) -> legup_memset_4_i64_signed_add_64_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %23 = load i32* %c, align 4 (idx: 0)            -30                           0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %23 = load i32* %c, align 4 (idx: 0)            1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  %24 = load i32** %s, align 4 (idx: 0)           -10                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  %24 = load i32** %s, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i32** %s, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %25, i32** %s, al... (idx: 0)        -15                           -10                           
  store i32 %23, i32* %24, ali... (idx: 1)        -20                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %25, i32** %s, al... (idx: 0)        0                             1                             
  store i32 %23, i32* %24, ali... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %23, i32* %24, ali... (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 4)
  store i32* %25, i32** %s, al... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_32_0
  %gep = add i32 %gep_int, 4 (idx: 0)             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_32_0
  %gep = add i32 %gep_int, 4 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, 4 (idx: 0) -> legup_memset_4_i64_signed_add_32_0 (mux inputs: 1)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        0                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        10                            10                            
  store i32 0, i32* getelement... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load i32* getelementpt... (idx: 0)        10                            10                            
  %82 = load i32* getelementpt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load i32* getelementpt... (idx: 0)        1                             0                             
  %82 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %82 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %31 = mul nsw i32 %25, 12 (idx
  %32 = mul nsw i32 %24, -44 (idx
  %33 = mul nsw i32 %23, -44 (idx
  %35 = mul nsw i32 %22, 212 (idx
  %37 = mul nsw i32 %21, 48 (idx
  %39 = mul nsw i32 %20, -624 (idx
  %43 = mul nsw i32 %18, 1448 (idx
  %45 = mul nsw i32 %17, -840 (idx
  %47 = mul nsw i32 %16, -3220 (idx
  %49 = mul nsw i32 %15, 3804 (idx
  %51 = mul nsw i32 %14, 15504 (idx
  %53 = mul nsw i32 %13, 15504 (idx
  %55 = mul nsw i32 %12, 3804 (idx
  %57 = mul nsw i32 %11, -3220 (idx
  %59 = mul nsw i32 %10, -840 (idx
  %61 = mul nsw i32 %9, 1448 (idx: 15)            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
  %65 = mul nsw i32 %7, -624 (idx
  %67 = mul nsw i32 %6, 48 (idx
  %69 = mul nsw i32 %5, 212 (idx
  %71 = mul nsw i32 %4, -44 (idx: 19)             -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
  %73 = mul nsw i32 %3, -44 (idx
  %75 = mul nsw i32 %2, 12 (idx
  %126 = mul nsw i32 %125, %al... (idx: 22)       -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %31 = mul nsw i32 %25, 12 (idx
  %32 = mul nsw i32 %24, -44 (idx
  %33 = mul nsw i32 %23, -44 (idx
  %35 = mul nsw i32 %22, 212 (idx
  %37 = mul nsw i32 %21, 48 (idx
  %39 = mul nsw i32 %20, -624 (idx
  %43 = mul nsw i32 %18, 1448 (idx
  %45 = mul nsw i32 %17, -840 (idx
  %47 = mul nsw i32 %16, -3220 (idx
  %49 = mul nsw i32 %15, 3804 (idx
  %51 = mul nsw i32 %14, 15504 (idx
  %53 = mul nsw i32 %13, 15504 (idx: 11)          0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %55 = mul nsw i32 %12, 3804 (idx: 12)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %57 = mul nsw i32 %11, -3220 (idx
  %59 = mul nsw i32 %10, -840 (idx
  %61 = mul nsw i32 %9, 1448 (idx
  %65 = mul nsw i32 %7, -624 (idx
  %67 = mul nsw i32 %6, 48 (idx
  %69 = mul nsw i32 %5, 212 (idx
  %71 = mul nsw i32 %4, -44 (idx
  %73 = mul nsw i32 %3, -44 (idx
  %75 = mul nsw i32 %2, 12 (idx
  %126 = mul nsw i32 %125, %al... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = mul nsw i32 %25, 12 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 1)
  %32 = mul nsw i32 %24, -44 (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 1)
  %33 = mul nsw i32 %23, -44 (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 1)
  %35 = mul nsw i32 %22, 212 (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 1)
  %37 = mul nsw i32 %21, 48 (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 1)
  %39 = mul nsw i32 %20, -624 (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 1)
  %43 = mul nsw i32 %18, 1448 (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 1)
  %45 = mul nsw i32 %17, -840 (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 1)
  %47 = mul nsw i32 %16, -3220 (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 1)
  %49 = mul nsw i32 %15, 3804 (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 1)
  %51 = mul nsw i32 %14, 15504 (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 1)
  %53 = mul nsw i32 %13, 15504 (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 1)
  %55 = mul nsw i32 %12, 3804 (idx: 12) -> main_signed_multiply_32_12 (mux inputs: 1)
  %57 = mul nsw i32 %11, -3220 (idx: 13) -> main_signed_multiply_32_13 (mux inputs: 1)
  %59 = mul nsw i32 %10, -840 (idx: 14) -> main_signed_multiply_32_14 (mux inputs: 1)
  %61 = mul nsw i32 %9, 1448 (idx: 15) -> main_signed_multiply_32_15 (mux inputs: 1)
  %65 = mul nsw i32 %7, -624 (idx: 16) -> main_signed_multiply_32_16 (mux inputs: 1)
  %67 = mul nsw i32 %6, 48 (idx: 17) -> main_signed_multiply_32_17 (mux inputs: 1)
  %69 = mul nsw i32 %5, 212 (idx: 18) -> main_signed_multiply_32_18 (mux inputs: 1)
  %71 = mul nsw i32 %4, -44 (idx: 19) -> main_signed_multiply_32_19 (mux inputs: 1)
  %73 = mul nsw i32 %3, -44 (idx: 20) -> main_signed_multiply_32_20 (mux inputs: 1)
  %75 = mul nsw i32 %2, 12 (idx: 21) -> main_signed_multiply_32_21 (mux inputs: 1)
  %126 = mul nsw i32 %125, %al... (idx: 22) -> main_signed_multiply_32_22 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load i32* getelementpt... (idx: 0)        10                            10                            
  %85 = load i32* getelementpt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load i32* getelementpt... (idx: 0)        1                             0                             
  %85 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %85 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep = add i32 %gep_int, %ge... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %gep3 = add i32 %gep_int1, %... (idx: 1)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %34 = add nsw i32 %33, %31 (idx: 2)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %36 = add nsw i32 %35, %32 (idx: 3)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %38 = add nsw i32 %37, %34 (idx: 4)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %40 = add nsw i32 %39, %36 (idx: 5)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %42 = add nsw i32 %41, %38 (idx: 6)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %44 = add nsw i32 %43, %40 (idx: 7)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %46 = add nsw i32 %45, %42 (idx: 8)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %48 = add nsw i32 %47, %44 (idx: 9)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %50 = add nsw i32 %49, %46 (idx: 10)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %52 = add nsw i32 %51, %48 (idx: 11)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %54 = add nsw i32 %53, %50 (idx: 12)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %56 = add nsw i32 %55, %52 (idx: 13)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %58 = add nsw i32 %57, %54 (idx: 14)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %60 = add nsw i32 %59, %56 (idx: 15)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %62 = add nsw i32 %61, %58 (idx: 16)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
  %64 = add nsw i32 %63, %60 (idx: 17)            -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep = add i32 %gep_int, %ge... (idx
  %gep3 = add i32 %gep_int1, %... (idx
  %34 = add nsw i32 %33, %31 (idx
  %36 = add nsw i32 %35, %32 (idx
  %38 = add nsw i32 %37, %34 (idx
  %40 = add nsw i32 %39, %36 (idx
  %42 = add nsw i32 %41, %38 (idx
  %44 = add nsw i32 %43, %40 (idx
  %46 = add nsw i32 %45, %42 (idx
  %48 = add nsw i32 %47, %44 (idx
  %50 = add nsw i32 %49, %46 (idx
  %52 = add nsw i32 %51, %48 (idx
  %54 = add nsw i32 %53, %50 (idx
  %56 = add nsw i32 %55, %52 (idx
  %58 = add nsw i32 %57, %54 (idx
  %60 = add nsw i32 %59, %56 (idx: 15)            0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             
  %62 = add nsw i32 %61, %58 (idx
  %64 = add nsw i32 %63, %60 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 2)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 2)
  %34 = add nsw i32 %33, %31 (idx: 2) -> main_signed_add_32_2 (mux inputs: 2)
  %36 = add nsw i32 %35, %32 (idx: 3) -> main_signed_add_32_3 (mux inputs: 2)
  %38 = add nsw i32 %37, %34 (idx: 4) -> main_signed_add_32_4 (mux inputs: 2)
  %40 = add nsw i32 %39, %36 (idx: 5) -> main_signed_add_32_5 (mux inputs: 2)
  %42 = add nsw i32 %41, %38 (idx: 6) -> main_signed_add_32_6 (mux inputs: 2)
  %44 = add nsw i32 %43, %40 (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
  %46 = add nsw i32 %45, %42 (idx: 8) -> main_signed_add_32_8 (mux inputs: 2)
  %48 = add nsw i32 %47, %44 (idx: 9) -> main_signed_add_32_9 (mux inputs: 2)
  %50 = add nsw i32 %49, %46 (idx: 10) -> main_signed_add_32_10 (mux inputs: 2)
  %52 = add nsw i32 %51, %48 (idx: 11) -> main_signed_add_32_11 (mux inputs: 2)
  %54 = add nsw i32 %53, %50 (idx: 12) -> main_signed_add_32_12 (mux inputs: 2)
  %56 = add nsw i32 %55, %52 (idx: 13) -> main_signed_add_32_13 (mux inputs: 2)
  %58 = add nsw i32 %57, %54 (idx: 14) -> main_signed_add_32_14 (mux inputs: 2)
  %60 = add nsw i32 %59, %56 (idx: 15) -> main_signed_add_32_15 (mux inputs: 2)
  %62 = add nsw i32 %61, %58 (idx: 16) -> main_signed_add_32_16 (mux inputs: 2)
  %64 = add nsw i32 %63, %60 (idx: 17) -> main_signed_add_32_17 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %27 = load i32* %26, align 4... (idx: 0)        -5                            -5                            
  %30 = load i32* %29, align 4... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %27 = load i32* %26, align 4... (idx: 0)        1                             0                             
  %30 = load i32* %29, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* %26, align 4... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %30 = load i32* %29, align 4... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        10                            10                            
  %89 = load i32* getelementpt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        1                             0                             
  %89 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %89 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %66 = add nsw i32 %65, %62 (idx: 0)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %68 = add nsw i32 %67, %64 (idx: 1)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %70 = add nsw i32 %69, %66 (idx: 2)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %72 = add nsw i32 %71, %68 (idx: 3)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %74 = add nsw i32 %73, %70 (idx: 4)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %76 = add nsw i32 %75, %72 (idx: 5)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
  %77 = add nsw i32 %76, %74 (idx: 6)             -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -30                           -30                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %66 = add nsw i32 %65, %62 (idx
  %68 = add nsw i32 %67, %64 (idx
  %70 = add nsw i32 %69, %66 (idx
  %72 = add nsw i32 %71, %68 (idx
  %74 = add nsw i32 %73, %70 (idx
  %76 = add nsw i32 %75, %72 (idx
  %77 = add nsw i32 %76, %74 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %77 = add nsw i32 %76, %74 (idx: 6) -> main_signed_add_32_0 (mux inputs: 4)
  %70 = add nsw i32 %69, %66 (idx: 2) -> main_signed_add_32_12 (mux inputs: 4)
  %72 = add nsw i32 %71, %68 (idx: 3) -> main_signed_add_32_13 (mux inputs: 4)
  %74 = add nsw i32 %73, %70 (idx: 4) -> main_signed_add_32_14 (mux inputs: 4)
  %76 = add nsw i32 %75, %72 (idx: 5) -> main_signed_add_32_15 (mux inputs: 4)
  %66 = add nsw i32 %65, %62 (idx: 0) -> main_signed_add_32_16 (mux inputs: 4)
  %68 = add nsw i32 %67, %64 (idx: 1) -> main_signed_add_32_17 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %83 = mul nsw i32 %82, %81 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %83 = mul nsw i32 %82, %81 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = mul nsw i32 %82, %81 (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %79 = sub nsw i32 %74, %76 (idx: 0)             -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %79 = sub nsw i32 %74, %76 (idx: 0)             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %79 = sub nsw i32 %74, %76 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %4, i32* getelemen... (idx: 0)        -5                            -5                            
  store i32 %5, i32* getelemen... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %4, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %5, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %4, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 1)
  store i32 %5, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        10                            10                            
  %93 = load i32* getelementpt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        1                             0                             
  %93 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %93 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %86 = mul nsw i32 %85, %84 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %86 = mul nsw i32 %85, %84 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = mul nsw i32 %85, %84 (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %6, i32* getelemen... (idx: 0)        -5                            -5                            
  store i32 %7, i32* getelemen... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %6, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %7, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %6, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %7, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* getelementpt... (idx: 0)        10                            10                            
  %97 = load i32* getelementpt... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* getelementpt... (idx: 0)        1                             0                             
  %97 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %96 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %97 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %87 = add nsw i32 %86, %83 (idx: 0)             -40                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %87 = add nsw i32 %86, %83 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = add nsw i32 %86, %83 (idx: 0) -> main_signed_add_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %90 = mul nsw i32 %89, %88 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -60                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %90 = mul nsw i32 %89, %88 (idx: 0)             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = mul nsw i32 %89, %88 (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        -15                           -15                           
  store i32 %9, i32* getelemen... (idx: 1)        -15                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %9, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %9, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %100 = load i32* getelementp... (idx: 0)        10                            10                            
  %101 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %100 = load i32* getelementp... (idx: 0)        1                             0                             
  %101 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %100 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %101 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %91 = add nsw i32 %87, %90 (idx: 0)             -60                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %91 = add nsw i32 %87, %90 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %91 = add nsw i32 %87, %90 (idx: 0) -> main_signed_add_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %94 = mul nsw i32 %93, %92 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -80                           -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %94 = mul nsw i32 %93, %92 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = mul nsw i32 %93, %92 (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        -25                           -25                           
  store i32 %11, i32* geteleme... (idx: 1)        -25                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %11, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %11, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %104 = load i32* getelementp... (idx: 0)        10                            10                            
  %105 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %104 = load i32* getelementp... (idx: 0)        1                             0                             
  %105 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %104 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %105 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %95 = add nsw i32 %91, %94 (idx: 0)             -80                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %95 = add nsw i32 %91, %94 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %95 = add nsw i32 %91, %94 (idx: 0) -> main_signed_add_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %98 = mul nsw i32 %97, %96 (idx: 0)             -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -100                          -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %98 = mul nsw i32 %97, %96 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = mul nsw i32 %97, %96 (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 12)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        -35                           -35                           
  store i32 %13, i32* geteleme... (idx: 1)        -35                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %13, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %12, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %13, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %108 = load i32* getelementp... (idx: 0)        10                            10                            
  %109 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %108 = load i32* getelementp... (idx: 0)        1                             0                             
  %109 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %108 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %109 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %99 = add nsw i32 %95, %98 (idx: 0)             -100                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %99 = add nsw i32 %95, %98 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = add nsw i32 %95, %98 (idx: 0) -> main_signed_add_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %102 = mul nsw i32 %101, %10... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -120                          -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %102 = mul nsw i32 %101, %10... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = mul nsw i32 %101, %10... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 14)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        -45                           -45                           
  store i32 %15, i32* geteleme... (idx: 1)        -45                           -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %15, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 6)
  store i32 %15, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %112 = load i32* getelementp... (idx: 0)        10                            10                            
  %113 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %112 = load i32* getelementp... (idx: 0)        1                             0                             
  %113 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %112 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %113 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %103 = add nsw i32 %99, %102 (idx: 0)           -120                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
  %106 = add i32 %103, %104 (idx: 1)              -120                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
  %107 = add i32 %106, %105 (idx: 2)              -120                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -40                           -40                           -40                           -40                           -40                           -40                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %103 = add nsw i32 %99, %102 (idx
  %106 = add i32 %103, %104 (idx
  %107 = add i32 %106, %105 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %103 = add nsw i32 %99, %102 (idx: 0) -> main_signed_add_32_0 (mux inputs: 14)
  %107 = add i32 %106, %105 (idx: 2) -> main_signed_add_32_12 (mux inputs: 6)
  %106 = add i32 %103, %104 (idx: 1) -> main_signed_add_32_17 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        -55                           -55                           
  store i32 %17, i32* geteleme... (idx: 1)        -55                           -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %17, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %16, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 7)
  store i32 %17, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %116 = load i32* getelementp... (idx: 0)        10                            10                            
  %117 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %116 = load i32* getelementp... (idx: 0)        1                             0                             
  %117 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %117 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %110 = add i32 %107, %108 (idx: 0)              -140                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -60                           -40                           -40                           -40                           -40                           -60                           -10                           
  %111 = add i32 %110, %109 (idx: 1)              -140                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -60                           -40                           -40                           -40                           -40                           -60                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %110 = add i32 %107, %108 (idx
  %111 = add i32 %110, %109 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %110 = add i32 %107, %108 (idx: 0) -> main_signed_add_32_0 (mux inputs: 16)
  %111 = add i32 %110, %109 (idx: 1) -> main_signed_add_32_12 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        -65                           -65                           
  store i32 %19, i32* geteleme... (idx: 1)        -65                           -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %19, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %18, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 8)
  store i32 %19, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i32* getelementp... (idx: 0)        10                            10                            
  %121 = load i32* getelementp... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i32* getelementp... (idx: 0)        1                             0                             
  %121 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %121 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %114 = add i32 %111, %112 (idx: 0)              -160                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -80                           -40                           -40                           -40                           -40                           -60                           -10                           
  %115 = add i32 %114, %113 (idx: 1)              -160                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -80                           -40                           -40                           -40                           -40                           -60                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %114 = add i32 %111, %112 (idx
  %115 = add i32 %114, %113 (idx: 1)              0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = add i32 %111, %112 (idx: 0) -> main_signed_add_32_0 (mux inputs: 18)
  %115 = add i32 %114, %113 (idx: 1) -> main_signed_add_32_12 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        -75                           -75                           
  store i32 %21, i32* geteleme... (idx: 1)        -75                           -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %21, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %20, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 9)
  store i32 %21, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %118 = add i32 %115, %116 (idx: 0)              -180                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -100                          -40                           -40                           -40                           -40                           -60                           -10                           
  %119 = add i32 %118, %117 (idx: 1)              -180                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -100                          -40                           -40                           -40                           -40                           -60                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %118 = add i32 %115, %116 (idx
  %119 = add i32 %118, %117 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %118 = add i32 %115, %116 (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
  %119 = add i32 %118, %117 (idx: 1) -> main_signed_add_32_12 (mux inputs: 12)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        -85                           -85                           
  store i32 %23, i32* geteleme... (idx: 1)        -85                           -85                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %23, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %22, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 10)
  store i32 %23, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %122 = add i32 %119, %120 (idx: 0)              -200                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -120                          -40                           -40                           -40                           -40                           -60                           -10                           
  %123 = add i32 %122, %121 (idx: 1)              -200                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -120                          -40                           -40                           -40                           -40                           -60                           -10                           
  %128 = add nsw i32 %127, %12... (idx: 2)        -200                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -120                          -40                           -40                           -40                           -40                           -60                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %122 = add i32 %119, %120 (idx
  %123 = add i32 %122, %121 (idx: 1)              0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %128 = add nsw i32 %127, %12... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %122 = add i32 %119, %120 (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
  %123 = add i32 %122, %121 (idx: 1) -> main_signed_add_32_12 (mux inputs: 14)
  %128 = add nsw i32 %127, %12... (idx: 2) -> main_signed_add_32_17 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %129 = sub nsw i32 %78, %128 (idx: 0)           -20                           -10                           
  %131 = sub nsw i32 0, %129 (idx: 1)             -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %129 = sub nsw i32 %78, %128 (idx: 0)           1                             0                             
  %131 = sub nsw i32 0, %129 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %129 = sub nsw i32 %78, %128 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 4)
  %131 = sub nsw i32 0, %129 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        -95                           -95                           
  store i32 %25, i32* geteleme... (idx: 1)        -95                           -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %25, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %24, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 11)
  store i32 %25, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %27, i32* geteleme... (idx: 0)        -105                          -105                          
  store i32 %30, i32* geteleme... (idx: 1)        -105                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %27, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %30, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %27, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  store i32 %30, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__134
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %140 = add nsw i32 %mil.01.i... (idx: 0)        -225                          -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -145                          -45                           -45                           -45                           -45                           -85                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %140 = add nsw i32 %mil.01.i... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %140 = add nsw i32 %mil.01.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 23)
State: LEGUP_F_main_BB__134
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %136 = load i32* %135, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %136 = load i32* %135, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %136 = load i32* %135, align... (idx: 0) -> main_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__134
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep6 = add i32 %gep_int4, %... (idx: 0)        -230                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -140                          -40                           -40                           -40                           -40                           -80                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep6 = add i32 %gep_int4, %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep6 = add i32 %gep_int4, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB__134
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %137 = mul nsw i32 %136, %de... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -140                          -10                           -10                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %137 = mul nsw i32 %136, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = mul nsw i32 %136, %de... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 16)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %295 = add nsw i32 %i.02.i, ... (idx: 0)        -245                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -135                          -35                           -35                           -35                           -35                           -75                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %295 = add nsw i32 %i.02.i, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %295 = add nsw i32 %i.02.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 26)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %293 = sdiv i32 %i.02.i, 2 (idx: 0)             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %293 = sdiv i32 %i.02.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %293 = sdiv i32 %i.02.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %146 = mul nsw i32 %nbl.0, 1... (idx
  %171 = mul nsw i32 %al2.0, 1... (idx
  %176 = mul nsw i32 %al1.0, 2... (idx
  %231 = mul nsw i32 %230, %ah... (idx: 3)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -160                          -10                           -10                           -10                           -10                           -10                           -10                           
  %238 = mul nsw i32 %deth.0, ... (idx
  %251 = mul nsw i32 %nbh.0, 1... (idx
  %276 = mul nsw i32 %ah2.0, 1... (idx
  %281 = mul nsw i32 %ah1.0, 2... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %146 = mul nsw i32 %nbl.0, 1... (idx
  %171 = mul nsw i32 %al2.0, 1... (idx
  %176 = mul nsw i32 %al1.0, 2... (idx
  %231 = mul nsw i32 %230, %ah... (idx
  %238 = mul nsw i32 %deth.0, ... (idx
  %251 = mul nsw i32 %nbh.0, 1... (idx
  %276 = mul nsw i32 %ah2.0, 1... (idx
  %281 = mul nsw i32 %ah1.0, 2... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %171 = mul nsw i32 %al2.0, 1... (idx: 1) -> main_signed_multiply_32_21 (mux inputs: 2)
  %146 = mul nsw i32 %nbl.0, 1... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 17)
  %176 = mul nsw i32 %al1.0, 2... (idx: 2) -> main_signed_multiply_32_23 (mux inputs: 1)
  %231 = mul nsw i32 %230, %ah... (idx: 3) -> main_signed_multiply_32_24 (mux inputs: 2)
  %238 = mul nsw i32 %deth.0, ... (idx: 4) -> main_signed_multiply_32_25 (mux inputs: 1)
  %251 = mul nsw i32 %nbh.0, 1... (idx: 5) -> main_signed_multiply_32_26 (mux inputs: 1)
  %276 = mul nsw i32 %ah2.0, 1... (idx: 6) -> main_signed_multiply_32_27 (mux inputs: 1)
  %281 = mul nsw i32 %ah1.0, 2... (idx: 7) -> main_signed_multiply_32_28 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %165 = sub nsw i32 0, %162 (idx: 0)             -35                           -5                            
  %270 = sub nsw i32 0, %267 (idx: 1)             -35                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %165 = sub nsw i32 0, %162 (idx: 0)             1                             0                             
  %270 = sub nsw i32 0, %267 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %165 = sub nsw i32 0, %162 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 5)
  %270 = sub nsw i32 0, %267 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 2)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %ril.0.i.i = load i32* %ril.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep9 = add i32 %gep_int7, %... (idx: 0)        -260                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -140                          -40                           -40                           -40                           -40                           -80                           -10                           
  %180 = add nsw i32 %177, 192 (idx: 1)           -255                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -135                          -35                           -35                           -35                           -35                           -75                           -5                            
  %285 = add nsw i32 %282, 192 (idx: 2)           -255                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -135                          -35                           -35                           -35                           -35                           -75                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep9 = add i32 %gep_int7, %... (idx
  %180 = add nsw i32 %177, 192 (idx: 1)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %285 = add nsw i32 %282, 192 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep9 = add i32 %gep_int7, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 28)
  %180 = add nsw i32 %177, 192 (idx: 1) -> main_signed_add_32_12 (mux inputs: 15)
  %285 = add nsw i32 %282, 192 (idx: 2) -> main_signed_add_32_17 (mux inputs: 9)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %143 = load i32* %142, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %143 = load i32* %142, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load i32* %142, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep12 = add i32 %gep_int10,... (idx: 0)        -280                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -150                          -40                           -40                           -40                           -40                           -90                           -10                           
  %gep15 = add i32 %gep_int13,... (idx: 1)        -280                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -150                          -40                           -40                           -40                           -40                           -90                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep12 = add i32 %gep_int10,... (idx
  %gep15 = add i32 %gep_int13,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep12 = add i32 %gep_int10,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 30)
  %gep15 = add i32 %gep_int13,... (idx: 1) -> main_signed_add_32_12 (mux inputs: 17)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %149 = load i32* %148, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %149 = load i32* %148, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %149 = load i32* %148, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %150 = add nsw i32 %147, %14... (idx: 0)        -300                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -170                          -40                           -40                           -40                           -40                           -90                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %150 = add nsw i32 %147, %14... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %150 = add nsw i32 %147, %14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 32)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %144 = mul nsw i32 %143, %de... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -165                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %144 = mul nsw i32 %143, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = mul nsw i32 %143, %de... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 18)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %158 = sub i32 9, %155 (idx: 0)                 -45                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %158 = sub i32 9, %155 (idx: 0)                 1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %158 = sub i32 9, %155 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %161 = add nsw i32 %124, %14... (idx: 0)        -320                          -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -170                          -50                           -50                           -50                           -50                           -85                           -10                           
  %185 = add nsw i32 %145, %12... (idx: 1)        -320                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -170                          -40                           -40                           -40                           -40                           -90                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %161 = add nsw i32 %124, %14... (idx
  %185 = add nsw i32 %145, %12... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %161 = add nsw i32 %124, %14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 34)
  %185 = add nsw i32 %145, %12... (idx: 1) -> main_signed_add_32_12 (mux inputs: 19)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %163 = mul nsw i32 %plt1.0, ... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -180                          -10                           -20                           -10                           -10                           -10                           -10                           
  %167 = mul nsw i32 %plt2.0, ... (idx: 1)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -20                           -180                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %163 = mul nsw i32 %plt1.0, ... (idx
  %167 = mul nsw i32 %plt2.0, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %167 = mul nsw i32 %plt2.0, ... (idx: 1) -> main_signed_multiply_32_21 (mux inputs: 4)
  %163 = mul nsw i32 %plt1.0, ... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 20)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %157 = load i32* %156, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %157 = load i32* %156, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %157 = load i32* %156, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep18 = add i32 %gep_int16,... (idx: 0)        -340                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -190                          -40                           -40                           -40                           -40                           -90                           -10                           
  %wd4.0.i8.i = add nsw i32 %1... (idx: 1)        -340                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -190                          -40                           -40                           -40                           -40                           -90                           -10                           
  %173 = add nsw i32 %wd4.0.i8... (idx: 2)        -340                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -190                          -40                           -40                           -40                           -40                           -90                           -10                           
  %apl1.0.i4.i = add nsw i32 %... (idx: 3)        -340                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -190                          -40                           -40                           -40                           -40                           -90                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep18 = add i32 %gep_int16,... (idx
  %wd4.0.i8.i = add nsw i32 %1... (idx
  %173 = add nsw i32 %wd4.0.i8... (idx
  %apl1.0.i4.i = add nsw i32 %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep18 = add i32 %gep_int16,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 36)
  %wd4.0.i8.i = add nsw i32 %1... (idx: 1) -> main_signed_add_32_12 (mux inputs: 21)
  %apl1.0.i4.i = add nsw i32 %... (idx: 3) -> main_signed_add_32_16 (mux inputs: 6)
  %173 = add nsw i32 %wd4.0.i8... (idx: 2) -> main_signed_add_32_17 (mux inputs: 11)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %181 = sub nsw i32 15360, %.... (idx: 0)        -55                           -15                           
  %183 = sub nsw i32 0, %181 (idx: 1)             -55                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %181 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %183 = sub nsw i32 0, %181 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %181 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 7)
  %183 = sub nsw i32 0, %181 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 3)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %186 = load i32* getelementp... (idx: 0)        0                             10                            
  %187 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %186 = load i32* getelementp... (idx: 0)        1                             0                             
  %187 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %186 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %187 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load i32* getelementp... (idx: 0)        0                             10                            
  %190 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load i32* getelementp... (idx: 0)        1                             0                             
  %190 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %189 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %190 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %193 = load i32* getelementp... (idx: 0)        0                             10                            
  %194 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %193 = load i32* getelementp... (idx: 0)        1                             0                             
  %194 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %193 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %194 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %188 = mul nsw i32 %187, %18... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -200                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %188 = mul nsw i32 %187, %18... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = mul nsw i32 %187, %18... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 22)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %197 = load i32* getelementp... (idx: 0)        0                             10                            
  %198 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %197 = load i32* getelementp... (idx: 0)        1                             0                             
  %198 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %197 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %198 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %191 = mul nsw i32 %190, %18... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -220                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %191 = mul nsw i32 %190, %18... (idx: 0)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %191 = mul nsw i32 %190, %18... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 24)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %201 = load i32* getelementp... (idx: 0)        0                             10                            
  %202 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %201 = load i32* getelementp... (idx: 0)        1                             0                             
  %202 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %201 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %202 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %192 = add nsw i32 %191, %18... (idx: 0)        -360                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %192 = add nsw i32 %191, %18... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %192 = add nsw i32 %191, %18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 38)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %195 = mul nsw i32 %194, %19... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -240                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %195 = mul nsw i32 %194, %19... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %195 = mul nsw i32 %194, %19... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 26)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %205 = load i32* getelementp... (idx: 0)        0                             10                            
  %206 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %205 = load i32* getelementp... (idx: 0)        1                             0                             
  %206 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %205 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %206 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %196 = add nsw i32 %192, %19... (idx: 0)        -380                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %196 = add nsw i32 %192, %19... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %196 = add nsw i32 %192, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 40)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %199 = mul nsw i32 %198, %19... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -260                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %199 = mul nsw i32 %198, %19... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %199 = mul nsw i32 %198, %19... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 28)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %209 = load i32* getelementp... (idx: 0)        0                             10                            
  %210 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %209 = load i32* getelementp... (idx: 0)        1                             0                             
  %210 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %209 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %210 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %200 = add nsw i32 %196, %19... (idx: 0)        -400                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %200 = add nsw i32 %196, %19... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %200 = add nsw i32 %196, %19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 42)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %203 = mul nsw i32 %202, %20... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -280                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %203 = mul nsw i32 %202, %20... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %203 = mul nsw i32 %202, %20... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 30)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %213 = load i32* getelementp... (idx: 0)        0                             10                            
  %214 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %213 = load i32* getelementp... (idx: 0)        1                             0                             
  %214 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %213 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %214 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %204 = add nsw i32 %200, %20... (idx: 0)        -420                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %204 = add nsw i32 %200, %20... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %204 = add nsw i32 %200, %20... (idx: 0) -> main_signed_add_32_0 (mux inputs: 44)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %207 = mul nsw i32 %206, %20... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -300                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %207 = mul nsw i32 %206, %20... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %207 = mul nsw i32 %206, %20... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 32)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %217 = load i32* getelementp... (idx: 0)        0                             10                            
  %218 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %217 = load i32* getelementp... (idx: 0)        1                             0                             
  %218 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %217 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %218 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %208 = add nsw i32 %204, %20... (idx: 0)        -440                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
  %211 = add i32 %208, %209 (idx: 1)              -440                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
  %212 = add i32 %211, %210 (idx: 2)              -440                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -210                          -40                           -40                           -40                           -60                           -110                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %208 = add nsw i32 %204, %20... (idx
  %211 = add i32 %208, %209 (idx
  %212 = add i32 %211, %210 (idx: 2)              0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %208 = add nsw i32 %204, %20... (idx: 0) -> main_signed_add_32_0 (mux inputs: 46)
  %211 = add i32 %208, %209 (idx: 1) -> main_signed_add_32_12 (mux inputs: 23)
  %212 = add i32 %211, %210 (idx: 2) -> main_signed_add_32_17 (mux inputs: 13)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %221 = load i32* getelementp... (idx: 0)        0                             10                            
  %222 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %221 = load i32* getelementp... (idx: 0)        1                             0                             
  %222 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %221 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %222 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %215 = add i32 %212, %213 (idx: 0)              -460                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -230                          -40                           -40                           -40                           -60                           -130                          -10                           
  %216 = add i32 %215, %214 (idx: 1)              -460                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -230                          -40                           -40                           -40                           -60                           -130                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %215 = add i32 %212, %213 (idx
  %216 = add i32 %215, %214 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %215 = add i32 %212, %213 (idx: 0) -> main_signed_add_32_0 (mux inputs: 48)
  %216 = add i32 %215, %214 (idx: 1) -> main_signed_add_32_12 (mux inputs: 25)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %225 = load i32* getelementp... (idx: 0)        0                             10                            
  %226 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %225 = load i32* getelementp... (idx: 0)        1                             0                             
  %226 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %225 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %226 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %219 = add i32 %216, %217 (idx: 0)              -480                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -250                          -40                           -40                           -40                           -60                           -130                          -10                           
  %220 = add i32 %219, %218 (idx: 1)              -480                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -250                          -40                           -40                           -40                           -60                           -130                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %219 = add i32 %216, %217 (idx
  %220 = add i32 %219, %218 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %219 = add i32 %216, %217 (idx: 0) -> main_signed_add_32_0 (mux inputs: 50)
  %220 = add i32 %219, %218 (idx: 1) -> main_signed_add_32_12 (mux inputs: 27)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %223 = add i32 %220, %221 (idx: 0)              -500                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -270                          -40                           -40                           -40                           -60                           -130                          -10                           
  %224 = add i32 %223, %222 (idx: 1)              -500                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -270                          -40                           -40                           -40                           -60                           -130                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %223 = add i32 %220, %221 (idx
  %224 = add i32 %223, %222 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = add i32 %220, %221 (idx: 0) -> main_signed_add_32_0 (mux inputs: 52)
  %224 = add i32 %223, %222 (idx: 1) -> main_signed_add_32_12 (mux inputs: 29)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %227 = add i32 %224, %225 (idx: 0)              -520                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -290                          -40                           -40                           -40                           -60                           -130                          -10                           
  %228 = add i32 %227, %226 (idx: 1)              -520                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -290                          -40                           -40                           -40                           -60                           -130                          -10                           
  %233 = add nsw i32 %232, %22... (idx: 2)        -520                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -290                          -40                           -40                           -40                           -60                           -130                          -10                           
  %237 = add nsw i32 %236, 3 (idx: 3)             -515                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -285                          -35                           -35                           -35                           -55                           -125                          -5                            
  %243 = add nsw i32 %236, 2 (idx: 4)             -515                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -285                          -35                           -35                           -35                           -55                           -125                          -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %227 = add i32 %224, %225 (idx
  %228 = add i32 %227, %226 (idx
  %233 = add nsw i32 %232, %22... (idx
  %237 = add nsw i32 %236, 3 (idx
  %243 = add nsw i32 %236, 2 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %227 = add i32 %224, %225 (idx: 0) -> main_signed_add_32_0 (mux inputs: 54)
  %228 = add i32 %227, %226 (idx: 1) -> main_signed_add_32_12 (mux inputs: 31)
  %243 = add nsw i32 %236, 2 (idx: 4) -> main_signed_add_32_15 (mux inputs: 5)
  %237 = add nsw i32 %236, 3 (idx: 3) -> main_signed_add_32_16 (mux inputs: 7)
  %233 = add nsw i32 %232, %22... (idx: 2) -> main_signed_add_32_17 (mux inputs: 15)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %234 = sub nsw i32 %80, %233 (idx: 0)           -70                           -30                           
  %241 = sub nsw i32 0, %234 (idx: 1)             -65                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %234 = sub nsw i32 %80, %233 (idx: 0)           1                             0                             
  %241 = sub nsw i32 0, %234 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %234 = sub nsw i32 %80, %233 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 9)
  %241 = sub nsw i32 0, %234 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 4)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %246 = add nsw i32 %., -2 (idx: 0)              -535                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -305                          -35                           -35                           -45                           -65                           -145                          -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %246 = add nsw i32 %., -2 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %246 = add nsw i32 %., -2 (idx: 0) -> main_signed_add_32_0 (mux inputs: 55)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %248 = load i32* %247, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %248 = load i32* %247, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %248 = load i32* %247, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep21 = add i32 %gep_int19,... (idx: 0)        -550                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -310                          -40                           -40                           -50                           -70                           -150                          -10                           
  %gep24 = add i32 %gep_int22,... (idx: 1)        -550                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -310                          -40                           -40                           -50                           -70                           -150                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep21 = add i32 %gep_int19,... (idx
  %gep24 = add i32 %gep_int22,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep21 = add i32 %gep_int19,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 57)
  %gep24 = add i32 %gep_int22,... (idx: 1) -> main_signed_add_32_12 (mux inputs: 33)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %254 = load i32* %253, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %254 = load i32* %253, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %254 = load i32* %253, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %255 = add nsw i32 %252, %25... (idx: 0)        -570                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -330                          -40                           -40                           -50                           -70                           -150                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %255 = add nsw i32 %252, %25... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %255 = add nsw i32 %252, %25... (idx: 0) -> main_signed_add_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %249 = mul nsw i32 %248, %de... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -320                          -10                           -20                           -5                            -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %249 = mul nsw i32 %248, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %249 = mul nsw i32 %248, %de... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 34)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %263 = sub i32 11, %260 (idx: 0)                -85                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %263 = sub i32 11, %260 (idx: 0)                1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %263 = sub i32 11, %260 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %266 = add nsw i32 %229, %25... (idx: 0)        -590                          -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -340                          -50                           -50                           -60                           -80                           -155                          -10                           
  %290 = add nsw i32 %250, %23... (idx: 1)        -590                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -330                          -40                           -40                           -50                           -70                           -150                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %266 = add nsw i32 %229, %25... (idx
  %290 = add nsw i32 %250, %23... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %290 = add nsw i32 %250, %23... (idx: 1) -> main_signed_add_32_0 (mux inputs: 61)
  %266 = add nsw i32 %229, %25... (idx: 0) -> main_signed_add_32_12 (mux inputs: 35)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %268 = mul nsw i32 %ph1.0, %... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -340                          -10                           -20                           -10                           -10                           -10                           -10                           
  %272 = mul nsw i32 %ph2.0, %... (idx: 1)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -40                           -340                          -10                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %268 = mul nsw i32 %ph1.0, %... (idx
  %272 = mul nsw i32 %ph2.0, %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %272 = mul nsw i32 %ph2.0, %... (idx: 1) -> main_signed_multiply_32_21 (mux inputs: 6)
  %268 = mul nsw i32 %ph1.0, %... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 36)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %262 = load i32* %261, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %262 = load i32* %261, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %262 = load i32* %261, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep27 = add i32 %gep_int25,... (idx: 0)        -610                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -350                          -40                           -40                           -50                           -70                           -150                          -10                           
  %wd4.0.i.i4 = add nsw i32 %2... (idx: 1)        -610                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -350                          -40                           -40                           -50                           -70                           -150                          -10                           
  %278 = add nsw i32 %wd4.0.i.... (idx: 2)        -610                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -350                          -40                           -40                           -50                           -70                           -150                          -10                           
  %apl1.0.i.i7 = add nsw i32 %... (idx: 3)        -610                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -350                          -40                           -40                           -50                           -70                           -150                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep27 = add i32 %gep_int25,... (idx
  %wd4.0.i.i4 = add nsw i32 %2... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
  %278 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i7 = add nsw i32 %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep27 = add i32 %gep_int25,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
  %wd4.0.i.i4 = add nsw i32 %2... (idx: 1) -> main_signed_add_32_12 (mux inputs: 37)
  %apl1.0.i.i7 = add nsw i32 %... (idx: 3) -> main_signed_add_32_16 (mux inputs: 9)
  %278 = add nsw i32 %wd4.0.i.... (idx: 2) -> main_signed_add_32_17 (mux inputs: 17)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %286 = sub nsw i32 15360, %.... (idx: 0)        -95                           -35                           
  %288 = sub nsw i32 0, %286 (idx: 1)             -95                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %286 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %288 = sub nsw i32 0, %286 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %286 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 11)
  %288 = sub nsw i32 0, %286 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 5)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep30 = add i32 %gep_int28,... (idx: 0)        -630                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -370                          -40                           -40                           -50                           -90                           -170                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep30 = add i32 %gep_int28,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep30 = add i32 %gep_int28,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 65)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        -110                          -110                          
  %.pre16 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        1                             0                             
  %.pre16 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre = load i32* getelement... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre16 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre17 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre18 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre17 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre18 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre17 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre18 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre19 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre20 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre19 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre20 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre19 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre20 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre21 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre22 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre21 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre22 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre21 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre22 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre23 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre24 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre23 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre24 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre23 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre24 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre25 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre26 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre25 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre26 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre25 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre26 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre27 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre28 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre27 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre28 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre27 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre28 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre29 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre30 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre29 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre30 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre29 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre30 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre31 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre32 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre31 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre32 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre31 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre32 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre33 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre34 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre33 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre34 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre33 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre34 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre35 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre36 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre35 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre36 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre35 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre36 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre37 = load i32* geteleme... (idx: 0)        -110                          -110                          
  %.pre38 = load i32* geteleme... (idx: 1)        -110                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre37 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre38 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre37 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre38 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_preheaderipreheader
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %298 = load i32* %297, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %298 = load i32* %297, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %298 = load i32* %297, align... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep33 = add i32 %gep_int31,... (idx: 0)        -650                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -370                          -40                           -40                           -50                           -90                           -170                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep33 = add i32 %gep_int31,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep33 = add i32 %gep_int31,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 67)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %304 = load i32* getelementp... (idx: 0)        0                             10                            
  %305 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %304 = load i32* getelementp... (idx: 0)        1                             0                             
  %305 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %304 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %305 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %545 = add nsw i32 %i.11.i, ... (idx: 0)        -675                          -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -25                           -375                          -45                           -45                           -55                           -95                           -175                          -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %545 = add nsw i32 %i.11.i, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %545 = add nsw i32 %i.11.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 68)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %299 = sdiv i32 %i.11.i, 2 (idx: 0)             -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %299 = sdiv i32 %i.11.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %299 = sdiv i32 %i.11.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %349 = mul nsw i32 %348, %de... (idx: 0)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -60                           -360                          -10                           -20                           -10                           -10                           -10                           -10                           
  %357 = mul nsw i32 %298, %de... (idx: 1)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -60                           -360                          -10                           -20                           -10                           -10                           -10                           -10                           
  %360 = mul nsw i32 %dec_nbl.... (idx
  %385 = mul nsw i32 %dec_al2.... (idx
  %390 = mul nsw i32 %dec_al1.... (idx
  %445 = mul nsw i32 %444, %de... (idx: 5)        -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -10                           -60                           -360                          -10                           -20                           -10                           -10                           -10                           -10                           
  %452 = mul nsw i32 %dec_nbh.... (idx
  %477 = mul nsw i32 %dec_ah2.... (idx
  %482 = mul nsw i32 %dec_ah1.... (idx
  %496 = mul nsw i32 %accumc.0... (idx
  %498 = mul nsw i32 %accumd.0... (idx: 10)       -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -55                           -355                          -5                            -15                           -5                            -5                            -5                            -5                            
  %500 = mul nsw i32 %accumc.1... (idx: 11)       -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -55                           -355                          -5                            -15                           -5                            -5                            -5                            -5                            
  %502 = mul nsw i32 %accumd.1... (idx
  %506 = mul nsw i32 %accumd.2... (idx
  %508 = mul nsw i32 %accumc.3... (idx
  %510 = mul nsw i32 %accumd.3... (idx
  %512 = mul nsw i32 %accumc.4... (idx
  %514 = mul nsw i32 %accumd.4... (idx
  %516 = mul nsw i32 %accumc.5... (idx
  %518 = mul nsw i32 %accumd.5... (idx
  %520 = mul nsw i32 %accumc.6... (idx
  %522 = mul nsw i32 %accumd.6... (idx
  %524 = mul nsw i32 %accumc.7... (idx
  %528 = mul nsw i32 %accumc.8... (idx
  %530 = mul nsw i32 %accumd.8... (idx: 24)       -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            -55                           -355                          -5                            -15                           -5                            -5                            -5                            -5                            
  %532 = mul nsw i32 %accumc.9... (idx
  %534 = mul nsw i32 %accumd.9... (idx
  %536 = mul nsw i32 %accumc.1... (idx
  %538 = mul nsw i32 %accumd.1... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %349 = mul nsw i32 %348, %de... (idx
  %357 = mul nsw i32 %298, %de... (idx
  %360 = mul nsw i32 %dec_nbl.... (idx
  %385 = mul nsw i32 %dec_al2.... (idx
  %390 = mul nsw i32 %dec_al1.... (idx
  %445 = mul nsw i32 %444, %de... (idx
  %452 = mul nsw i32 %dec_nbh.... (idx
  %477 = mul nsw i32 %dec_ah2.... (idx
  %482 = mul nsw i32 %dec_ah1.... (idx
  %496 = mul nsw i32 %accumc.0... (idx
  %498 = mul nsw i32 %accumd.0... (idx: 10)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %500 = mul nsw i32 %accumc.1... (idx
  %502 = mul nsw i32 %accumd.1... (idx
  %506 = mul nsw i32 %accumd.2... (idx
  %508 = mul nsw i32 %accumc.3... (idx
  %510 = mul nsw i32 %accumd.3... (idx
  %512 = mul nsw i32 %accumc.4... (idx
  %514 = mul nsw i32 %accumd.4... (idx: 17)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %516 = mul nsw i32 %accumc.5... (idx
  %518 = mul nsw i32 %accumd.5... (idx
  %520 = mul nsw i32 %accumc.6... (idx
  %522 = mul nsw i32 %accumd.6... (idx
  %524 = mul nsw i32 %accumc.7... (idx
  %528 = mul nsw i32 %accumc.8... (idx: 23)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %530 = mul nsw i32 %accumd.8... (idx
  %532 = mul nsw i32 %accumc.9... (idx
  %534 = mul nsw i32 %accumd.9... (idx
  %536 = mul nsw i32 %accumc.1... (idx
  %538 = mul nsw i32 %accumd.1... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %349 = mul nsw i32 %348, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 3)
  %357 = mul nsw i32 %298, %de... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 3)
  %360 = mul nsw i32 %dec_nbl.... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 2)
  %385 = mul nsw i32 %dec_al2.... (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 2)
  %390 = mul nsw i32 %dec_al1.... (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 2)
  %445 = mul nsw i32 %444, %de... (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 3)
  %452 = mul nsw i32 %dec_nbh.... (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 2)
  %477 = mul nsw i32 %dec_ah2.... (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 2)
  %482 = mul nsw i32 %dec_ah1.... (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 2)
  %496 = mul nsw i32 %accumc.0... (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 2)
  %498 = mul nsw i32 %accumd.0... (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 2)
  %500 = mul nsw i32 %accumc.1... (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 2)
  %502 = mul nsw i32 %accumd.1... (idx: 12) -> main_signed_multiply_32_12 (mux inputs: 2)
  %506 = mul nsw i32 %accumd.2... (idx: 13) -> main_signed_multiply_32_13 (mux inputs: 2)
  %508 = mul nsw i32 %accumc.3... (idx: 14) -> main_signed_multiply_32_14 (mux inputs: 2)
  %510 = mul nsw i32 %accumd.3... (idx: 15) -> main_signed_multiply_32_15 (mux inputs: 2)
  %512 = mul nsw i32 %accumc.4... (idx: 16) -> main_signed_multiply_32_16 (mux inputs: 2)
  %514 = mul nsw i32 %accumd.4... (idx: 17) -> main_signed_multiply_32_17 (mux inputs: 2)
  %516 = mul nsw i32 %accumc.5... (idx: 18) -> main_signed_multiply_32_18 (mux inputs: 2)
  %518 = mul nsw i32 %accumd.5... (idx: 19) -> main_signed_multiply_32_19 (mux inputs: 2)
  %520 = mul nsw i32 %accumc.6... (idx: 20) -> main_signed_multiply_32_20 (mux inputs: 2)
  %522 = mul nsw i32 %accumd.6... (idx: 21) -> main_signed_multiply_32_21 (mux inputs: 7)
  %524 = mul nsw i32 %accumc.7... (idx: 22) -> main_signed_multiply_32_22 (mux inputs: 37)
  %528 = mul nsw i32 %accumc.8... (idx: 23) -> main_signed_multiply_32_23 (mux inputs: 2)
  %530 = mul nsw i32 %accumd.8... (idx: 24) -> main_signed_multiply_32_24 (mux inputs: 3)
  %532 = mul nsw i32 %accumc.9... (idx: 25) -> main_signed_multiply_32_25 (mux inputs: 2)
  %534 = mul nsw i32 %accumd.9... (idx: 26) -> main_signed_multiply_32_26 (mux inputs: 2)
  %536 = mul nsw i32 %accumc.1... (idx: 27) -> main_signed_multiply_32_27 (mux inputs: 2)
  %538 = mul nsw i32 %accumd.1... (idx: 28) -> main_signed_multiply_32_28 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %379 = sub nsw i32 0, %376 (idx: 0)             -105                          -45                           
  %471 = sub nsw i32 0, %468 (idx: 1)             -105                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %379 = sub nsw i32 0, %376 (idx: 0)             1                             0                             
  %471 = sub nsw i32 0, %468 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %379 = sub nsw i32 0, %376 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 12)
  %471 = sub nsw i32 0, %468 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 6)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %307 = load i32* getelementp... (idx: 0)        0                             10                            
  %308 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %307 = load i32* getelementp... (idx: 0)        1                             0                             
  %308 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %307 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %308 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %394 = add nsw i32 %391, 192 (idx: 0)           -675                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -365                          -35                           -35                           -45                           -85                           -165                          -5                            
  %486 = add nsw i32 %483, 192 (idx: 1)           -675                          -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -365                          -35                           -35                           -45                           -85                           -165                          -5                            
  %gep57 = add i32 %gep_int55,... (idx: 2)        -680                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -370                          -40                           -40                           -50                           -90                           -170                          -10                           
  %gep60 = add i32 %gep_int58,... (idx: 3)        -680                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -370                          -40                           -40                           -50                           -90                           -170                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %394 = add nsw i32 %391, 192 (idx
  %486 = add nsw i32 %483, 192 (idx
  %gep57 = add i32 %gep_int55,... (idx
  %gep60 = add i32 %gep_int58,... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %394 = add nsw i32 %391, 192 (idx: 0) -> main_signed_add_32_0 (mux inputs: 69)
  %486 = add nsw i32 %483, 192 (idx: 1) -> main_signed_add_32_12 (mux inputs: 38)
  %gep60 = add i32 %gep_int58,... (idx: 3) -> main_signed_add_32_16 (mux inputs: 11)
  %gep57 = add i32 %gep_int55,... (idx: 2) -> main_signed_add_32_17 (mux inputs: 19)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %311 = load i32* getelementp... (idx: 0)        0                             10                            
  %312 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %311 = load i32* getelementp... (idx: 0)        1                             0                             
  %312 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %311 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %312 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %306 = mul nsw i32 %305, %30... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -370                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %306 = mul nsw i32 %305, %30... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %306 = mul nsw i32 %305, %30... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 39)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %315 = load i32* getelementp... (idx: 0)        0                             10                            
  %316 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %315 = load i32* getelementp... (idx: 0)        1                             0                             
  %316 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %315 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %316 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %309 = mul nsw i32 %308, %30... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -390                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %309 = mul nsw i32 %308, %30... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %309 = mul nsw i32 %308, %30... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 41)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %319 = load i32* getelementp... (idx: 0)        0                             10                            
  %320 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %319 = load i32* getelementp... (idx: 0)        1                             0                             
  %320 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %319 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %320 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %310 = add nsw i32 %309, %30... (idx: 0)        -690                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %310 = add nsw i32 %309, %30... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %310 = add nsw i32 %309, %30... (idx: 0) -> main_signed_add_32_0 (mux inputs: 71)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %313 = mul nsw i32 %312, %31... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -410                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %313 = mul nsw i32 %312, %31... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %313 = mul nsw i32 %312, %31... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 43)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %323 = load i32* getelementp... (idx: 0)        0                             10                            
  %324 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %323 = load i32* getelementp... (idx: 0)        1                             0                             
  %324 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %323 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %324 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %314 = add nsw i32 %310, %31... (idx: 0)        -710                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %314 = add nsw i32 %310, %31... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %314 = add nsw i32 %310, %31... (idx: 0) -> main_signed_add_32_0 (mux inputs: 73)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %317 = mul nsw i32 %316, %31... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -430                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %317 = mul nsw i32 %316, %31... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %317 = mul nsw i32 %316, %31... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 45)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %327 = load i32* getelementp... (idx: 0)        0                             10                            
  %328 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %327 = load i32* getelementp... (idx: 0)        1                             0                             
  %328 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %327 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %328 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %318 = add nsw i32 %314, %31... (idx: 0)        -730                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %318 = add nsw i32 %314, %31... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %318 = add nsw i32 %314, %31... (idx: 0) -> main_signed_add_32_0 (mux inputs: 75)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %321 = mul nsw i32 %320, %31... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -450                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %321 = mul nsw i32 %320, %31... (idx: 0)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %321 = mul nsw i32 %320, %31... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 47)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %331 = load i32* getelementp... (idx: 0)        0                             10                            
  %332 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %331 = load i32* getelementp... (idx: 0)        1                             0                             
  %332 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %331 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %332 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %322 = add nsw i32 %318, %32... (idx: 0)        -750                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %322 = add nsw i32 %318, %32... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %322 = add nsw i32 %318, %32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 77)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %325 = mul nsw i32 %324, %32... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -470                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %325 = mul nsw i32 %324, %32... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %325 = mul nsw i32 %324, %32... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 49)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %335 = load i32* getelementp... (idx: 0)        0                             10                            
  %336 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %335 = load i32* getelementp... (idx: 0)        1                             0                             
  %336 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %335 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %336 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %326 = add nsw i32 %322, %32... (idx: 0)        -770                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
  %329 = add i32 %326, %327 (idx: 1)              -770                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
  %330 = add i32 %329, %328 (idx: 2)              -770                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -380                          -40                           -40                           -50                           -110                          -190                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %326 = add nsw i32 %322, %32... (idx
  %329 = add i32 %326, %327 (idx
  %330 = add i32 %329, %328 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %326 = add nsw i32 %322, %32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 79)
  %329 = add i32 %326, %327 (idx: 1) -> main_signed_add_32_12 (mux inputs: 40)
  %330 = add i32 %329, %328 (idx: 2) -> main_signed_add_32_17 (mux inputs: 21)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %339 = load i32* getelementp... (idx: 0)        0                             10                            
  %340 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %339 = load i32* getelementp... (idx: 0)        1                             0                             
  %340 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %339 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %340 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %333 = add i32 %330, %331 (idx: 0)              -790                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -400                          -40                           -40                           -50                           -110                          -210                          -10                           
  %334 = add i32 %333, %332 (idx: 1)              -790                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -400                          -40                           -40                           -50                           -110                          -210                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %333 = add i32 %330, %331 (idx
  %334 = add i32 %333, %332 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %333 = add i32 %330, %331 (idx: 0) -> main_signed_add_32_0 (mux inputs: 81)
  %334 = add i32 %333, %332 (idx: 1) -> main_signed_add_32_12 (mux inputs: 42)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %343 = load i32* getelementp... (idx: 0)        0                             10                            
  %344 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %343 = load i32* getelementp... (idx: 0)        1                             0                             
  %344 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %343 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %344 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %337 = add i32 %334, %335 (idx: 0)              -810                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -420                          -40                           -40                           -50                           -110                          -210                          -10                           
  %338 = add i32 %337, %336 (idx: 1)              -810                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -420                          -40                           -40                           -50                           -110                          -210                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %337 = add i32 %334, %335 (idx
  %338 = add i32 %337, %336 (idx: 1)              0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = add i32 %334, %335 (idx: 0) -> main_signed_add_32_0 (mux inputs: 83)
  %338 = add i32 %337, %336 (idx: 1) -> main_signed_add_32_12 (mux inputs: 44)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %341 = add i32 %338, %339 (idx: 0)              -830                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -440                          -40                           -40                           -50                           -110                          -210                          -10                           
  %342 = add i32 %341, %340 (idx: 1)              -830                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -440                          -40                           -40                           -50                           -110                          -210                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %341 = add i32 %338, %339 (idx
  %342 = add i32 %341, %340 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %341 = add i32 %338, %339 (idx: 0) -> main_signed_add_32_0 (mux inputs: 85)
  %342 = add i32 %341, %340 (idx: 1) -> main_signed_add_32_12 (mux inputs: 46)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %345 = add i32 %342, %343 (idx: 0)              -850                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -460                          -40                           -40                           -50                           -110                          -210                          -10                           
  %346 = add i32 %345, %344 (idx: 1)              -850                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -460                          -40                           -40                           -50                           -110                          -210                          -10                           
  %351 = add nsw i32 %350, %34... (idx: 2)        -850                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -460                          -40                           -40                           -50                           -110                          -210                          -10                           
  %359 = add nsw i32 %358, %35... (idx: 3)        -850                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -460                          -40                           -40                           -50                           -110                          -210                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %345 = add i32 %342, %343 (idx
  %346 = add i32 %345, %344 (idx
  %351 = add nsw i32 %350, %34... (idx
  %359 = add nsw i32 %358, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %345 = add i32 %342, %343 (idx: 0) -> main_signed_add_32_0 (mux inputs: 87)
  %346 = add i32 %345, %344 (idx: 1) -> main_signed_add_32_12 (mux inputs: 48)
  %359 = add nsw i32 %358, %35... (idx: 3) -> main_signed_add_32_16 (mux inputs: 13)
  %351 = add nsw i32 %350, %34... (idx: 2) -> main_signed_add_32_17 (mux inputs: 23)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep36 = add i32 %gep_int34,... (idx: 0)        -870                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -480                          -40                           -40                           -50                           -130                          -230                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep36 = add i32 %gep_int34,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep36 = add i32 %gep_int34,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 89)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %354 = load i32* %353, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %354 = load i32* %353, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %354 = load i32* %353, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep39 = add i32 %gep_int37,... (idx: 0)        -890                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -480                          -40                           -40                           -50                           -130                          -230                          -10                           
  %gep42 = add i32 %gep_int40,... (idx: 1)        -890                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -480                          -40                           -40                           -50                           -130                          -230                          -10                           
  %gep48 = add i32 %gep_int46,... (idx: 2)        -890                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -480                          -40                           -40                           -50                           -130                          -230                          -10                           
  %gep51 = add i32 %gep_int49,... (idx: 3)        -890                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -480                          -40                           -40                           -50                           -130                          -230                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep39 = add i32 %gep_int37,... (idx
  %gep42 = add i32 %gep_int40,... (idx
  %gep48 = add i32 %gep_int46,... (idx
  %gep51 = add i32 %gep_int49,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep39 = add i32 %gep_int37,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 91)
  %gep42 = add i32 %gep_int40,... (idx: 1) -> main_signed_add_32_12 (mux inputs: 50)
  %gep51 = add i32 %gep_int49,... (idx: 3) -> main_signed_add_32_16 (mux inputs: 15)
  %gep48 = add i32 %gep_int46,... (idx: 2) -> main_signed_add_32_17 (mux inputs: 25)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %363 = load i32* %362, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %363 = load i32* %362, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %363 = load i32* %362, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %364 = add nsw i32 %361, %36... (idx: 0)        -910                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -500                          -40                           -40                           -50                           -150                          -250                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %364 = add nsw i32 %361, %36... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %364 = add nsw i32 %361, %36... (idx: 0) -> main_signed_add_32_0 (mux inputs: 93)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %355 = mul nsw i32 %354, %de... (idx: 0)        -30                           -25                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -490                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %355 = mul nsw i32 %354, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %355 = mul nsw i32 %354, %de... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 51)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %372 = sub i32 9, %369 (idx: 0)                 -115                          -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %372 = sub i32 9, %369 (idx: 0)                 1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %372 = sub i32 9, %369 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %375 = add nsw i32 %347, %35... (idx: 0)        -940                          -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -510                          -50                           -50                           -60                           -160                          -255                          -10                           
  %399 = add nsw i32 %356, %35... (idx: 1)        -940                          -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -510                          -50                           -50                           -60                           -155                          -260                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %375 = add nsw i32 %347, %35... (idx
  %399 = add nsw i32 %356, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %375 = add nsw i32 %347, %35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 95)
  %399 = add nsw i32 %356, %35... (idx: 1) -> main_signed_add_32_12 (mux inputs: 52)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %377 = mul nsw i32 %dec_plt1... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -510                          -20                           -30                           -20                           -20                           -20                           -20                           
  %381 = mul nsw i32 %dec_plt2... (idx: 1)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -70                           -510                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %377 = mul nsw i32 %dec_plt1... (idx
  %381 = mul nsw i32 %dec_plt2... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %381 = mul nsw i32 %dec_plt2... (idx: 1) -> main_signed_multiply_32_21 (mux inputs: 9)
  %377 = mul nsw i32 %dec_plt1... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 53)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %371 = load i32* %370, align... (idx: 0)        -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %371 = load i32* %370, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %371 = load i32* %370, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep45 = add i32 %gep_int43,... (idx: 0)        -950                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -520                          -40                           -40                           -50                           -150                          -250                          -10                           
  %wd4.0.i7.i = add nsw i32 %3... (idx: 1)        -950                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -520                          -40                           -40                           -50                           -150                          -250                          -10                           
  %387 = add nsw i32 %wd4.0.i7... (idx: 2)        -950                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -520                          -40                           -40                           -50                           -150                          -250                          -10                           
  %apl1.0.i3.i = add nsw i32 %... (idx: 3)        -950                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -520                          -40                           -40                           -50                           -150                          -250                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep45 = add i32 %gep_int43,... (idx
  %wd4.0.i7.i = add nsw i32 %3... (idx
  %387 = add nsw i32 %wd4.0.i7... (idx
  %apl1.0.i3.i = add nsw i32 %... (idx: 3)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep45 = add i32 %gep_int43,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 97)
  %wd4.0.i7.i = add nsw i32 %3... (idx: 1) -> main_signed_add_32_12 (mux inputs: 54)
  %apl1.0.i3.i = add nsw i32 %... (idx: 3) -> main_signed_add_32_16 (mux inputs: 17)
  %387 = add nsw i32 %wd4.0.i7... (idx: 2) -> main_signed_add_32_17 (mux inputs: 27)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %395 = sub nsw i32 15360, %.... (idx: 0)        -125                          -55                           
  %397 = sub nsw i32 0, %395 (idx: 1)             -125                          -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %395 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %397 = sub nsw i32 0, %395 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %395 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 14)
  %397 = sub nsw i32 0, %395 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 7)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %400 = load i32* getelementp... (idx: 0)        0                             10                            
  %401 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %400 = load i32* getelementp... (idx: 0)        1                             0                             
  %401 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %400 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %401 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %449 = load i32* %448, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %449 = load i32* %448, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %449 = load i32* %448, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %455 = load i32* %454, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %455 = load i32* %454, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %455 = load i32* %454, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %403 = load i32* getelementp... (idx: 0)        0                             10                            
  %404 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %403 = load i32* getelementp... (idx: 0)        1                             0                             
  %404 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %403 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %404 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %456 = add nsw i32 %453, %45... (idx: 0)        -970                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %456 = add nsw i32 %453, %45... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %456 = add nsw i32 %453, %45... (idx: 0) -> main_signed_add_32_0 (mux inputs: 99)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %450 = mul nsw i32 %449, %de... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -530                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %450 = mul nsw i32 %449, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %450 = mul nsw i32 %449, %de... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 55)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %464 = sub i32 11, %461 (idx: 0)                -135                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %464 = sub i32 11, %461 (idx: 0)                1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %464 = sub i32 11, %461 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %407 = load i32* getelementp... (idx: 0)        0                             10                            
  %408 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %407 = load i32* getelementp... (idx: 0)        1                             0                             
  %408 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %407 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %408 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %402 = mul nsw i32 %401, %40... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -550                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %402 = mul nsw i32 %401, %40... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %402 = mul nsw i32 %401, %40... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 57)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %463 = load i32* %462, align... (idx: 0)        -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %463 = load i32* %462, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %463 = load i32* %462, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %411 = load i32* getelementp... (idx: 0)        0                             10                            
  %412 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %411 = load i32* getelementp... (idx: 0)        1                             0                             
  %412 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %411 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %412 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep54 = add i32 %gep_int52,... (idx: 0)        -990                          -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep54 = add i32 %gep_int52,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep54 = add i32 %gep_int52,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 101)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %405 = mul nsw i32 %404, %40... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -570                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %405 = mul nsw i32 %404, %40... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %405 = mul nsw i32 %404, %40... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 59)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %415 = load i32* getelementp... (idx: 0)        0                             10                            
  %416 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %415 = load i32* getelementp... (idx: 0)        1                             0                             
  %416 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %415 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %416 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %406 = add nsw i32 %405, %40... (idx: 0)        -1010                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %406 = add nsw i32 %405, %40... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %406 = add nsw i32 %405, %40... (idx: 0) -> main_signed_add_32_0 (mux inputs: 103)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %409 = mul nsw i32 %408, %40... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -590                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %409 = mul nsw i32 %408, %40... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %409 = mul nsw i32 %408, %40... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 61)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %419 = load i32* getelementp... (idx: 0)        0                             10                            
  %420 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %419 = load i32* getelementp... (idx: 0)        1                             0                             
  %420 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %419 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %420 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %410 = add nsw i32 %406, %40... (idx: 0)        -1030                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %410 = add nsw i32 %406, %40... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %410 = add nsw i32 %406, %40... (idx: 0) -> main_signed_add_32_0 (mux inputs: 105)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %413 = mul nsw i32 %412, %41... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -610                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %413 = mul nsw i32 %412, %41... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %413 = mul nsw i32 %412, %41... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 63)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %423 = load i32* getelementp... (idx: 0)        0                             10                            
  %424 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %423 = load i32* getelementp... (idx: 0)        1                             0                             
  %424 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %423 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %424 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %414 = add nsw i32 %410, %41... (idx: 0)        -1050                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %414 = add nsw i32 %410, %41... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %414 = add nsw i32 %410, %41... (idx: 0) -> main_signed_add_32_0 (mux inputs: 107)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %417 = mul nsw i32 %416, %41... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -630                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %417 = mul nsw i32 %416, %41... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %417 = mul nsw i32 %416, %41... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 65)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %427 = load i32* getelementp... (idx: 0)        0                             10                            
  %428 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %427 = load i32* getelementp... (idx: 0)        1                             0                             
  %428 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %427 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %428 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %418 = add nsw i32 %414, %41... (idx: 0)        -1070                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %418 = add nsw i32 %414, %41... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %418 = add nsw i32 %414, %41... (idx: 0) -> main_signed_add_32_0 (mux inputs: 109)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %421 = mul nsw i32 %420, %41... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -650                          -20                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %421 = mul nsw i32 %420, %41... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %421 = mul nsw i32 %420, %41... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 67)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %431 = load i32* getelementp... (idx: 0)        0                             10                            
  %432 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %431 = load i32* getelementp... (idx: 0)        1                             0                             
  %432 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %431 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %432 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %422 = add nsw i32 %418, %42... (idx: 0)        -1090                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
  %425 = add i32 %422, %423 (idx: 1)              -1090                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
  %426 = add i32 %425, %424 (idx: 2)              -1090                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -540                          -40                           -40                           -50                           -170                          -270                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %422 = add nsw i32 %418, %42... (idx
  %425 = add i32 %422, %423 (idx
  %426 = add i32 %425, %424 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %422 = add nsw i32 %418, %42... (idx: 0) -> main_signed_add_32_0 (mux inputs: 111)
  %425 = add i32 %422, %423 (idx: 1) -> main_signed_add_32_12 (mux inputs: 56)
  %426 = add i32 %425, %424 (idx: 2) -> main_signed_add_32_17 (mux inputs: 29)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %435 = load i32* getelementp... (idx: 0)        0                             10                            
  %436 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %435 = load i32* getelementp... (idx: 0)        1                             0                             
  %436 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %435 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %436 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %429 = add i32 %426, %427 (idx: 0)              -1110                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -560                          -40                           -40                           -50                           -170                          -290                          -10                           
  %430 = add i32 %429, %428 (idx: 1)              -1110                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -560                          -40                           -40                           -50                           -170                          -290                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %429 = add i32 %426, %427 (idx
  %430 = add i32 %429, %428 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %429 = add i32 %426, %427 (idx: 0) -> main_signed_add_32_0 (mux inputs: 113)
  %430 = add i32 %429, %428 (idx: 1) -> main_signed_add_32_12 (mux inputs: 58)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %439 = load i32* getelementp... (idx: 0)        0                             10                            
  %440 = load i32* getelementp... (idx: 1)        0                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %439 = load i32* getelementp... (idx: 0)        1                             0                             
  %440 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %439 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %440 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %433 = add i32 %430, %431 (idx: 0)              -1130                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -580                          -40                           -40                           -50                           -170                          -290                          -10                           
  %434 = add i32 %433, %432 (idx: 1)              -1130                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -580                          -40                           -40                           -50                           -170                          -290                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %433 = add i32 %430, %431 (idx: 0)              1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %434 = add i32 %433, %432 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %433 = add i32 %430, %431 (idx: 0) -> main_signed_add_32_0 (mux inputs: 115)
  %434 = add i32 %433, %432 (idx: 1) -> main_signed_add_32_12 (mux inputs: 60)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %437 = add i32 %434, %435 (idx: 0)              -1150                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -600                          -40                           -40                           -50                           -170                          -290                          -10                           
  %438 = add i32 %437, %436 (idx: 1)              -1150                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -600                          -40                           -40                           -50                           -170                          -290                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %437 = add i32 %434, %435 (idx
  %438 = add i32 %437, %436 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %437 = add i32 %434, %435 (idx: 0) -> main_signed_add_32_0 (mux inputs: 117)
  %438 = add i32 %437, %436 (idx: 1) -> main_signed_add_32_12 (mux inputs: 62)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %441 = add i32 %438, %439 (idx: 0)              -1170                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -620                          -40                           -40                           -50                           -170                          -290                          -10                           
  %442 = add i32 %441, %440 (idx: 1)              -1170                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -620                          -40                           -40                           -50                           -170                          -290                          -10                           
  %447 = add nsw i32 %446, %44... (idx: 2)        -1170                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -620                          -40                           -40                           -50                           -170                          -290                          -10                           
  %467 = add nsw i32 %443, %45... (idx: 3)        -1180                         -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -630                          -50                           -50                           -60                           -180                          -300                          -10                           
  %491 = add nsw i32 %451, %44... (idx: 4)        -1180                         -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -630                          -50                           -50                           -60                           -180                          -300                          -10                           
  %493 = add nsw i32 %491, %35... (idx: 5)        -1180                         -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -30                           -630                          -50                           -50                           -60                           -180                          -300                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %441 = add i32 %438, %439 (idx
  %442 = add i32 %441, %440 (idx
  %447 = add nsw i32 %446, %44... (idx
  %467 = add nsw i32 %443, %45... (idx
  %491 = add nsw i32 %451, %44... (idx
  %493 = add nsw i32 %491, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %441 = add i32 %438, %439 (idx: 0) -> main_signed_add_32_0 (mux inputs: 119)
  %442 = add i32 %441, %440 (idx: 1) -> main_signed_add_32_12 (mux inputs: 64)
  %493 = add nsw i32 %491, %35... (idx: 5) -> main_signed_add_32_14 (mux inputs: 6)
  %491 = add nsw i32 %451, %44... (idx: 4) -> main_signed_add_32_15 (mux inputs: 7)
  %467 = add nsw i32 %443, %45... (idx: 3) -> main_signed_add_32_16 (mux inputs: 19)
  %447 = add nsw i32 %446, %44... (idx: 2) -> main_signed_add_32_17 (mux inputs: 31)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %469 = mul nsw i32 %dec_ph1.... (idx: 0)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -670                          -20                           -30                           -20                           -20                           -20                           -20                           
  %473 = mul nsw i32 %dec_ph2.... (idx: 1)        -30                           -30                           -20                           -20                           -20                           -30                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -90                           -670                          -20                           -30                           -20                           -20                           -20                           -20                           
  %494 = mul nsw i32 %492, 12 (idx: 2)            -25                           -25                           -15                           -15                           -15                           -25                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -85                           -665                          -15                           -25                           -15                           -15                           -15                           -15                           
  %495 = mul nsw i32 %493, -44 (idx: 3)           -25                           -25                           -15                           -15                           -15                           -25                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -15                           -85                           -665                          -15                           -25                           -15                           -15                           -15                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    
  %469 = mul nsw i32 %dec_ph1.... (idx
  %473 = mul nsw i32 %dec_ph2.... (idx
  %494 = mul nsw i32 %492, 12 (idx
  %495 = mul nsw i32 %493, -44 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %494 = mul nsw i32 %492, 12 (idx: 2) -> main_signed_multiply_32_0 (mux inputs: 4)
  %495 = mul nsw i32 %493, -44 (idx: 3) -> main_signed_multiply_32_1 (mux inputs: 4)
  %473 = mul nsw i32 %dec_ph2.... (idx: 1) -> main_signed_multiply_32_21 (mux inputs: 11)
  %469 = mul nsw i32 %dec_ph1.... (idx: 0) -> main_signed_multiply_32_22 (mux inputs: 69)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %492 = sub nsw i32 %359, %49... (idx: 0)        -160                          -80                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %492 = sub nsw i32 %359, %49... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %492 = sub nsw i32 %359, %49... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %wd4.0.i.i = add nsw i32 %47... (idx: 0)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %479 = add nsw i32 %wd4.0.i.... (idx: 1)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %apl1.0.i.i = add nsw i32 %4... (idx: 2)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %497 = add nsw i32 %496, %49... (idx: 3)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %499 = add nsw i32 %498, %49... (idx: 4)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %501 = add nsw i32 %500, %49... (idx: 5)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %503 = add nsw i32 %502, %49... (idx: 6)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %505 = add nsw i32 %504, %50... (idx: 7)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %507 = add nsw i32 %506, %50... (idx: 8)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %509 = add nsw i32 %508, %50... (idx: 9)        -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %511 = add nsw i32 %510, %50... (idx: 10)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %513 = add nsw i32 %512, %50... (idx: 11)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %515 = add nsw i32 %514, %51... (idx: 12)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %517 = add nsw i32 %516, %51... (idx: 13)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %519 = add nsw i32 %518, %51... (idx: 14)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %521 = add nsw i32 %520, %51... (idx: 15)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %523 = add nsw i32 %522, %51... (idx: 16)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %525 = add nsw i32 %524, %52... (idx: 17)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
  %527 = add nsw i32 %526, %52... (idx: 18)       -1190                         -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -20                           -640                          -40                           -60                           -70                           -190                          -310                          -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %wd4.0.i.i = add nsw i32 %47... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %479 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i = add nsw i32 %4... (idx
  %497 = add nsw i32 %496, %49... (idx
  %499 = add nsw i32 %498, %49... (idx
  %501 = add nsw i32 %500, %49... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %503 = add nsw i32 %502, %49... (idx
  %505 = add nsw i32 %504, %50... (idx
  %507 = add nsw i32 %506, %50... (idx
  %509 = add nsw i32 %508, %50... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %511 = add nsw i32 %510, %50... (idx
  %513 = add nsw i32 %512, %50... (idx
  %515 = add nsw i32 %514, %51... (idx
  %517 = add nsw i32 %516, %51... (idx
  %519 = add nsw i32 %518, %51... (idx
  %521 = add nsw i32 %520, %51... (idx
  %523 = add nsw i32 %522, %51... (idx
  %525 = add nsw i32 %524, %52... (idx
  %527 = add nsw i32 %526, %52... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %wd4.0.i.i = add nsw i32 %47... (idx: 0) -> main_signed_add_32_0 (mux inputs: 121)
  %479 = add nsw i32 %wd4.0.i.... (idx: 1) -> main_signed_add_32_1 (mux inputs: 4)
  %apl1.0.i.i = add nsw i32 %4... (idx: 2) -> main_signed_add_32_2 (mux inputs: 4)
  %497 = add nsw i32 %496, %49... (idx: 3) -> main_signed_add_32_3 (mux inputs: 4)
  %499 = add nsw i32 %498, %49... (idx: 4) -> main_signed_add_32_4 (mux inputs: 4)
  %501 = add nsw i32 %500, %49... (idx: 5) -> main_signed_add_32_5 (mux inputs: 4)
  %503 = add nsw i32 %502, %49... (idx: 6) -> main_signed_add_32_6 (mux inputs: 4)
  %505 = add nsw i32 %504, %50... (idx: 7) -> main_signed_add_32_7 (mux inputs: 4)
  %507 = add nsw i32 %506, %50... (idx: 8) -> main_signed_add_32_8 (mux inputs: 4)
  %509 = add nsw i32 %508, %50... (idx: 9) -> main_signed_add_32_9 (mux inputs: 4)
  %511 = add nsw i32 %510, %50... (idx: 10) -> main_signed_add_32_10 (mux inputs: 4)
  %513 = add nsw i32 %512, %50... (idx: 11) -> main_signed_add_32_11 (mux inputs: 4)
  %515 = add nsw i32 %514, %51... (idx: 12) -> main_signed_add_32_12 (mux inputs: 66)
  %517 = add nsw i32 %516, %51... (idx: 13) -> main_signed_add_32_13 (mux inputs: 6)
  %519 = add nsw i32 %518, %51... (idx: 14) -> main_signed_add_32_14 (mux inputs: 8)
  %521 = add nsw i32 %520, %51... (idx: 15) -> main_signed_add_32_15 (mux inputs: 9)
  %523 = add nsw i32 %522, %51... (idx: 16) -> main_signed_add_32_16 (mux inputs: 21)
  %525 = add nsw i32 %524, %52... (idx: 17) -> main_signed_add_32_17 (mux inputs: 33)
  %527 = add nsw i32 %526, %52... (idx: 18) -> main_signed_add_32_18 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %540, i32* %542, a... (idx: 0)        -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %540, i32* %542, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %540, i32* %542, a... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %529 = add nsw i32 %528, %52... (idx: 0)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
  %531 = add nsw i32 %530, %52... (idx: 1)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
  %533 = add nsw i32 %532, %52... (idx: 2)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
  %535 = add nsw i32 %534, %53... (idx: 3)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
  %537 = add nsw i32 %536, %53... (idx: 4)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
  %539 = add nsw i32 %538, %53... (idx: 5)        -1210                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -660                          -60                           -80                           -90                           -210                          -330                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %529 = add nsw i32 %528, %52... (idx
  %531 = add nsw i32 %530, %52... (idx
  %533 = add nsw i32 %532, %52... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             
  %535 = add nsw i32 %534, %53... (idx
  %537 = add nsw i32 %536, %53... (idx
  %539 = add nsw i32 %538, %53... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %529 = add nsw i32 %528, %52... (idx: 0) -> main_signed_add_32_0 (mux inputs: 123)
  %531 = add nsw i32 %530, %52... (idx: 1) -> main_signed_add_32_12 (mux inputs: 68)
  %539 = add nsw i32 %538, %53... (idx: 5) -> main_signed_add_32_14 (mux inputs: 10)
  %537 = add nsw i32 %536, %53... (idx: 4) -> main_signed_add_32_15 (mux inputs: 11)
  %535 = add nsw i32 %534, %53... (idx: 3) -> main_signed_add_32_16 (mux inputs: 23)
  %533 = add nsw i32 %532, %52... (idx: 2) -> main_signed_add_32_17 (mux inputs: 35)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %487 = sub nsw i32 15360, %.... (idx: 0)        -165                          -65                           
  %489 = sub nsw i32 0, %487 (idx: 1)             -165                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %487 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %489 = sub nsw i32 0, %487 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %487 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 18)
  %489 = sub nsw i32 0, %487 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %541, i32* %544, a... (idx: 0)        -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %541, i32* %544, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %541, i32* %544, a... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %553 = add nsw i32 %i.03, 1 (idx: 0)            -1235                         -45                           -45                           -45                           -45                           -45                           -45                           -45                           -45                           -45                           -45                           -45                           -685                          -65                           -105                          -115                          -235                          -355                          -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %553 = add nsw i32 %i.03, 1 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %553 = add nsw i32 %i.03, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 124)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep63 = add i32 %gep_int61,... (idx: 0)        -1240                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -680                          -60                           -100                          -110                          -230                          -350                          -20                           
  %gep66 = add i32 %gep_int64,... (idx: 1)        -1240                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -680                          -60                           -100                          -110                          -230                          -350                          -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep63 = add i32 %gep_int61,... (idx
  %gep66 = add i32 %gep_int64,... (idx: 1)        0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep63 = add i32 %gep_int61,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 126)
  %gep66 = add i32 %gep_int64,... (idx: 1) -> main_signed_add_32_12 (mux inputs: 70)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.0 = add nsw i3... (idx: 0)        -1270                         -50                           -50                           -50                           -50                           -50                           -50                           -50                           -50                           -50                           -50                           -50                           -710                          -70                           -110                          -120                          -240                          -360                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.0 = add nsw i3... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.main_result.0 = add nsw i3... (idx: 0) -> main_signed_add_32_0 (mux inputs: 128)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %560 = add nsw i32 %i.11, 1 (idx: 0)            -1275                         -35                           -35                           -35                           -35                           -35                           -35                           -35                           -35                           -35                           -35                           -35                           -695                          -55                           -95                           -105                          -225                          -345                          -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %560 = add nsw i32 %i.11, 1 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %560 = add nsw i32 %i.11, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 129)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  %555 = load i32* %554, align... (idx: 0)        -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  %555 = load i32* %554, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %555 = load i32* %554, align... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep69 = add i32 %gep_int67,... (idx: 0)        -1290                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -700                          -60                           -100                          -110                          -230                          -350                          -20                           
  %gep72 = add i32 %gep_int70,... (idx: 1)        -1290                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -700                          -60                           -100                          -110                          -230                          -350                          -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep69 = add i32 %gep_int67,... (idx
  %gep72 = add i32 %gep_int70,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep69 = add i32 %gep_int67,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 131)
  %gep72 = add i32 %gep_int70,... (idx: 1) -> main_signed_add_32_12 (mux inputs: 72)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %557 = load i32* %556, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %557 = load i32* %556, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %557 = load i32* %556, align... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.2 = add nsw i3... (idx: 0)        -1310                         -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -40                           -720                          -60                           -100                          -110                          -230                          -350                          -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.2 = add nsw i3... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.main_result.2 = add nsw i3... (idx: 0) -> main_signed_add_32_0 (mux inputs: 133)

