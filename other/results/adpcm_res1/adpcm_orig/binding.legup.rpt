//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Mar 31 08:12:08 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decis_levl_local_mem_dual_port1                             
ilb_table_local_mem_dual_port 1                             
mem_dual_port                 2                             
qq2_code2_table_local_mem_dual_port1                             
qq4_code4_table_local_mem_dual_port1                             
qq6_code6_table_local_mem_dual_port1                             
result_local_mem_dual_port    1                             
signed_add_32                 19                            
signed_divide_32              1                             
signed_multiply_32            31                            
signed_subtract_32            2                             
test_data_local_mem_dual_port 2                             
test_result_local_mem_dual_port1                             
tqmf_local_mem_dual_port      2                             
wh_code_table_local_mem_dual_port1                             
wl_code_table_local_mem_dual_port1                             
--------------------------------------------------------------------------------
Function: legup_memset_4_i64
--------------------------------------------------------------------------------
Function unit type:           Number Required               
legup_memset_4_i64_0_1_local_mem_dual_port1                             
legup_memset_4_i64_0_2_local_mem_dual_port1                             
legup_memset_4_i64_0_3_local_mem_dual_port1                             
legup_memset_4_i64_0_c_local_mem_dual_port2                             
legup_memset_4_i64_0_s_local_mem_dual_port2                             
signed_add_32                 1                             
signed_add_64                 1                             

Running Bipartite Weighted Matching on function: legup_memset_4_i64
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  store i8* %m, i8** %1, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8* %m, i8** %1, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  store i8 %c1, i8* %2, align ... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i8 %c1, i8* %2, align ... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %n, i64* %3, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %n, i64* %3, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_1_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  %14 = load i8** %1, align 4 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0
  %14 = load i8** %1, align 4 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %14 = load i8** %1, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_1_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_2_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0
  %4 = load i8* %2, align 1 (idx: 0)              1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i8* %2, align 1 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_2_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %16 = load i64* %3, align 8 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %16 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load i64* %3, align 8 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %17, i64* %3, alig... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %17, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %17, i64* %3, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %5, i32* %c, align... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %5, i32* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %5, i32* %c, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %15, i32** %s, al... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %15, i32** %s, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32* %15, i32** %s, al... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %6 = load i32* %c, align 4 (idx: 0)             100                           100                           
  %8 = load i32* %c, align 4 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %6 = load i32* %c, align 4 (idx: 0)             1                             0                             
  %8 = load i32* %c, align 4 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %6 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 2)
  %8 = load i32* %c, align 4 (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %9, i32* %c, align... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %9, i32* %c, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %9, i32* %c, align... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %10 = load i32* %c, align 4 (idx: 0)            100                           100                           
  %12 = load i32* %c, align 4 (idx: 1)            100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %10 = load i32* %c, align 4 (idx: 0)            1                             0                             
  %12 = load i32* %c, align 4 (idx: 1)            0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 3)
  %12 = load i32* %c, align 4 (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__0
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %13, i32* %c, alig... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  store i32 %13, i32* %c, alig... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %13, i32* %c, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %19 = load i64* %3, align 8 (idx: 0)            100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  %19 = load i64* %3, align 8 (idx: 0)            1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %19 = load i64* %3, align 8 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: legup_memset_4_i64_0_3_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %20, i64* %3, alig... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0
  store i64 %20, i64* %3, alig... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i64 %20, i64* %3, alig... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_3_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_legup_memset_4_i64_BB__18
Binding functional unit type: signed_add_64
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_64_0
  %20 = add i64 %19, -1 (idx: 0)                  100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_64_0
  %20 = add i64 %19, -1 (idx: 0)                  1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = add i64 %19, -1 (idx: 0) -> legup_memset_4_i64_signed_add_64_0 (mux inputs: 1)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_c_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %23 = load i32* %c, align 4 (idx: 0)            100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_1
  %23 = load i32* %c, align 4 (idx: 0)            1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %23 = load i32* %c, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_c_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  %24 = load i32** %s, align 4 (idx: 0)           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  %24 = load i32** %s, align 4 (idx: 0)           1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %24 = load i32** %s, align 4 (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: legup_memset_4_i64_0_s_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %25, i32** %s, al... (idx: 0)        100                           100                           
  store i32 %23, i32* %24, ali... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1
  store i32* %25, i32** %s, al... (idx: 0)        1                             0                             
  store i32 %23, i32* %24, ali... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32* %25, i32** %s, al... (idx: 0) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %23, i32* %24, ali... (idx: 1) -> legup_memset_4_i64_legup_memset_4_i64_0_s_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_legup_memset_4_i64_BB__22
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_32_0
  %gep = add i32 %gep_int, 4 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  legup_memset_4_i64_signed_add_32_0
  %gep = add i32 %gep_int, 4 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, 4 (idx: 0) -> legup_memset_4_i64_signed_add_32_0 (mux inputs: 1)

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        100                           100                           
  store i32 0, i32* getelement... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 0, i32* getelement... (idx: 0)        1                             0                             
  store i32 0, i32* getelement... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 0, i32* getelement... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load i32* getelementpt... (idx: 0)        100                           100                           
  %82 = load i32* getelementpt... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %81 = load i32* getelementpt... (idx: 0)        1                             0                             
  %82 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %81 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %82 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %31 = mul nsw i32 %25, 12 (idx
  %32 = mul nsw i32 %24, -44 (idx
  %33 = mul nsw i32 %23, -44 (idx
  %35 = mul nsw i32 %22, 212 (idx: 3)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %37 = mul nsw i32 %21, 48 (idx: 4)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %39 = mul nsw i32 %20, -624 (idx
  %43 = mul nsw i32 %18, 1448 (idx: 6)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %45 = mul nsw i32 %17, -840 (idx: 7)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %47 = mul nsw i32 %16, -3220 (idx
  %49 = mul nsw i32 %15, 3804 (idx
  %51 = mul nsw i32 %14, 15504 (idx
  %53 = mul nsw i32 %13, 15504 (idx: 11)          100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %55 = mul nsw i32 %12, 3804 (idx
  %57 = mul nsw i32 %11, -3220 (idx
  %59 = mul nsw i32 %10, -840 (idx: 14)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %61 = mul nsw i32 %9, 1448 (idx: 15)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %65 = mul nsw i32 %7, -624 (idx
  %67 = mul nsw i32 %6, 48 (idx: 17)              100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %69 = mul nsw i32 %5, 212 (idx
  %71 = mul nsw i32 %4, -44 (idx
  %73 = mul nsw i32 %3, -44 (idx
  %75 = mul nsw i32 %2, 12 (idx
  %105 = mul i32 %al1.0, %rlt1... (idx
  %106 = mul i32 %al2.0, %rlt2... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %31 = mul nsw i32 %25, 12 (idx
  %32 = mul nsw i32 %24, -44 (idx
  %33 = mul nsw i32 %23, -44 (idx
  %35 = mul nsw i32 %22, 212 (idx
  %37 = mul nsw i32 %21, 48 (idx
  %39 = mul nsw i32 %20, -624 (idx
  %43 = mul nsw i32 %18, 1448 (idx
  %45 = mul nsw i32 %17, -840 (idx
  %47 = mul nsw i32 %16, -3220 (idx
  %49 = mul nsw i32 %15, 3804 (idx
  %51 = mul nsw i32 %14, 15504 (idx
  %53 = mul nsw i32 %13, 15504 (idx
  %55 = mul nsw i32 %12, 3804 (idx: 12)           0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %57 = mul nsw i32 %11, -3220 (idx
  %59 = mul nsw i32 %10, -840 (idx
  %61 = mul nsw i32 %9, 1448 (idx
  %65 = mul nsw i32 %7, -624 (idx
  %67 = mul nsw i32 %6, 48 (idx
  %69 = mul nsw i32 %5, 212 (idx
  %71 = mul nsw i32 %4, -44 (idx
  %73 = mul nsw i32 %3, -44 (idx
  %75 = mul nsw i32 %2, 12 (idx
  %105 = mul i32 %al1.0, %rlt1... (idx: 22)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             
  %106 = mul i32 %al2.0, %rlt2... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %31 = mul nsw i32 %25, 12 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 1)
  %32 = mul nsw i32 %24, -44 (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 1)
  %33 = mul nsw i32 %23, -44 (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 1)
  %35 = mul nsw i32 %22, 212 (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 1)
  %37 = mul nsw i32 %21, 48 (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 1)
  %39 = mul nsw i32 %20, -624 (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 1)
  %43 = mul nsw i32 %18, 1448 (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 1)
  %45 = mul nsw i32 %17, -840 (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 1)
  %47 = mul nsw i32 %16, -3220 (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 1)
  %49 = mul nsw i32 %15, 3804 (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 1)
  %51 = mul nsw i32 %14, 15504 (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 1)
  %53 = mul nsw i32 %13, 15504 (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 1)
  %55 = mul nsw i32 %12, 3804 (idx: 12) -> main_signed_multiply_32_12 (mux inputs: 1)
  %57 = mul nsw i32 %11, -3220 (idx: 13) -> main_signed_multiply_32_13 (mux inputs: 1)
  %59 = mul nsw i32 %10, -840 (idx: 14) -> main_signed_multiply_32_14 (mux inputs: 1)
  %61 = mul nsw i32 %9, 1448 (idx: 15) -> main_signed_multiply_32_15 (mux inputs: 1)
  %65 = mul nsw i32 %7, -624 (idx: 16) -> main_signed_multiply_32_16 (mux inputs: 1)
  %67 = mul nsw i32 %6, 48 (idx: 17) -> main_signed_multiply_32_17 (mux inputs: 1)
  %69 = mul nsw i32 %5, 212 (idx: 18) -> main_signed_multiply_32_18 (mux inputs: 1)
  %71 = mul nsw i32 %4, -44 (idx: 19) -> main_signed_multiply_32_19 (mux inputs: 1)
  %73 = mul nsw i32 %3, -44 (idx: 20) -> main_signed_multiply_32_20 (mux inputs: 1)
  %75 = mul nsw i32 %2, 12 (idx: 21) -> main_signed_multiply_32_21 (mux inputs: 1)
  %105 = mul i32 %al1.0, %rlt1... (idx: 22) -> main_signed_multiply_32_22 (mux inputs: 2)
  %106 = mul i32 %al2.0, %rlt2... (idx: 23) -> main_signed_multiply_32_23 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load i32* getelementpt... (idx: 0)        100                           100                           
  %85 = load i32* getelementpt... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %84 = load i32* getelementpt... (idx: 0)        1                             0                             
  %85 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %84 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %85 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep = add i32 %gep_int, %ge... (idx
  %gep3 = add i32 %gep_int1, %... (idx
  %34 = add nsw i32 %33, %31 (idx
  %36 = add nsw i32 %35, %32 (idx
  %38 = add nsw i32 %37, %34 (idx
  %40 = add nsw i32 %39, %36 (idx: 5)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %42 = add nsw i32 %41, %38 (idx
  %44 = add nsw i32 %43, %40 (idx
  %46 = add nsw i32 %45, %42 (idx
  %48 = add nsw i32 %47, %44 (idx
  %50 = add nsw i32 %49, %46 (idx: 10)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %52 = add nsw i32 %51, %48 (idx
  %54 = add nsw i32 %53, %50 (idx
  %56 = add nsw i32 %55, %52 (idx: 13)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %58 = add nsw i32 %57, %54 (idx
  %60 = add nsw i32 %59, %56 (idx
  %62 = add nsw i32 %61, %58 (idx
  %64 = add nsw i32 %63, %60 (idx: 17)            100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %tmp.i.i1 = add i32 %106, %1... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep = add i32 %gep_int, %ge... (idx
  %gep3 = add i32 %gep_int1, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %34 = add nsw i32 %33, %31 (idx
  %36 = add nsw i32 %35, %32 (idx
  %38 = add nsw i32 %37, %34 (idx
  %40 = add nsw i32 %39, %36 (idx
  %42 = add nsw i32 %41, %38 (idx
  %44 = add nsw i32 %43, %40 (idx
  %46 = add nsw i32 %45, %42 (idx
  %48 = add nsw i32 %47, %44 (idx
  %50 = add nsw i32 %49, %46 (idx
  %52 = add nsw i32 %51, %48 (idx
  %54 = add nsw i32 %53, %50 (idx
  %56 = add nsw i32 %55, %52 (idx: 13)            0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             
  %58 = add nsw i32 %57, %54 (idx
  %60 = add nsw i32 %59, %56 (idx
  %62 = add nsw i32 %61, %58 (idx
  %64 = add nsw i32 %63, %60 (idx
  %tmp.i.i1 = add i32 %106, %1... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 2)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 2)
  %34 = add nsw i32 %33, %31 (idx: 2) -> main_signed_add_32_2 (mux inputs: 2)
  %36 = add nsw i32 %35, %32 (idx: 3) -> main_signed_add_32_3 (mux inputs: 2)
  %38 = add nsw i32 %37, %34 (idx: 4) -> main_signed_add_32_4 (mux inputs: 2)
  %40 = add nsw i32 %39, %36 (idx: 5) -> main_signed_add_32_5 (mux inputs: 2)
  %42 = add nsw i32 %41, %38 (idx: 6) -> main_signed_add_32_6 (mux inputs: 2)
  %44 = add nsw i32 %43, %40 (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
  %46 = add nsw i32 %45, %42 (idx: 8) -> main_signed_add_32_8 (mux inputs: 2)
  %48 = add nsw i32 %47, %44 (idx: 9) -> main_signed_add_32_9 (mux inputs: 2)
  %50 = add nsw i32 %49, %46 (idx: 10) -> main_signed_add_32_10 (mux inputs: 2)
  %52 = add nsw i32 %51, %48 (idx: 11) -> main_signed_add_32_11 (mux inputs: 2)
  %54 = add nsw i32 %53, %50 (idx: 12) -> main_signed_add_32_12 (mux inputs: 2)
  %56 = add nsw i32 %55, %52 (idx: 13) -> main_signed_add_32_13 (mux inputs: 2)
  %58 = add nsw i32 %57, %54 (idx: 14) -> main_signed_add_32_14 (mux inputs: 2)
  %60 = add nsw i32 %59, %56 (idx: 15) -> main_signed_add_32_15 (mux inputs: 2)
  %62 = add nsw i32 %61, %58 (idx: 16) -> main_signed_add_32_16 (mux inputs: 2)
  %64 = add nsw i32 %63, %60 (idx: 17) -> main_signed_add_32_17 (mux inputs: 2)
  %tmp.i.i1 = add i32 %106, %1... (idx: 18) -> main_signed_add_32_18 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: test_data_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %27 = load i32* %26, align 4... (idx: 0)        100                           100                           
  %30 = load i32* %29, align 4... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_data_local_mem_dual_port_0main_test_data_local_mem_dual_port_1
  %27 = load i32* %26, align 4... (idx: 0)        1                             0                             
  %30 = load i32* %29, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %27 = load i32* %26, align 4... (idx: 0) -> main_test_data_local_mem_dual_port_0 (mux inputs: 1)
  %30 = load i32* %29, align 4... (idx: 1) -> main_test_data_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        100                           100                           
  %89 = load i32* getelementpt... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        1                             0                             
  %89 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %89 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %66 = add nsw i32 %65, %62 (idx
  %68 = add nsw i32 %67, %64 (idx
  %70 = add nsw i32 %69, %66 (idx
  %72 = add nsw i32 %71, %68 (idx
  %74 = add nsw i32 %73, %70 (idx
  %76 = add nsw i32 %75, %72 (idx
  %77 = add nsw i32 %76, %74 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %66 = add nsw i32 %65, %62 (idx
  %68 = add nsw i32 %67, %64 (idx
  %70 = add nsw i32 %69, %66 (idx
  %72 = add nsw i32 %71, %68 (idx
  %74 = add nsw i32 %73, %70 (idx
  %76 = add nsw i32 %75, %72 (idx
  %77 = add nsw i32 %76, %74 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = add nsw i32 %65, %62 (idx: 0) -> main_signed_add_32_0 (mux inputs: 4)
  %68 = add nsw i32 %67, %64 (idx: 1) -> main_signed_add_32_1 (mux inputs: 4)
  %70 = add nsw i32 %69, %66 (idx: 2) -> main_signed_add_32_2 (mux inputs: 4)
  %72 = add nsw i32 %71, %68 (idx: 3) -> main_signed_add_32_3 (mux inputs: 4)
  %74 = add nsw i32 %73, %70 (idx: 4) -> main_signed_add_32_4 (mux inputs: 4)
  %76 = add nsw i32 %75, %72 (idx: 5) -> main_signed_add_32_5 (mux inputs: 4)
  %77 = add nsw i32 %76, %74 (idx: 6) -> main_signed_add_32_6 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %83 = mul nsw i32 %82, %81 (idx: 0)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %83 = mul nsw i32 %82, %81 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = mul nsw i32 %82, %81 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 3)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %79 = sub nsw i32 %74, %76 (idx: 0)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %79 = sub nsw i32 %74, %76 (idx: 0)             1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %79 = sub nsw i32 %74, %76 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %4, i32* getelemen... (idx: 0)        100                           100                           
  store i32 %5, i32* getelemen... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %4, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %5, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %4, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 1)
  store i32 %5, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        100                           100                           
  %93 = load i32* getelementpt... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        1                             0                             
  %93 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %93 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %86 = mul nsw i32 %85, %84 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %86 = mul nsw i32 %85, %84 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = mul nsw i32 %85, %84 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 5)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %6, i32* getelemen... (idx: 0)        100                           100                           
  store i32 %7, i32* getelemen... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %6, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %7, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %6, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 2)
  store i32 %7, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* getelementpt... (idx: 0)        100                           100                           
  %97 = load i32* getelementpt... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* getelementpt... (idx: 0)        1                             0                             
  %97 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %96 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %97 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %87 = add nsw i32 %86, %83 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %87 = add nsw i32 %86, %83 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = add nsw i32 %86, %83 (idx: 0) -> main_signed_add_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %90 = mul nsw i32 %89, %88 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %90 = mul nsw i32 %89, %88 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = mul nsw i32 %89, %88 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 7)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        100                           100                           
  store i32 %9, i32* getelemen... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %8, i32* getelemen... (idx: 0)        1                             0                             
  store i32 %9, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* getelemen... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 3)
  store i32 %9, i32* getelemen... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__1
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %100 = load i32* getelementp... (idx: 0)        100                           100                           
  %101 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %100 = load i32* getelementp... (idx: 0)        1                             0                             
  %101 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %100 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  %101 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %91 = add nsw i32 %87, %90 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %91 = add nsw i32 %87, %90 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %91 = add nsw i32 %87, %90 (idx: 0) -> main_signed_add_32_0 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %94 = mul nsw i32 %93, %92 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %94 = mul nsw i32 %93, %92 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %94 = mul nsw i32 %93, %92 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 9)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %11, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %10, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %11, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %10, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 4)
  store i32 %11, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %95 = add nsw i32 %91, %94 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %95 = add nsw i32 %91, %94 (idx: 0)             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %95 = add nsw i32 %91, %94 (idx: 0) -> main_signed_add_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %98 = mul nsw i32 %97, %96 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %98 = mul nsw i32 %97, %96 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = mul nsw i32 %97, %96 (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 11)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %13, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %12, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %13, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %12, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 5)
  store i32 %13, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %99 = add nsw i32 %95, %98 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %99 = add nsw i32 %95, %98 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %99 = add nsw i32 %95, %98 (idx: 0) -> main_signed_add_32_0 (mux inputs: 12)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %102 = mul nsw i32 %101, %10... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %102 = mul nsw i32 %101, %10... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = mul nsw i32 %101, %10... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %15, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %14, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %15, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 6)
  store i32 %15, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %103 = add nsw i32 %99, %102 (idx
  %108 = add nsw i32 %107, %10... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %103 = add nsw i32 %99, %102 (idx
  %108 = add nsw i32 %107, %10... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %103 = add nsw i32 %99, %102 (idx: 0) -> main_signed_add_32_0 (mux inputs: 14)
  %108 = add nsw i32 %107, %10... (idx: 1) -> main_signed_add_32_1 (mux inputs: 6)
State: LEGUP_F_main_BB__1
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %109 = sub nsw i32 %78, %108 (idx: 0)           100                           100                           
  %111 = sub nsw i32 0, %109 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %109 = sub nsw i32 %78, %108 (idx: 0)           1                             0                             
  %111 = sub nsw i32 0, %109 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = sub nsw i32 %78, %108 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 4)
  %111 = sub nsw i32 0, %109 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 1)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %17, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %16, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %17, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %16, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 7)
  store i32 %17, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %19, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %18, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %19, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %18, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 8)
  store i32 %19, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %21, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %20, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %21, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %20, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 9)
  store i32 %21, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %23, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %22, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %23, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %22, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 10)
  store i32 %23, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %25, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %24, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %25, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %24, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 11)
  store i32 %25, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB__1
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %27, i32* geteleme... (idx: 0)        100                           100                           
  store i32 %30, i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  store i32 %27, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %30, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %27, i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  store i32 %30, i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__114
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %120 = add nsw i32 %mil.01.i... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %120 = add nsw i32 %mil.01.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = add nsw i32 %mil.01.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB__114
Binding functional unit type: decis_levl_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %116 = load i32* %115, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_decis_levl_local_mem_dual_port_0
  %116 = load i32* %115, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = load i32* %115, align... (idx: 0) -> main_decis_levl_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__114
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep6 = add i32 %gep_int4, %... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep6 = add i32 %gep_int4, %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep6 = add i32 %gep_int4, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB__114
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %117 = mul nsw i32 %116, %de... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %117 = mul nsw i32 %116, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %117 = mul nsw i32 %116, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %252 = add nsw i32 %i.02.i, ... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %252 = add nsw i32 %i.02.i, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %252 = add nsw i32 %i.02.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 18)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %250 = sdiv i32 %i.02.i, 2 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %250 = sdiv i32 %i.02.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %250 = sdiv i32 %i.02.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %126 = mul nsw i32 %nbl.0, 1... (idx
  %151 = mul nsw i32 %al2.0, 1... (idx
  %156 = mul nsw i32 %al1.0, 2... (idx
  %190 = mul i32 %ah1.0, %rh1.... (idx
  %191 = mul i32 %ah2.0, %rh2.... (idx
  %198 = mul nsw i32 %deth.0, ... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %208 = mul nsw i32 %nbh.0, 1... (idx
  %233 = mul nsw i32 %ah2.0, 1... (idx
  %238 = mul nsw i32 %ah1.0, 2... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %126 = mul nsw i32 %nbl.0, 1... (idx
  %151 = mul nsw i32 %al2.0, 1... (idx
  %156 = mul nsw i32 %al1.0, 2... (idx
  %190 = mul i32 %ah1.0, %rh1.... (idx
  %191 = mul i32 %ah2.0, %rh2.... (idx
  %198 = mul nsw i32 %deth.0, ... (idx
  %208 = mul nsw i32 %nbh.0, 1... (idx
  %233 = mul nsw i32 %ah2.0, 1... (idx
  %238 = mul nsw i32 %ah1.0, 2... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %126 = mul nsw i32 %nbl.0, 1... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 16)
  %151 = mul nsw i32 %al2.0, 1... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 2)
  %156 = mul nsw i32 %al1.0, 2... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 2)
  %190 = mul i32 %ah1.0, %rh1.... (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 3)
  %191 = mul i32 %ah2.0, %rh2.... (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 3)
  %198 = mul nsw i32 %deth.0, ... (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 2)
  %208 = mul nsw i32 %nbh.0, 1... (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 2)
  %233 = mul nsw i32 %ah2.0, 1... (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 2)
  %238 = mul nsw i32 %ah1.0, 2... (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 2)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %145 = sub nsw i32 0, %142 (idx: 0)             100                           100                           
  %227 = sub nsw i32 0, %224 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %145 = sub nsw i32 0, %142 (idx: 0)             1                             0                             
  %227 = sub nsw i32 0, %224 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = sub nsw i32 0, %142 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 5)
  %227 = sub nsw i32 0, %224 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 2)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %ril.0.i.i = load i32* %ril.... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %ril.0.i.i = load i32* %ril.... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep9 = add i32 %gep_int7, %... (idx
  %160 = add nsw i32 %157, 192 (idx
  %tmp.i3.i12 = add i32 %191, ... (idx
  %242 = add nsw i32 %239, 192 (idx: 3)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep9 = add i32 %gep_int7, %... (idx
  %160 = add nsw i32 %157, 192 (idx
  %tmp.i3.i12 = add i32 %191, ... (idx
  %242 = add nsw i32 %239, 192 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep9 = add i32 %gep_int7, %... (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
  %160 = add nsw i32 %157, 192 (idx: 1) -> main_signed_add_32_1 (mux inputs: 7)
  %tmp.i3.i12 = add i32 %191, ... (idx: 2) -> main_signed_add_32_2 (mux inputs: 6)
  %242 = add nsw i32 %239, 192 (idx: 3) -> main_signed_add_32_3 (mux inputs: 5)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %123 = load i32* %122, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %123 = load i32* %122, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %123 = load i32* %122, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep12 = add i32 %gep_int10,... (idx
  %gep15 = add i32 %gep_int13,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep12 = add i32 %gep_int10,... (idx
  %gep15 = add i32 %gep_int13,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep12 = add i32 %gep_int10,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
  %gep15 = add i32 %gep_int13,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 9)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %129 = load i32* %128, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %129 = load i32* %128, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %129 = load i32* %128, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %130 = add nsw i32 %127, %12... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %130 = add nsw i32 %127, %12... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %130 = add nsw i32 %127, %12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 24)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %124 = mul nsw i32 %123, %de... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %124 = mul nsw i32 %123, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %124 = mul nsw i32 %123, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %138 = sub i32 9, %135 (idx: 0)                 100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %138 = sub i32 9, %135 (idx: 0)                 1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %138 = sub i32 9, %135 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 6)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %141 = add nsw i32 %104, %12... (idx
  %165 = add nsw i32 %125, %10... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %141 = add nsw i32 %104, %12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %165 = add nsw i32 %125, %10... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %141 = add nsw i32 %104, %12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 26)
  %165 = add nsw i32 %125, %10... (idx: 1) -> main_signed_add_32_1 (mux inputs: 11)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %143 = mul nsw i32 %plt1.0, ... (idx
  %147 = mul nsw i32 %plt2.0, ... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %143 = mul nsw i32 %plt1.0, ... (idx
  %147 = mul nsw i32 %plt2.0, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = mul nsw i32 %plt1.0, ... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 19)
  %147 = mul nsw i32 %plt2.0, ... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 4)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %137 = load i32* %136, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %137 = load i32* %136, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %137 = load i32* %136, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep18 = add i32 %gep_int16,... (idx
  %wd4.0.i9.i6 = add nsw i32 %... (idx
  %153 = add nsw i32 %wd4.0.i9... (idx
  %apl1.0.i5.i9 = add nsw i32 ... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep18 = add i32 %gep_int16,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %wd4.0.i9.i6 = add nsw i32 %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %153 = add nsw i32 %wd4.0.i9... (idx
  %apl1.0.i5.i9 = add nsw i32 ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep18 = add i32 %gep_int16,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 28)
  %wd4.0.i9.i6 = add nsw i32 %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 13)
  %153 = add nsw i32 %wd4.0.i9... (idx: 2) -> main_signed_add_32_2 (mux inputs: 8)
  %apl1.0.i5.i9 = add nsw i32 ... (idx: 3) -> main_signed_add_32_3 (mux inputs: 7)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %161 = sub nsw i32 15360, %.... (idx: 0)        100                           100                           
  %163 = sub nsw i32 0, %161 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %161 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %163 = sub nsw i32 0, %161 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %161 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 7)
  %163 = sub nsw i32 0, %161 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 3)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %166 = load i32* getelementp... (idx: 0)        100                           100                           
  %167 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %166 = load i32* getelementp... (idx: 0)        1                             0                             
  %167 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %166 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %167 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* getelementp... (idx: 0)        100                           100                           
  %170 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* getelementp... (idx: 0)        1                             0                             
  %170 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %169 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %170 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %173 = load i32* getelementp... (idx: 0)        100                           100                           
  %174 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %173 = load i32* getelementp... (idx: 0)        1                             0                             
  %174 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %173 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %174 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %168 = mul nsw i32 %167, %16... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %168 = mul nsw i32 %167, %16... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %168 = mul nsw i32 %167, %16... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 21)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %177 = load i32* getelementp... (idx: 0)        100                           100                           
  %178 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %177 = load i32* getelementp... (idx: 0)        1                             0                             
  %178 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %177 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %178 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %171 = mul nsw i32 %170, %16... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %171 = mul nsw i32 %170, %16... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %171 = mul nsw i32 %170, %16... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 23)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %181 = load i32* getelementp... (idx: 0)        100                           100                           
  %182 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %181 = load i32* getelementp... (idx: 0)        1                             0                             
  %182 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %181 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %182 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %172 = add nsw i32 %171, %16... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %172 = add nsw i32 %171, %16... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %172 = add nsw i32 %171, %16... (idx: 0) -> main_signed_add_32_0 (mux inputs: 30)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %175 = mul nsw i32 %174, %17... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %175 = mul nsw i32 %174, %17... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %175 = mul nsw i32 %174, %17... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %185 = load i32* getelementp... (idx: 0)        100                           100                           
  %186 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %185 = load i32* getelementp... (idx: 0)        1                             0                             
  %186 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %185 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %186 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %176 = add nsw i32 %172, %17... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %176 = add nsw i32 %172, %17... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %176 = add nsw i32 %172, %17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 32)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %179 = mul nsw i32 %178, %17... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %179 = mul nsw i32 %178, %17... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = mul nsw i32 %178, %17... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 27)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %180 = add nsw i32 %176, %17... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %180 = add nsw i32 %176, %17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %180 = add nsw i32 %176, %17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 34)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %183 = mul nsw i32 %182, %18... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %183 = mul nsw i32 %182, %18... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %183 = mul nsw i32 %182, %18... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 29)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %184 = add nsw i32 %180, %18... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %184 = add nsw i32 %180, %18... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %184 = add nsw i32 %180, %18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 36)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %187 = mul nsw i32 %186, %18... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %187 = mul nsw i32 %186, %18... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %187 = mul nsw i32 %186, %18... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 31)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %188 = add nsw i32 %184, %18... (idx
  %193 = add nsw i32 %192, %18... (idx
  %197 = add nsw i32 %196, 3 (idx: 2)             100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %203 = add nsw i32 %196, 2 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %188 = add nsw i32 %184, %18... (idx
  %193 = add nsw i32 %192, %18... (idx
  %197 = add nsw i32 %196, 3 (idx
  %203 = add nsw i32 %196, 2 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = add nsw i32 %184, %18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 38)
  %193 = add nsw i32 %192, %18... (idx: 1) -> main_signed_add_32_1 (mux inputs: 15)
  %197 = add nsw i32 %196, 3 (idx: 2) -> main_signed_add_32_2 (mux inputs: 9)
  %203 = add nsw i32 %196, 2 (idx: 3) -> main_signed_add_32_3 (mux inputs: 8)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %194 = sub nsw i32 %80, %193 (idx: 0)           100                           100                           
  %201 = sub nsw i32 0, %194 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %194 = sub nsw i32 %80, %193 (idx: 0)           1                             0                             
  %201 = sub nsw i32 0, %194 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %194 = sub nsw i32 %80, %193 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 9)
  %201 = sub nsw i32 0, %194 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 4)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %205 = load i32* %204, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %205 = load i32* %204, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %205 = load i32* %204, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep21 = add i32 %gep_int19,... (idx
  %gep24 = add i32 %gep_int22,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep21 = add i32 %gep_int19,... (idx
  %gep24 = add i32 %gep_int22,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep21 = add i32 %gep_int19,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 40)
  %gep24 = add i32 %gep_int22,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 17)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %211 = load i32* %210, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %211 = load i32* %210, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %211 = load i32* %210, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %212 = add nsw i32 %209, %21... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %212 = add nsw i32 %209, %21... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %212 = add nsw i32 %209, %21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 42)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %206 = mul nsw i32 %205, %de... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %206 = mul nsw i32 %205, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %206 = mul nsw i32 %205, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 33)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %220 = sub i32 11, %217 (idx: 0)                100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %220 = sub i32 11, %217 (idx: 0)                1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = sub i32 11, %217 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 10)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %223 = add nsw i32 %189, %20... (idx
  %247 = add nsw i32 %207, %19... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %223 = add nsw i32 %189, %20... (idx
  %247 = add nsw i32 %207, %19... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %223 = add nsw i32 %189, %20... (idx: 0) -> main_signed_add_32_0 (mux inputs: 44)
  %247 = add nsw i32 %207, %19... (idx: 1) -> main_signed_add_32_1 (mux inputs: 19)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %225 = mul nsw i32 %ph1.0, %... (idx
  %229 = mul nsw i32 %ph2.0, %... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %225 = mul nsw i32 %ph1.0, %... (idx
  %229 = mul nsw i32 %ph2.0, %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %225 = mul nsw i32 %ph1.0, %... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 35)
  %229 = mul nsw i32 %ph2.0, %... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 6)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %219 = load i32* %218, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %219 = load i32* %218, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %219 = load i32* %218, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep27 = add i32 %gep_int25,... (idx
  %wd4.0.i.i17 = add nsw i32 %... (idx
  %235 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i20 = add nsw i32 ... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep27 = add i32 %gep_int25,... (idx
  %wd4.0.i.i17 = add nsw i32 %... (idx
  %235 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i20 = add nsw i32 ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep27 = add i32 %gep_int25,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 46)
  %wd4.0.i.i17 = add nsw i32 %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 21)
  %235 = add nsw i32 %wd4.0.i.... (idx: 2) -> main_signed_add_32_2 (mux inputs: 11)
  %apl1.0.i.i20 = add nsw i32 ... (idx: 3) -> main_signed_add_32_3 (mux inputs: 10)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %243 = sub nsw i32 15360, %.... (idx: 0)        100                           100                           
  %245 = sub nsw i32 0, %243 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %243 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %245 = sub nsw i32 0, %243 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %243 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 11)
  %245 = sub nsw i32 0, %243 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 5)
State: LEGUP_F_main_BB_quantlexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep30 = add i32 %gep_int28,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep30 = add i32 %gep_int28,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep30 = add i32 %gep_int28,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 48)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        100                           100                           
  %.pre37 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre = load i32* getelement... (idx: 0)        1                             0                             
  %.pre37 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre = load i32* getelement... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre37 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre38 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre39 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre38 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre39 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre38 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre39 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre40 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre41 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre40 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre41 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre40 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre41 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre42 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre43 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre42 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre43 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre42 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre43 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre44 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre45 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre44 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre45 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre44 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre45 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre46 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre47 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre46 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre47 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre46 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre47 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre48 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre49 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre48 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre49 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre48 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre49 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre50 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre51 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre50 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre51 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre50 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre51 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre52 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre53 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre52 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre53 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre52 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre53 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre54 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre55 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre54 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre55 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre54 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre55 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre56 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre57 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre56 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre57 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre56 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre57 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_encodeexit_crit_edge
Binding functional unit type: tqmf_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre58 = load i32* geteleme... (idx: 0)        100                           100                           
  %.pre59 = load i32* geteleme... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_tqmf_local_mem_dual_port_0main_tqmf_local_mem_dual_port_1
  %.pre58 = load i32* geteleme... (idx: 0)        1                             0                             
  %.pre59 = load i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre58 = load i32* geteleme... (idx: 0) -> main_tqmf_local_mem_dual_port_0 (mux inputs: 12)
  %.pre59 = load i32* geteleme... (idx: 1) -> main_tqmf_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_preheaderipreheader
Binding functional unit type: qq6_code6_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %255 = load i32* %254, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq6_code6_table_local_mem_dual_port_0
  %255 = load i32* %254, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %255 = load i32* %254, align... (idx: 0) -> main_qq6_code6_table_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep33 = add i32 %gep_int31,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep33 = add i32 %gep_int31,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep33 = add i32 %gep_int31,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 50)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %261 = load i32* getelementp... (idx: 0)        100                           100                           
  %262 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %261 = load i32* getelementp... (idx: 0)        1                             0                             
  %262 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %261 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %262 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %462 = add nsw i32 %i.11.i, ... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %462 = add nsw i32 %i.11.i, ... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %462 = add nsw i32 %i.11.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 51)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_divide_32
Weight matrix for operation/function unit matching:
                                                  main_signed_divide_32_0       
  %256 = sdiv i32 %i.11.i, 2 (idx: 0)             100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_divide_32_0       
  %256 = sdiv i32 %i.11.i, 2 (idx: 0)             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %256 = sdiv i32 %i.11.i, 2 (idx: 0) -> main_signed_divide_32_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %285 = mul i32 %dec_al1.0, %... (idx
  %286 = mul i32 %dec_al2.0, %... (idx
  %294 = mul nsw i32 %255, %de... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %297 = mul nsw i32 %dec_nbl.... (idx
  %322 = mul nsw i32 %dec_al2.... (idx
  %327 = mul nsw i32 %dec_al1.... (idx
  %361 = mul i32 %dec_ah1.0, %... (idx
  %362 = mul i32 %dec_ah2.0, %... (idx
  %369 = mul nsw i32 %dec_nbh.... (idx
  %394 = mul nsw i32 %dec_ah2.... (idx
  %399 = mul nsw i32 %dec_ah1.... (idx
  %413 = mul nsw i32 %accumc.0... (idx
  %415 = mul nsw i32 %accumd.0... (idx: 12)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %417 = mul nsw i32 %accumc.1... (idx
  %419 = mul nsw i32 %accumd.1... (idx
  %423 = mul nsw i32 %accumd.2... (idx
  %425 = mul nsw i32 %accumc.3... (idx
  %427 = mul nsw i32 %accumd.3... (idx
  %429 = mul nsw i32 %accumc.4... (idx: 18)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %431 = mul nsw i32 %accumd.4... (idx
  %433 = mul nsw i32 %accumc.5... (idx
  %435 = mul nsw i32 %accumd.5... (idx
  %437 = mul nsw i32 %accumc.6... (idx
  %439 = mul nsw i32 %accumd.6... (idx
  %441 = mul nsw i32 %accumc.7... (idx
  %445 = mul nsw i32 %accumc.8... (idx
  %447 = mul nsw i32 %accumd.8... (idx
  %449 = mul nsw i32 %accumc.9... (idx
  %451 = mul nsw i32 %accumd.9... (idx
  %453 = mul nsw i32 %accumc.1... (idx: 29)       100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %455 = mul nsw i32 %accumd.1... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %285 = mul i32 %dec_al1.0, %... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %286 = mul i32 %dec_al2.0, %... (idx
  %294 = mul nsw i32 %255, %de... (idx
  %297 = mul nsw i32 %dec_nbl.... (idx
  %322 = mul nsw i32 %dec_al2.... (idx
  %327 = mul nsw i32 %dec_al1.... (idx
  %361 = mul i32 %dec_ah1.0, %... (idx
  %362 = mul i32 %dec_ah2.0, %... (idx
  %369 = mul nsw i32 %dec_nbh.... (idx
  %394 = mul nsw i32 %dec_ah2.... (idx
  %399 = mul nsw i32 %dec_ah1.... (idx
  %413 = mul nsw i32 %accumc.0... (idx
  %415 = mul nsw i32 %accumd.0... (idx
  %417 = mul nsw i32 %accumc.1... (idx
  %419 = mul nsw i32 %accumd.1... (idx
  %423 = mul nsw i32 %accumd.2... (idx
  %425 = mul nsw i32 %accumc.3... (idx
  %427 = mul nsw i32 %accumd.3... (idx
  %429 = mul nsw i32 %accumc.4... (idx
  %431 = mul nsw i32 %accumd.4... (idx
  %433 = mul nsw i32 %accumc.5... (idx: 20)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %435 = mul nsw i32 %accumd.5... (idx
  %437 = mul nsw i32 %accumc.6... (idx
  %439 = mul nsw i32 %accumd.6... (idx
  %441 = mul nsw i32 %accumc.7... (idx
  %445 = mul nsw i32 %accumc.8... (idx
  %447 = mul nsw i32 %accumd.8... (idx
  %449 = mul nsw i32 %accumc.9... (idx
  %451 = mul nsw i32 %accumd.9... (idx
  %453 = mul nsw i32 %accumc.1... (idx
  %455 = mul nsw i32 %accumd.1... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %285 = mul i32 %dec_al1.0, %... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 37)
  %286 = mul i32 %dec_al2.0, %... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 8)
  %294 = mul nsw i32 %255, %de... (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 4)
  %297 = mul nsw i32 %dec_nbl.... (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 4)
  %322 = mul nsw i32 %dec_al2.... (idx: 4) -> main_signed_multiply_32_4 (mux inputs: 4)
  %327 = mul nsw i32 %dec_al1.... (idx: 5) -> main_signed_multiply_32_5 (mux inputs: 3)
  %361 = mul i32 %dec_ah1.0, %... (idx: 6) -> main_signed_multiply_32_6 (mux inputs: 4)
  %362 = mul i32 %dec_ah2.0, %... (idx: 7) -> main_signed_multiply_32_7 (mux inputs: 4)
  %369 = mul nsw i32 %dec_nbh.... (idx: 8) -> main_signed_multiply_32_8 (mux inputs: 3)
  %394 = mul nsw i32 %dec_ah2.... (idx: 9) -> main_signed_multiply_32_9 (mux inputs: 2)
  %399 = mul nsw i32 %dec_ah1.... (idx: 10) -> main_signed_multiply_32_10 (mux inputs: 2)
  %413 = mul nsw i32 %accumc.0... (idx: 11) -> main_signed_multiply_32_11 (mux inputs: 2)
  %415 = mul nsw i32 %accumd.0... (idx: 12) -> main_signed_multiply_32_12 (mux inputs: 2)
  %417 = mul nsw i32 %accumc.1... (idx: 13) -> main_signed_multiply_32_13 (mux inputs: 2)
  %419 = mul nsw i32 %accumd.1... (idx: 14) -> main_signed_multiply_32_14 (mux inputs: 2)
  %423 = mul nsw i32 %accumd.2... (idx: 15) -> main_signed_multiply_32_15 (mux inputs: 2)
  %425 = mul nsw i32 %accumc.3... (idx: 16) -> main_signed_multiply_32_16 (mux inputs: 2)
  %427 = mul nsw i32 %accumd.3... (idx: 17) -> main_signed_multiply_32_17 (mux inputs: 2)
  %429 = mul nsw i32 %accumc.4... (idx: 18) -> main_signed_multiply_32_18 (mux inputs: 2)
  %431 = mul nsw i32 %accumd.4... (idx: 19) -> main_signed_multiply_32_19 (mux inputs: 2)
  %433 = mul nsw i32 %accumc.5... (idx: 20) -> main_signed_multiply_32_20 (mux inputs: 2)
  %435 = mul nsw i32 %accumd.5... (idx: 21) -> main_signed_multiply_32_21 (mux inputs: 2)
  %437 = mul nsw i32 %accumc.6... (idx: 22) -> main_signed_multiply_32_22 (mux inputs: 3)
  %439 = mul nsw i32 %accumd.6... (idx: 23) -> main_signed_multiply_32_23 (mux inputs: 3)
  %441 = mul nsw i32 %accumc.7... (idx: 24) -> main_signed_multiply_32_24 (mux inputs: 1)
  %445 = mul nsw i32 %accumc.8... (idx: 25) -> main_signed_multiply_32_25 (mux inputs: 1)
  %447 = mul nsw i32 %accumd.8... (idx: 26) -> main_signed_multiply_32_26 (mux inputs: 1)
  %449 = mul nsw i32 %accumc.9... (idx: 27) -> main_signed_multiply_32_27 (mux inputs: 1)
  %451 = mul nsw i32 %accumd.9... (idx: 28) -> main_signed_multiply_32_28 (mux inputs: 1)
  %453 = mul nsw i32 %accumc.1... (idx: 29) -> main_signed_multiply_32_29 (mux inputs: 1)
  %455 = mul nsw i32 %accumd.1... (idx: 30) -> main_signed_multiply_32_30 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %316 = sub nsw i32 0, %313 (idx: 0)             100                           100                           
  %388 = sub nsw i32 0, %385 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %316 = sub nsw i32 0, %313 (idx: 0)             1                             0                             
  %388 = sub nsw i32 0, %385 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %316 = sub nsw i32 0, %313 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 12)
  %388 = sub nsw i32 0, %385 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 6)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %264 = load i32* getelementp... (idx: 0)        100                           100                           
  %265 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %264 = load i32* getelementp... (idx: 0)        1                             0                             
  %265 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %264 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %265 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %tmp.i.i = add i32 %286, %28... (idx
  %331 = add nsw i32 %328, 192 (idx
  %tmp.i3.i = add i32 %362, %3... (idx
  %403 = add nsw i32 %400, 192 (idx
  %gep57 = add i32 %gep_int55,... (idx
  %gep60 = add i32 %gep_int58,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %tmp.i.i = add i32 %286, %28... (idx
  %331 = add nsw i32 %328, 192 (idx
  %tmp.i3.i = add i32 %362, %3... (idx
  %403 = add nsw i32 %400, 192 (idx
  %gep57 = add i32 %gep_int55,... (idx
  %gep60 = add i32 %gep_int58,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %tmp.i.i = add i32 %286, %28... (idx: 0) -> main_signed_add_32_0 (mux inputs: 53)
  %331 = add nsw i32 %328, 192 (idx: 1) -> main_signed_add_32_1 (mux inputs: 22)
  %tmp.i3.i = add i32 %362, %3... (idx: 2) -> main_signed_add_32_2 (mux inputs: 13)
  %403 = add nsw i32 %400, 192 (idx: 3) -> main_signed_add_32_3 (mux inputs: 11)
  %gep57 = add i32 %gep_int55,... (idx: 4) -> main_signed_add_32_4 (mux inputs: 6)
  %gep60 = add i32 %gep_int58,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 6)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %268 = load i32* getelementp... (idx: 0)        100                           100                           
  %269 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %268 = load i32* getelementp... (idx: 0)        1                             0                             
  %269 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %268 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %269 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %263 = mul nsw i32 %262, %26... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %263 = mul nsw i32 %262, %26... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %263 = mul nsw i32 %262, %26... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 39)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %272 = load i32* getelementp... (idx: 0)        100                           100                           
  %273 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %272 = load i32* getelementp... (idx: 0)        1                             0                             
  %273 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %272 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %273 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %266 = mul nsw i32 %265, %26... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %266 = mul nsw i32 %265, %26... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %266 = mul nsw i32 %265, %26... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 41)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %276 = load i32* getelementp... (idx: 0)        100                           100                           
  %277 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %276 = load i32* getelementp... (idx: 0)        1                             0                             
  %277 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %276 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %277 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %267 = add nsw i32 %266, %26... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %267 = add nsw i32 %266, %26... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %267 = add nsw i32 %266, %26... (idx: 0) -> main_signed_add_32_0 (mux inputs: 55)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %270 = mul nsw i32 %269, %26... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %270 = mul nsw i32 %269, %26... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %270 = mul nsw i32 %269, %26... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 43)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %280 = load i32* getelementp... (idx: 0)        100                           100                           
  %281 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %280 = load i32* getelementp... (idx: 0)        1                             0                             
  %281 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %280 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %281 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %271 = add nsw i32 %267, %27... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %271 = add nsw i32 %267, %27... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %271 = add nsw i32 %267, %27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 57)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %274 = mul nsw i32 %273, %27... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %274 = mul nsw i32 %273, %27... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %274 = mul nsw i32 %273, %27... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 45)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %275 = add nsw i32 %271, %27... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %275 = add nsw i32 %271, %27... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %275 = add nsw i32 %271, %27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %278 = mul nsw i32 %277, %27... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %278 = mul nsw i32 %277, %27... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %278 = mul nsw i32 %277, %27... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 47)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %279 = add nsw i32 %275, %27... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %279 = add nsw i32 %275, %27... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %279 = add nsw i32 %275, %27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 61)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %282 = mul nsw i32 %281, %28... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %282 = mul nsw i32 %281, %28... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %282 = mul nsw i32 %281, %28... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 49)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %283 = add nsw i32 %279, %28... (idx
  %288 = add nsw i32 %287, %28... (idx
  %296 = add nsw i32 %295, %28... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %283 = add nsw i32 %279, %28... (idx
  %288 = add nsw i32 %287, %28... (idx
  %296 = add nsw i32 %295, %28... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %283 = add nsw i32 %279, %28... (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
  %288 = add nsw i32 %287, %28... (idx: 1) -> main_signed_add_32_1 (mux inputs: 24)
  %296 = add nsw i32 %295, %28... (idx: 2) -> main_signed_add_32_2 (mux inputs: 15)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep36 = add i32 %gep_int34,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep36 = add i32 %gep_int34,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep36 = add i32 %gep_int34,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 65)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq4_code4_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %291 = load i32* %290, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq4_code4_table_local_mem_dual_port_0
  %291 = load i32* %290, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %291 = load i32* %290, align... (idx: 0) -> main_qq4_code4_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep39 = add i32 %gep_int37,... (idx
  %gep42 = add i32 %gep_int40,... (idx
  %gep48 = add i32 %gep_int46,... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %gep51 = add i32 %gep_int49,... (idx: 3)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep39 = add i32 %gep_int37,... (idx
  %gep42 = add i32 %gep_int40,... (idx
  %gep48 = add i32 %gep_int46,... (idx
  %gep51 = add i32 %gep_int49,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep39 = add i32 %gep_int37,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 67)
  %gep42 = add i32 %gep_int40,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 26)
  %gep48 = add i32 %gep_int46,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 17)
  %gep51 = add i32 %gep_int49,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 13)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wl_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %300 = load i32* %299, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wl_code_table_local_mem_dual_port_0
  %300 = load i32* %299, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %300 = load i32* %299, align... (idx: 0) -> main_wl_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %301 = add nsw i32 %298, %30... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %301 = add nsw i32 %298, %30... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %301 = add nsw i32 %298, %30... (idx: 0) -> main_signed_add_32_0 (mux inputs: 69)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %292 = mul nsw i32 %291, %de... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %292 = mul nsw i32 %291, %de... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %292 = mul nsw i32 %291, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 51)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %309 = sub i32 9, %306 (idx: 0)                 100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %309 = sub i32 9, %306 (idx: 0)                 1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %309 = sub i32 9, %306 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 13)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %312 = add nsw i32 %284, %29... (idx
  %336 = add nsw i32 %293, %28... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %312 = add nsw i32 %284, %29... (idx
  %336 = add nsw i32 %293, %28... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %312 = add nsw i32 %284, %29... (idx: 0) -> main_signed_add_32_0 (mux inputs: 71)
  %336 = add nsw i32 %293, %28... (idx: 1) -> main_signed_add_32_1 (mux inputs: 28)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %314 = mul nsw i32 %dec_plt1... (idx
  %318 = mul nsw i32 %dec_plt2... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %314 = mul nsw i32 %dec_plt1... (idx
  %318 = mul nsw i32 %dec_plt2... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %314 = mul nsw i32 %dec_plt1... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 53)
  %318 = mul nsw i32 %dec_plt2... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 10)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %308 = load i32* %307, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %308 = load i32* %307, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %308 = load i32* %307, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep45 = add i32 %gep_int43,... (idx
  %wd4.0.i9.i = add nsw i32 %3... (idx
  %324 = add nsw i32 %wd4.0.i9... (idx
  %apl1.0.i5.i = add nsw i32 %... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep45 = add i32 %gep_int43,... (idx
  %wd4.0.i9.i = add nsw i32 %3... (idx
  %324 = add nsw i32 %wd4.0.i9... (idx
  %apl1.0.i5.i = add nsw i32 %... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep45 = add i32 %gep_int43,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 73)
  %wd4.0.i9.i = add nsw i32 %3... (idx: 1) -> main_signed_add_32_1 (mux inputs: 30)
  %324 = add nsw i32 %wd4.0.i9... (idx: 2) -> main_signed_add_32_2 (mux inputs: 19)
  %apl1.0.i5.i = add nsw i32 %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 15)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %332 = sub nsw i32 15360, %.... (idx: 0)        100                           100                           
  %334 = sub nsw i32 0, %332 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %332 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %334 = sub nsw i32 0, %332 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %332 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 14)
  %334 = sub nsw i32 0, %332 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 7)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %337 = load i32* getelementp... (idx: 0)        100                           100                           
  %338 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %337 = load i32* getelementp... (idx: 0)        1                             0                             
  %338 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %338 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: qq2_code2_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %366 = load i32* %365, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_qq2_code2_table_local_mem_dual_port_0
  %366 = load i32* %365, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %366 = load i32* %365, align... (idx: 0) -> main_qq2_code2_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: wh_code_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %372 = load i32* %371, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_wh_code_table_local_mem_dual_port_0
  %372 = load i32* %371, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %372 = load i32* %371, align... (idx: 0) -> main_wh_code_table_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %340 = load i32* getelementp... (idx: 0)        100                           100                           
  %341 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %340 = load i32* getelementp... (idx: 0)        1                             0                             
  %341 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %340 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %341 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %373 = add nsw i32 %370, %37... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %373 = add nsw i32 %370, %37... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %373 = add nsw i32 %370, %37... (idx: 0) -> main_signed_add_32_0 (mux inputs: 75)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %367 = mul nsw i32 %366, %de... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %367 = mul nsw i32 %366, %de... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %367 = mul nsw i32 %366, %de... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 55)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %381 = sub i32 11, %378 (idx: 0)                100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %381 = sub i32 11, %378 (idx: 0)                1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %381 = sub i32 11, %378 (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 15)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        100                           100                           
  %345 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        1                             0                             
  %345 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %344 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %345 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %339 = mul nsw i32 %338, %33... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %339 = mul nsw i32 %338, %33... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %339 = mul nsw i32 %338, %33... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 57)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: ilb_table_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %380 = load i32* %379, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_ilb_table_local_mem_dual_port_0
  %380 = load i32* %379, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %380 = load i32* %379, align... (idx: 0) -> main_ilb_table_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %348 = load i32* getelementp... (idx: 0)        100                           100                           
  %349 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %348 = load i32* getelementp... (idx: 0)        1                             0                             
  %349 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %348 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %349 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep54 = add i32 %gep_int52,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep54 = add i32 %gep_int52,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep54 = add i32 %gep_int52,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 77)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %342 = mul nsw i32 %341, %34... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %342 = mul nsw i32 %341, %34... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %342 = mul nsw i32 %341, %34... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %352 = load i32* getelementp... (idx: 0)        100                           100                           
  %353 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %352 = load i32* getelementp... (idx: 0)        1                             0                             
  %353 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %352 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %353 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %343 = add nsw i32 %342, %33... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %343 = add nsw i32 %342, %33... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %343 = add nsw i32 %342, %33... (idx: 0) -> main_signed_add_32_0 (mux inputs: 79)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %346 = mul nsw i32 %345, %34... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %346 = mul nsw i32 %345, %34... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %346 = mul nsw i32 %345, %34... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 61)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %356 = load i32* getelementp... (idx: 0)        100                           100                           
  %357 = load i32* getelementp... (idx: 1)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %356 = load i32* getelementp... (idx: 0)        1                             0                             
  %357 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %356 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %357 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %347 = add nsw i32 %343, %34... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %347 = add nsw i32 %343, %34... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %347 = add nsw i32 %343, %34... (idx: 0) -> main_signed_add_32_0 (mux inputs: 81)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %350 = mul nsw i32 %349, %34... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %350 = mul nsw i32 %349, %34... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %350 = mul nsw i32 %349, %34... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 63)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %351 = add nsw i32 %347, %35... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %351 = add nsw i32 %347, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %351 = add nsw i32 %347, %35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 83)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %354 = mul nsw i32 %353, %35... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %354 = mul nsw i32 %353, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %354 = mul nsw i32 %353, %35... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 65)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %355 = add nsw i32 %351, %35... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %355 = add nsw i32 %351, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %355 = add nsw i32 %351, %35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 85)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %358 = mul nsw i32 %357, %35... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %358 = mul nsw i32 %357, %35... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %358 = mul nsw i32 %357, %35... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 67)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %359 = add nsw i32 %355, %35... (idx
  %364 = add nsw i32 %363, %36... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %384 = add nsw i32 %360, %36... (idx
  %408 = add nsw i32 %368, %36... (idx
  %410 = add nsw i32 %408, %29... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %359 = add nsw i32 %355, %35... (idx
  %364 = add nsw i32 %363, %36... (idx
  %384 = add nsw i32 %360, %36... (idx
  %408 = add nsw i32 %368, %36... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %410 = add nsw i32 %408, %29... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %359 = add nsw i32 %355, %35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 87)
  %364 = add nsw i32 %363, %36... (idx: 1) -> main_signed_add_32_1 (mux inputs: 32)
  %384 = add nsw i32 %360, %36... (idx: 2) -> main_signed_add_32_2 (mux inputs: 21)
  %408 = add nsw i32 %368, %36... (idx: 3) -> main_signed_add_32_3 (mux inputs: 17)
  %410 = add nsw i32 %408, %29... (idx: 4) -> main_signed_add_32_4 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_multiply_32
Weight matrix for operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %386 = mul nsw i32 %dec_ph1.... (idx
  %390 = mul nsw i32 %dec_ph2.... (idx: 1)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %411 = mul nsw i32 %409, 12 (idx
  %412 = mul nsw i32 %410, -44 (idx: 3)           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_multiply_32_0     main_signed_multiply_32_1     main_signed_multiply_32_2     main_signed_multiply_32_3     main_signed_multiply_32_4     main_signed_multiply_32_5     main_signed_multiply_32_6     main_signed_multiply_32_7     main_signed_multiply_32_8     main_signed_multiply_32_9     main_signed_multiply_32_10    main_signed_multiply_32_11    main_signed_multiply_32_12    main_signed_multiply_32_13    main_signed_multiply_32_14    main_signed_multiply_32_15    main_signed_multiply_32_16    main_signed_multiply_32_17    main_signed_multiply_32_18    main_signed_multiply_32_19    main_signed_multiply_32_20    main_signed_multiply_32_21    main_signed_multiply_32_22    main_signed_multiply_32_23    main_signed_multiply_32_24    main_signed_multiply_32_25    main_signed_multiply_32_26    main_signed_multiply_32_27    main_signed_multiply_32_28    main_signed_multiply_32_29    main_signed_multiply_32_30    
  %386 = mul nsw i32 %dec_ph1.... (idx
  %390 = mul nsw i32 %dec_ph2.... (idx
  %411 = mul nsw i32 %409, 12 (idx: 2)            0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %412 = mul nsw i32 %410, -44 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %386 = mul nsw i32 %dec_ph1.... (idx: 0) -> main_signed_multiply_32_0 (mux inputs: 69)
  %390 = mul nsw i32 %dec_ph2.... (idx: 1) -> main_signed_multiply_32_1 (mux inputs: 12)
  %411 = mul nsw i32 %409, 12 (idx: 2) -> main_signed_multiply_32_2 (mux inputs: 5)
  %412 = mul nsw i32 %410, -44 (idx: 3) -> main_signed_multiply_32_3 (mux inputs: 5)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %409 = sub nsw i32 %296, %40... (idx: 0)        100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %409 = sub nsw i32 %296, %40... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %409 = sub nsw i32 %296, %40... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %wd4.0.i.i = add nsw i32 %38... (idx
  %396 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i = add nsw i32 %4... (idx
  %414 = add nsw i32 %413, %41... (idx
  %416 = add nsw i32 %415, %41... (idx
  %418 = add nsw i32 %417, %41... (idx: 5)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %420 = add nsw i32 %419, %41... (idx
  %422 = add nsw i32 %421, %41... (idx
  %424 = add nsw i32 %423, %42... (idx
  %426 = add nsw i32 %425, %42... (idx
  %428 = add nsw i32 %427, %42... (idx
  %430 = add nsw i32 %429, %42... (idx
  %432 = add nsw i32 %431, %42... (idx
  %434 = add nsw i32 %433, %43... (idx
  %436 = add nsw i32 %435, %43... (idx
  %438 = add nsw i32 %437, %43... (idx
  %440 = add nsw i32 %439, %43... (idx
  %442 = add nsw i32 %441, %43... (idx
  %444 = add nsw i32 %443, %44... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %wd4.0.i.i = add nsw i32 %38... (idx
  %396 = add nsw i32 %wd4.0.i.... (idx
  %apl1.0.i.i = add nsw i32 %4... (idx
  %414 = add nsw i32 %413, %41... (idx
  %416 = add nsw i32 %415, %41... (idx
  %418 = add nsw i32 %417, %41... (idx
  %420 = add nsw i32 %419, %41... (idx
  %422 = add nsw i32 %421, %41... (idx
  %424 = add nsw i32 %423, %42... (idx
  %426 = add nsw i32 %425, %42... (idx: 9)        0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %428 = add nsw i32 %427, %42... (idx
  %430 = add nsw i32 %429, %42... (idx: 11)       0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             1                             0                             0                             0                             0                             0                             0                             0                             
  %432 = add nsw i32 %431, %42... (idx
  %434 = add nsw i32 %433, %43... (idx
  %436 = add nsw i32 %435, %43... (idx
  %438 = add nsw i32 %437, %43... (idx
  %440 = add nsw i32 %439, %43... (idx
  %442 = add nsw i32 %441, %43... (idx
  %444 = add nsw i32 %443, %44... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %wd4.0.i.i = add nsw i32 %38... (idx: 0) -> main_signed_add_32_0 (mux inputs: 89)
  %396 = add nsw i32 %wd4.0.i.... (idx: 1) -> main_signed_add_32_1 (mux inputs: 34)
  %apl1.0.i.i = add nsw i32 %4... (idx: 2) -> main_signed_add_32_2 (mux inputs: 23)
  %414 = add nsw i32 %413, %41... (idx: 3) -> main_signed_add_32_3 (mux inputs: 19)
  %416 = add nsw i32 %415, %41... (idx: 4) -> main_signed_add_32_4 (mux inputs: 10)
  %418 = add nsw i32 %417, %41... (idx: 5) -> main_signed_add_32_5 (mux inputs: 8)
  %420 = add nsw i32 %419, %41... (idx: 6) -> main_signed_add_32_6 (mux inputs: 6)
  %422 = add nsw i32 %421, %41... (idx: 7) -> main_signed_add_32_7 (mux inputs: 4)
  %424 = add nsw i32 %423, %42... (idx: 8) -> main_signed_add_32_8 (mux inputs: 4)
  %426 = add nsw i32 %425, %42... (idx: 9) -> main_signed_add_32_9 (mux inputs: 4)
  %428 = add nsw i32 %427, %42... (idx: 10) -> main_signed_add_32_10 (mux inputs: 4)
  %430 = add nsw i32 %429, %42... (idx: 11) -> main_signed_add_32_11 (mux inputs: 4)
  %432 = add nsw i32 %431, %42... (idx: 12) -> main_signed_add_32_12 (mux inputs: 4)
  %434 = add nsw i32 %433, %43... (idx: 13) -> main_signed_add_32_13 (mux inputs: 4)
  %436 = add nsw i32 %435, %43... (idx: 14) -> main_signed_add_32_14 (mux inputs: 4)
  %438 = add nsw i32 %437, %43... (idx: 15) -> main_signed_add_32_15 (mux inputs: 4)
  %440 = add nsw i32 %439, %43... (idx: 16) -> main_signed_add_32_16 (mux inputs: 4)
  %442 = add nsw i32 %441, %43... (idx: 17) -> main_signed_add_32_17 (mux inputs: 4)
  %444 = add nsw i32 %443, %44... (idx: 18) -> main_signed_add_32_18 (mux inputs: 4)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %457, i32* %459, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %457, i32* %459, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %457, i32* %459, a... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %446 = add nsw i32 %445, %44... (idx
  %448 = add nsw i32 %447, %44... (idx
  %450 = add nsw i32 %449, %44... (idx: 2)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
  %452 = add nsw i32 %451, %44... (idx
  %454 = add nsw i32 %453, %45... (idx
  %456 = add nsw i32 %455, %45... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %446 = add nsw i32 %445, %44... (idx
  %448 = add nsw i32 %447, %44... (idx
  %450 = add nsw i32 %449, %44... (idx
  %452 = add nsw i32 %451, %44... (idx
  %454 = add nsw i32 %453, %45... (idx
  %456 = add nsw i32 %455, %45... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %446 = add nsw i32 %445, %44... (idx: 0) -> main_signed_add_32_0 (mux inputs: 91)
  %448 = add nsw i32 %447, %44... (idx: 1) -> main_signed_add_32_1 (mux inputs: 36)
  %450 = add nsw i32 %449, %44... (idx: 2) -> main_signed_add_32_2 (mux inputs: 25)
  %452 = add nsw i32 %451, %44... (idx: 3) -> main_signed_add_32_3 (mux inputs: 21)
  %454 = add nsw i32 %453, %45... (idx: 4) -> main_signed_add_32_4 (mux inputs: 12)
  %456 = add nsw i32 %455, %45... (idx: 5) -> main_signed_add_32_5 (mux inputs: 10)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_subtract_32
Weight matrix for operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %404 = sub nsw i32 15360, %.... (idx: 0)        100                           100                           
  %406 = sub nsw i32 0, %404 (idx: 1)             100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_subtract_32_0     main_signed_subtract_32_1     
  %404 = sub nsw i32 15360, %.... (idx: 0)        1                             0                             
  %406 = sub nsw i32 0, %404 (idx: 1)             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %404 = sub nsw i32 15360, %.... (idx: 0) -> main_signed_subtract_32_0 (mux inputs: 18)
  %406 = sub nsw i32 0, %404 (idx: 1) -> main_signed_subtract_32_1 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %458, i32* %461, a... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  store i32 %458, i32* %461, a... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %458, i32* %461, a... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 4)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %470 = add nsw i32 %i.03, 1 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %470 = add nsw i32 %i.03, 1 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %470 = add nsw i32 %i.03, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 92)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep63 = add i32 %gep_int61,... (idx
  %gep66 = add i32 %gep_int64,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep63 = add i32 %gep_int61,... (idx
  %gep66 = add i32 %gep_int64,... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep63 = add i32 %gep_int61,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 94)
  %gep66 = add i32 %gep_int64,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 38)
State: LEGUP_F_main_BB_adpcm_mainexit
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.0 = add nsw i3... (idx: 0)        100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.0 = add nsw i3... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.main_result.0 = add nsw i3... (idx: 0) -> main_signed_add_32_0 (mux inputs: 96)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %477 = add nsw i32 %i.11, 1 (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %477 = add nsw i32 %i.11, 1 (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %477 = add nsw i32 %i.11, 1 (idx: 0) -> main_signed_add_32_0 (mux inputs: 97)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  %472 = load i32* %471, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_result_local_mem_dual_port_0
  %472 = load i32* %471, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %472 = load i32* %471, align... (idx: 0) -> main_result_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep69 = add i32 %gep_int67,... (idx
  %gep72 = add i32 %gep_int70,... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %gep69 = add i32 %gep_int67,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
  %gep72 = add i32 %gep_int70,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep69 = add i32 %gep_int67,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 99)
  %gep72 = add i32 %gep_int70,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 40)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: test_result_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %474 = load i32* %473, align... (idx: 0)        100                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_test_result_local_mem_dual_port_0
  %474 = load i32* %473, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %474 = load i32* %473, align... (idx: 0) -> main_test_result_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.2 = add nsw i3... (idx
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          main_signed_add_32_8          main_signed_add_32_9          main_signed_add_32_10         main_signed_add_32_11         main_signed_add_32_12         main_signed_add_32_13         main_signed_add_32_14         main_signed_add_32_15         main_signed_add_32_16         main_signed_add_32_17         main_signed_add_32_18         
  %.main_result.2 = add nsw i3... (idx
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.main_result.2 = add nsw i3... (idx: 0) -> main_signed_add_32_0 (mux inputs: 101)

