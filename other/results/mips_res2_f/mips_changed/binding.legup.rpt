//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Sun Jul 26 12:56:54 2015
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Jun 23 10:54:09 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
imem_local_mem_dual_port      1                             
main_0_dmem_local_mem_dual_port2                             
main_0_reg_local_mem_dual_port2                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__2
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 0, i32* %s.i.0, al... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 0, i32* %s.i.0, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %s.i.0, al... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_legup_memset_4exit
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep, ... (idx: 0)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %scevgep, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %scevgep, ... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader14
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 22, i32* %5, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 5, i32* %6, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 22, i32* %5, align... (idx: 0)        6                             10                            
  store i32 5, i32* %6, align ... (idx: 1)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 22, i32* %5, align... (idx: 0)        1                             0                             
  store i32 5, i32* %6, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 22, i32* %5, align... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 2)
  store i32 5, i32* %6, align ... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_preheader14
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 2147479548, i32* %... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 2147479548, i32* %... (idx: 0)        6                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 2147479548, i32* %... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 2147479548, i32* %... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader14
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 -9, i32* %7, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 -9, i32* %7, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  store i32 3, i32* %8, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 3, i32* %8, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 -9, i32* %7, align... (idx: 0)        7                             6                             
  store i32 3, i32* %8, align ... (idx: 1)        7                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 -9, i32* %7, align... (idx: 0)        1                             0                             
  store i32 3, i32* %8, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 -9, i32* %7, align... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 3)
  store i32 3, i32* %8, align ... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_preheader14
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 -17, i32* %9, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 -17, i32* %9, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  store i32 38, i32* %10, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 38, i32* %10, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 -17, i32* %9, alig... (idx: 0)        8                             7                             
  store i32 38, i32* %10, alig... (idx: 1)        8                             7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 -17, i32* %9, alig... (idx: 0)        1                             0                             
  store i32 38, i32* %10, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 -17, i32* %9, alig... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 4)
  store i32 38, i32* %10, alig... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_preheader14
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %11, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 0, i32* %11, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  store i32 11, i32* %12, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 11, i32* %12, alig... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 0, i32* %11, align... (idx: 0)        9                             8                             
  store i32 11, i32* %12, alig... (idx: 1)        9                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 0, i32* %11, align... (idx: 0)        1                             0                             
  store i32 11, i32* %12, alig... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %11, align... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 5)
  store i32 11, i32* %12, alig... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__15
Binding functional unit type: imem_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_imem_local_mem_dual_port_0
  %20 = load i32* %19, align 4... (idx: 0)        10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_imem_local_mem_dual_port_0
  %20 = load i32* %19, align 4... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %20 = load i32* %19, align 4... (idx: 0) -> main_imem_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB__33
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* %34, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %37 = load i32* %36, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %35 = load i32* %34, align 4... (idx: 0)        7                             10                            
  %37 = load i32* %36, align 4... (idx: 1)        7                             10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %35 = load i32* %34, align 4... (idx: 0)        1                             0                             
  %37 = load i32* %36, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* %34, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 3)
  %37 = load i32* %36, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__33
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %40 = load i32* %39, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %40 = load i32* %39, align 4... (idx: 0)        8                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %40 = load i32* %39, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %40 = load i32* %39, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__33
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %41, i32* %39, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %41, i32* %39, ali... can share an input with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  store i32 %41, i32* %39, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %41, i32* %39, ali... (idx: 0)        18                            7                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %41, i32* %39, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %41, i32* %39, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__42
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %44 = load i32* %43, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %44 = load i32* %43, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %46 = load i32* %45, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %46 = load i32* %45, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %44 = load i32* %43, align 4... (idx: 0)        8                             8                             
  %46 = load i32* %45, align 4... (idx: 1)        8                             8                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %44 = load i32* %43, align 4... (idx: 0)        1                             0                             
  %46 = load i32* %45, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %44 = load i32* %43, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 4)
  %46 = load i32* %45, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__42
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %49 = load i32* %48, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %49 = load i32* %48, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %49 = load i32* %48, align 4... (idx: 0)        9                             9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %49 = load i32* %48, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %49 = load i32* %48, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 5)
State: LEGUP_F_main_BB__42
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %50, i32* %48, ali... can share an input with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %50, i32* %48, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %50, i32* %48, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %50, i32* %48, ali... (idx: 0)        10                            19                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %50, i32* %48, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %50, i32* %48, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__51
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %53 = load i32* %52, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %53 = load i32* %52, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %53 = load i32* %52, align 4... (idx: 0)        11                            9                             
  %56 = load i32* %55, align 4... (idx: 1)        11                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %53 = load i32* %52, align 4... (idx: 0)        1                             0                             
  %56 = load i32* %55, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %53 = load i32* %52, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 7)
  %56 = load i32* %55, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__51
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %60 = load i32* %59, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %60 = load i32* %59, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %60 = load i32* %59, align 4... (idx: 0)        12                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %60 = load i32* %59, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %60 = load i32* %59, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__66
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %68 = load i32* %67, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %68 = load i32* %67, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %71 = load i32* %70, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %71 = load i32* %70, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %68 = load i32* %67, align 4... (idx: 0)        12                            11                            
  %71 = load i32* %70, align 4... (idx: 1)        12                            11                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %68 = load i32* %67, align 4... (idx: 0)        1                             0                             
  %71 = load i32* %70, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = load i32* %67, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 8)
  %71 = load i32* %70, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__77
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Hi.0, i32* %78, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %Hi.0, i32* %78, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Hi.0, i32* %78, a... (idx: 0)        23                            22                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Hi.0, i32* %78, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Hi.0, i32* %78, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__79
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %Lo.0, i32* %80, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %Lo.0, i32* %80, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Lo.0, i32* %80, a... (idx: 0)        23                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %Lo.0, i32* %80, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %Lo.0, i32* %80, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB__81
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %83 = load i32* %82, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %83 = load i32* %82, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %85 = load i32* %84, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %85 = load i32* %84, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %83 = load i32* %82, align 4... (idx: 0)        15                            14                            
  %85 = load i32* %84, align 4... (idx: 1)        15                            14                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %83 = load i32* %82, align 4... (idx: 0)        1                             0                             
  %85 = load i32* %84, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %83 = load i32* %82, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 11)
  %85 = load i32* %84, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB__81
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %86, i32* %87, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %86, i32* %87, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %86, i32* %87, ali... (idx: 0)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %86, i32* %87, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %86, i32* %87, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB__88
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %90 = load i32* %89, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %90 = load i32* %89, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %92 = load i32* %91, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %92 = load i32* %91, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %90 = load i32* %89, align 4... (idx: 0)        16                            17                            
  %92 = load i32* %91, align 4... (idx: 1)        16                            17                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %90 = load i32* %89, align 4... (idx: 0)        1                             0                             
  %92 = load i32* %91, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %90 = load i32* %89, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 12)
  %92 = load i32* %91, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_main_BB__88
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %93, i32* %94, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %93, i32* %94, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %93, i32* %94, ali... (idx: 0)        27                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %93, i32* %94, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %93, i32* %94, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB__95
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %97 = load i32* %96, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %97 = load i32* %96, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %99 = load i32* %98, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %99 = load i32* %98, align 4... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %97 = load i32* %96, align 4... (idx: 0)        19                            18                            
  %99 = load i32* %98, align 4... (idx: 1)        19                            18                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %97 = load i32* %96, align 4... (idx: 0)        1                             0                             
  %99 = load i32* %98, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %97 = load i32* %96, align 4... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 15)
  %99 = load i32* %98, align 4... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB__95
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %100, i32* %101, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %100, i32* %101, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %100, i32* %101, a... (idx: 0)        30                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %100, i32* %101, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %100, i32* %101, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB__102
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %104 = load i32* %103, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %104 = load i32* %103, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %104 = load i32* %103, align... (idx: 0)        20                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %104 = load i32* %103, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %104 = load i32* %103, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB__102
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %105, i32* %106, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %105, i32* %106, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %105, i32* %106, a... (idx: 0)        31                            31                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %105, i32* %106, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %105, i32* %106, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 18)
State: LEGUP_F_main_BB__107
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %109 = load i32* %108, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %109 = load i32* %108, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %109 = load i32* %108, align... (idx: 0)        23                            21                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %109 = load i32* %108, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = load i32* %108, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB__107
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %110, i32* %111, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %110, i32* %111, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %110, i32* %111, a... (idx: 0)        33                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %110, i32* %111, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %110, i32* %111, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_main_BB__112
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %114 = load i32* %113, align... (idx: 0)        23                            24                            
  %116 = load i32* %115, align... (idx: 1)        23                            24                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %114 = load i32* %113, align... (idx: 0)        1                             0                             
  %116 = load i32* %115, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = load i32* %113, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 19)
  %116 = load i32* %115, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_main_BB__112
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %117, i32* %118, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %117, i32* %118, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %117, i32* %118, a... (idx: 0)        34                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %117, i32* %118, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %117, i32* %118, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_main_BB__119
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %121 = load i32* %120, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %121 = load i32* %120, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %123 = load i32* %122, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %123 = load i32* %122, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %121 = load i32* %120, align... (idx: 0)        26                            25                            
  %123 = load i32* %122, align... (idx: 1)        26                            25                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %121 = load i32* %120, align... (idx: 0)        1                             0                             
  %123 = load i32* %122, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %121 = load i32* %120, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 22)
  %123 = load i32* %122, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_main_BB__119
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %124, i32* %125, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %124, i32* %125, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %124, i32* %125, a... (idx: 0)        37                            36                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %124, i32* %125, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %124, i32* %125, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB__126
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %128 = load i32* %127, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %128 = load i32* %127, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %130 = load i32* %129, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %130 = load i32* %129, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %128 = load i32* %127, align... (idx: 0)        27                            28                            
  %130 = load i32* %129, align... (idx: 1)        27                            28                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %128 = load i32* %127, align... (idx: 0)        1                             0                             
  %130 = load i32* %129, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %128 = load i32* %127, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 23)
  %130 = load i32* %129, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_main_BB__126
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %132, i32* %133, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %132, i32* %133, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %132, i32* %133, a... (idx: 0)        38                            39                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %132, i32* %133, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %132, i32* %133, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 25)
State: LEGUP_F_main_BB__134
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %136 = load i32* %135, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %136 = load i32* %135, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %138 = load i32* %137, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %138 = load i32* %137, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %136 = load i32* %135, align... (idx: 0)        30                            29                            
  %138 = load i32* %137, align... (idx: 1)        30                            29                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %136 = load i32* %135, align... (idx: 0)        1                             0                             
  %138 = load i32* %137, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %136 = load i32* %135, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 26)
  %138 = load i32* %137, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_main_BB__134
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %140, i32* %141, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %140, i32* %141, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %140, i32* %141, a... (idx: 0)        41                            40                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %140, i32* %141, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %140, i32* %141, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB__142
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i32* %143, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %144 = load i32* %143, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %144 = load i32* %143, align... (idx: 0)        31                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %144 = load i32* %143, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i32* %143, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 27)
State: LEGUP_F_main_BB__148
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %21, i32* %14, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %21, i32* %14, ali... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %21, i32* %14, ali... (idx: 0)        42                            42                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %21, i32* %14, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %21, i32* %14, ali... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 29)
State: LEGUP_F_main_BB__156
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %158 = load i32* %157, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %158 = load i32* %157, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %158 = load i32* %157, align... (idx: 0)        34                            32                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %158 = load i32* %157, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %158 = load i32* %157, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_main_BB__156
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %160, i32* %161, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %160, i32* %161, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %160, i32* %161, a... (idx: 0)        44                            43                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %160, i32* %161, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %160, i32* %161, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB__162
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %164 = load i32* %163, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %164 = load i32* %163, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %164 = load i32* %163, align... (idx: 0)        34                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %164 = load i32* %163, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = load i32* %163, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 30)
State: LEGUP_F_main_BB__162
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %166, i32* %167, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %166, i32* %167, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %166, i32* %167, a... (idx: 0)        45                            45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %166, i32* %167, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %166, i32* %167, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 32)
State: LEGUP_F_main_BB__168
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %170 = load i32* %169, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %170 = load i32* %169, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %170 = load i32* %169, align... (idx: 0)        37                            35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %170 = load i32* %169, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %170 = load i32* %169, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 31)
State: LEGUP_F_main_BB__168
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %172, i32* %173, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %172, i32* %173, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %172, i32* %173, a... (idx: 0)        47                            46                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %172, i32* %173, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %172, i32* %173, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 33)
State: LEGUP_F_main_BB__174
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %176 = load i32* %175, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %176 = load i32* %175, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %176 = load i32* %175, align... (idx: 0)        37                            38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %176 = load i32* %175, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %176 = load i32* %175, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 33)
State: LEGUP_F_main_BB__174
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %178, i32* %179, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %178, i32* %179, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %178, i32* %179, a... (idx: 0)        48                            48                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %178, i32* %179, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %178, i32* %179, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 35)
State: LEGUP_F_main_BB__180
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %182 = load i32* %181, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %182 = load i32* %181, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %182 = load i32* %181, align... (idx: 0)        40                            38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %182 = load i32* %181, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %182 = load i32* %181, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 34)
State: LEGUP_F_main_BB__180
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %187 = load i32* %186, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %187 = load i32* %186, align... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %187 = load i32* %186, align... (idx: 0)        10                            9                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %187 = load i32* %186, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %187 = load i32* %186, align... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB__180
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %187, i32* %188, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %187, i32* %188, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %187, i32* %188, a... (idx: 0)        50                            49                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %187, i32* %188, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %187, i32* %188, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 36)
State: LEGUP_F_main_BB__189
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %191 = load i32* %190, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %191 = load i32* %190, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %193 = load i32* %192, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %193 = load i32* %192, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %191 = load i32* %190, align... (idx: 0)        40                            41                            
  %193 = load i32* %192, align... (idx: 1)        40                            41                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %191 = load i32* %190, align... (idx: 0)        1                             0                             
  %193 = load i32* %192, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %191 = load i32* %190, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 36)
  %193 = load i32* %192, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 37)
State: LEGUP_F_main_BB__189
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %191, i32* %197, a... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  store i32 %191, i32* %197, a... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 %191, i32* %197, a... (idx: 0)        20                            20                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  store i32 %191, i32* %197, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %191, i32* %197, a... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB__198
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %sext4, i32* %199,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %sext4, i32* %199,... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %sext4, i32* %199,... (idx: 0)        51                            52                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %sext4, i32* %199,... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %sext4, i32* %199,... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 38)
State: LEGUP_F_main_BB__200
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %202 = load i32* %201, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %202 = load i32* %201, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %204 = load i32* %203, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %204 = load i32* %203, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %202 = load i32* %201, align... (idx: 0)        43                            42                            
  %204 = load i32* %203, align... (idx: 1)        43                            42                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %202 = load i32* %201, align... (idx: 0)        1                             0                             
  %204 = load i32* %203, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %202 = load i32* %201, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 39)
  %204 = load i32* %203, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 38)
State: LEGUP_F_main_BB__209
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %211 = load i32* %210, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %211 = load i32* %210, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %211 = load i32* %210, align... (idx: 0)        44                            43                            
  %213 = load i32* %212, align... (idx: 1)        44                            43                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %211 = load i32* %210, align... (idx: 0)        1                             0                             
  %213 = load i32* %212, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %211 = load i32* %210, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 40)
  %213 = load i32* %212, align... (idx: 1) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 39)
State: LEGUP_F_main_BB__218
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %220 = load i32* %219, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %220 = load i32* %219, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %220 = load i32* %219, align... (idx: 0)        45                            44                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %220 = load i32* %219, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %220 = load i32* %219, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 40)
State: LEGUP_F_main_BB__225
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %227 = load i32* %226, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %227 = load i32* %226, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %227 = load i32* %226, align... (idx: 0)        45                            45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %227 = load i32* %226, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %227 = load i32* %226, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 41)
State: LEGUP_F_main_BB__225
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %230, i32* %231, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %230, i32* %231, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %230, i32* %231, a... (idx: 0)        56                            55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %230, i32* %231, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %230, i32* %231, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 42)
State: LEGUP_F_main_BB__232
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %234 = load i32* %233, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  %234 = load i32* %233, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %234 = load i32* %233, align... (idx: 0)        46                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  %234 = load i32* %233, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %234 = load i32* %233, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 42)
State: LEGUP_F_main_BB__232
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %237, i32* %238, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 %237, i32* %238, a... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %237, i32* %238, a... (idx: 0)        57                            57                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 %237, i32* %238, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %237, i32* %238, a... (idx: 0) -> main_main_0_reg_local_mem_dual_port_0 (mux inputs: 44)
State: LEGUP_F_main_BB_thread
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        49                            47                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %13, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 43)
State: LEGUP_F_main_BB__239
Binding functional unit type: main_0_reg_local_mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_0
  store i32 0, i32* %13, align... can share an input with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... can share an output register with another operation already assigned to main_main_0_reg_local_mem_dual_port_1
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        49                            38                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_reg_local_mem_dual_port_0main_main_0_reg_local_mem_dual_port_1
  store i32 0, i32* %13, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 0, i32* %13, align... (idx: 0) -> main_main_0_reg_local_mem_dual_port_1 (mux inputs: 43)
State: LEGUP_F_main_BB_loopexit
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %244 = load i32* %5, align 4... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %244 = load i32* %5, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %244 = load i32* %5, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %248 = load i32* %6, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %248 = load i32* %6, align 4... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %248 = load i32* %6, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %244 = load i32* %5, align 4... (idx: 0)        2                             10                            
  %248 = load i32* %6, align 4... (idx: 1)        12                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %244 = load i32* %5, align 4... (idx: 0)        1                             0                             
  %248 = load i32* %6, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %244 = load i32* %5, align 4... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
  %248 = load i32* %6, align 4... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_loopexit
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %252 = load i32* %7, align 4... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %252 = load i32* %7, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %252 = load i32* %7, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %256 = load i32* %8, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %256 = load i32* %8, align 4... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %256 = load i32* %8, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %252 = load i32* %7, align 4... (idx: 0)        2                             10                            
  %256 = load i32* %8, align 4... (idx: 1)        12                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %252 = load i32* %7, align 4... (idx: 0)        1                             0                             
  %256 = load i32* %8, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %252 = load i32* %7, align 4... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
  %256 = load i32* %8, align 4... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_loopexit
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %260 = load i32* %9, align 4... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %260 = load i32* %9, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %260 = load i32* %9, align 4... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %264 = load i32* %10, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %264 = load i32* %10, align ... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %264 = load i32* %10, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %260 = load i32* %9, align 4... (idx: 0)        2                             10                            
  %264 = load i32* %10, align ... (idx: 1)        12                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %260 = load i32* %9, align 4... (idx: 0)        1                             0                             
  %264 = load i32* %10, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %260 = load i32* %9, align 4... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
  %264 = load i32* %10, align ... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_loopexit
Binding functional unit type: main_0_dmem_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %268 = load i32* %11, align ... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %268 = load i32* %11, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %268 = load i32* %11, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %272 = load i32* %12, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_0
  %272 = load i32* %12, align ... can share an input with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
  %272 = load i32* %12, align ... can share an output register with another operation already assigned to main_main_0_dmem_local_mem_dual_port_1
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %268 = load i32* %11, align ... (idx: 0)        2                             10                            
  %272 = load i32* %12, align ... (idx: 1)        12                            0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_main_0_dmem_local_mem_dual_port_0main_main_0_dmem_local_mem_dual_port_1
  %268 = load i32* %11, align ... (idx: 0)        1                             0                             
  %272 = load i32* %12, align ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %268 = load i32* %11, align ... (idx: 0) -> main_main_0_dmem_local_mem_dual_port_0 (mux inputs: 7)
  %272 = load i32* %12, align ... (idx: 1) -> main_main_0_dmem_local_mem_dual_port_1 (mux inputs: 5)

