//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Jun 18 03:11:52 2019
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Jun 23 13:25:24 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decryptout_dec_statemt_local_mem_dual_port1                             
encryptout_enc_statemt_local_mem_dual_port1                             
invSbox_local_mem_dual_port   2                             
mem_dual_port                 2                             
signed_add_32                 8                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 50, i32* getelemen... (idx: 0)        0                             0                             
  store i32 67, i32* getelemen... (idx: 1)        0                             0                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 50, i32* getelemen... (idx: 0)        1                             0                             
  store i32 67, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 50, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 67, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 246, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 246, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 168, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 168, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 246, i32* geteleme... (idx: 0)        10                            10                            
  store i32 168, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 246, i32* geteleme... (idx: 0)        1                             0                             
  store i32 168, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 246, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 168, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 90, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 90, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 136, i32* geteleme... (idx: 0)        10                            10                            
  store i32 90, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 136, i32* geteleme... (idx: 0)        1                             0                             
  store i32 90, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 136, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 90, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 48, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 48, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 141, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 141, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* getelemen... (idx: 0)        10                            10                            
  store i32 141, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* getelemen... (idx: 0)        1                             0                             
  store i32 141, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 48, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 141, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 49, i32* getelemen... (idx: 0)        10                            10                            
  store i32 49, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 49, i32* getelemen... (idx: 0)        1                             0                             
  store i32 49, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 49, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 49, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 152, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 152, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 162, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 162, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 152, i32* geteleme... (idx: 0)        10                            10                            
  store i32 162, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 152, i32* geteleme... (idx: 0)        1                             0                             
  store i32 162, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 152, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 162, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 224, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 224, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 55, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 55, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 224, i32* geteleme... (idx: 0)        10                            10                            
  store i32 55, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 224, i32* geteleme... (idx: 0)        1                             0                             
  store i32 55, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 224, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 55, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 7, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 7, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 52, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 52, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 7, i32* getelement... (idx: 0)        10                            10                            
  store i32 52, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 7, i32* getelement... (idx: 0)        1                             0                             
  store i32 52, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 7, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 52, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 43, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 43, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 126, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 126, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 43, i32* getelemen... (idx: 0)        10                            10                            
  store i32 126, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 43, i32* getelemen... (idx: 0)        1                             0                             
  store i32 126, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 43, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 126, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 22, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 22, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        10                            10                            
  store i32 22, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        1                             0                             
  store i32 22, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 21, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 22, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 40, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 40, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 174, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 174, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 40, i32* getelemen... (idx: 0)        10                            10                            
  store i32 174, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 40, i32* getelemen... (idx: 0)        1                             0                             
  store i32 174, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 40, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 174, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 210, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 210, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 166, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 166, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 210, i32* geteleme... (idx: 0)        10                            10                            
  store i32 166, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 210, i32* geteleme... (idx: 0)        1                             0                             
  store i32 166, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 210, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 166, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 171, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 171, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 247, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 247, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 171, i32* geteleme... (idx: 0)        10                            10                            
  store i32 247, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 171, i32* geteleme... (idx: 0)        1                             0                             
  store i32 247, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 171, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 247, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        10                            10                            
  store i32 136, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        1                             0                             
  store i32 136, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 21, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 136, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 9, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 9, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 207, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 207, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 9, i32* getelement... (idx: 0)        10                            10                            
  store i32 207, i32* geteleme... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 9, i32* getelement... (idx: 0)        1                             0                             
  store i32 207, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 9, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 207, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 79, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 79, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 60, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 60, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 79, i32* getelemen... (idx: 0)        10                            10                            
  store i32 60, i32* getelemen... (idx: 1)        10                            10                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 79, i32* getelemen... (idx: 0)        1                             0                             
  store i32 60, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 79, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 60, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__2
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep5 = add i32 %gep_int4, 4... (idx: 0)        -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
  %gep12 = add i32 %gep_int11,... (idx: 1)        -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
  %gep19 = add i32 %gep_int18,... (idx: 2)        -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
  %27 = add nsw i32 %j.01.i.i,... (idx: 3)        -5                            -5                            -5                            -5                            -5                            -5                            -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep5 = add i32 %gep_int4, 4... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep12 = add i32 %gep_int11,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep19 = add i32 %gep_int18,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %27 = add nsw i32 %j.01.i.i,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep5 = add i32 %gep_int4, 4... (idx: 0) -> main_signed_add_32_0 (mux inputs: 1)
  %gep12 = add i32 %gep_int11,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 1)
  %gep19 = add i32 %gep_int18,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 1)
  %27 = add nsw i32 %j.01.i.i,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 1)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %4 = load i32* %3, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %4 = load i32* %3, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %7 = load i32* %6, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %7 = load i32* %6, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %3, align 4, ... (idx: 0)        5                             5                             
  %7 = load i32* %6, align 4, ... (idx: 1)        5                             5                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %3, align 4, ... (idx: 0)        1                             0                             
  %7 = load i32* %6, align 4, ... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %4 = load i32* %3, align 4, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 1)
  %7 = load i32* %6, align 4, ... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__2
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep = add i32 %gep_int, %ge... (idx: 0)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep3 = add i32 %gep_int1, %... (idx: 1)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep7 = add i32 %gep5, %gep_... (idx: 2)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep10 = add i32 %gep_int8, ... (idx: 3)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep14 = add i32 %gep12, %ge... (idx: 4)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep17 = add i32 %gep_int15,... (idx: 5)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep21 = add i32 %gep19, %ge... (idx: 6)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
  %gep24 = add i32 %gep_int22,... (idx: 7)        -20                           -20                           -20                           -20                           -10                           -10                           -10                           -10                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep = add i32 %gep_int, %ge... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep3 = add i32 %gep_int1, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep7 = add i32 %gep5, %gep_... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep10 = add i32 %gep_int8, ... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep14 = add i32 %gep12, %ge... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep17 = add i32 %gep_int15,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             
  %gep21 = add i32 %gep19, %ge... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep24 = add i32 %gep_int22,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 3)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 3)
  %gep7 = add i32 %gep5, %gep_... (idx: 2) -> main_signed_add_32_2 (mux inputs: 3)
  %gep10 = add i32 %gep_int8, ... (idx: 3) -> main_signed_add_32_3 (mux inputs: 3)
  %gep14 = add i32 %gep12, %ge... (idx: 4) -> main_signed_add_32_4 (mux inputs: 2)
  %gep17 = add i32 %gep_int15,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 2)
  %gep21 = add i32 %gep19, %ge... (idx: 6) -> main_signed_add_32_6 (mux inputs: 2)
  %gep24 = add i32 %gep_int22,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %8, i32* %6, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %8, i32* %6, align... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %8, i32* %6, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %8, i32* %6, align... (idx: 0)        -10                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %8, i32* %6, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* %6, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %10 = load i32* %9, align 4,... can share an output register with another operation already assigned to main_mem_dual_port_0
  %10 = load i32* %9, align 4,... can share an output register with another operation already assigned to main_mem_dual_port_1
  %13 = load i32* %12, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %13 = load i32* %12, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load i32* %9, align 4,... (idx: 0)        -25                           -5                            
  %13 = load i32* %12, align 4... (idx: 1)        -25                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load i32* %9, align 4,... (idx: 0)        1                             0                             
  %13 = load i32* %12, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %10 = load i32* %9, align 4,... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %13 = load i32* %12, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %14, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %14, i32* %12, ali... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %14, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %14, i32* %12, ali... (idx: 0)        -40                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %14, i32* %12, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* %12, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %16 = load i32* %15, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %16 = load i32* %15, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %19 = load i32* %18, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %19 = load i32* %18, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load i32* %15, align 4... (idx: 0)        -55                           -15                           
  %19 = load i32* %18, align 4... (idx: 1)        -55                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load i32* %15, align 4... (idx: 0)        1                             0                             
  %19 = load i32* %18, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load i32* %15, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %19 = load i32* %18, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %20, i32* %18, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %20, i32* %18, ali... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %20, i32* %18, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %20, i32* %18, ali... (idx: 0)        -70                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %20, i32* %18, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %20, i32* %18, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i32* %21, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %22 = load i32* %21, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %25 = load i32* %24, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load i32* %24, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i32* %21, align 4... (idx: 0)        -85                           -25                           
  %25 = load i32* %24, align 4... (idx: 1)        -85                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i32* %21, align 4... (idx: 0)        1                             0                             
  %25 = load i32* %24, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i32* %21, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  %25 = load i32* %24, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %26, i32* %24, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %26, i32* %24, ali... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %26, i32* %24, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %26, i32* %24, ali... (idx: 0)        -100                          -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %26, i32* %24, ali... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %26, i32* %24, ali... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %28 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %28 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %33 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %33 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %28 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %33 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %28 = load i32* getelementpt... (idx: 0)        1                             0                             
  %33 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %28 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %33 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %38 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %38 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %43 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %43 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %38 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %43 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %38 = load i32* getelementpt... (idx: 0)        1                             0                             
  %43 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %38 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %43 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %48 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %48 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %53 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %53 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %48 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %53 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %48 = load i32* getelementpt... (idx: 0)        1                             0                             
  %53 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %48 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %53 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %58 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %58 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %63 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %63 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %58 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %63 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %58 = load i32* getelementpt... (idx: 0)        1                             0                             
  %63 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %58 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %63 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep29 = add i32 %gep27, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep32 = add i32 %gep_int30,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep27 = add i32 %gep_int25,... (idx: 0)        -30                           -30                           -30                           -30                           -20                           -20                           -20                           -20                           
  %gep29 = add i32 %gep27, %ge... (idx: 1)        -30                           -30                           -30                           -30                           -20                           -20                           -20                           -20                           
  %gep32 = add i32 %gep_int30,... (idx: 2)        -30                           -30                           -30                           -30                           -20                           -20                           -20                           -20                           
  %gep34 = add i32 %gep32, %ge... (idx: 3)        -30                           -30                           -30                           -30                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep27 = add i32 %gep_int25,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep29 = add i32 %gep27, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep32 = add i32 %gep_int30,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep34 = add i32 %gep32, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep27 = add i32 %gep_int25,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 5)
  %gep29 = add i32 %gep27, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 5)
  %gep32 = add i32 %gep_int30,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 5)
  %gep34 = add i32 %gep32, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 5)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %68 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %68 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %73 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %73 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %73 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %68 = load i32* getelementpt... (idx: 0)        1                             0                             
  %73 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %68 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %73 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep39 = add i32 %gep37, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep42 = add i32 %gep_int40,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep44 = add i32 %gep42, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep37 = add i32 %gep_int35,... (idx: 0)        -50                           -50                           -50                           -50                           -20                           -20                           -20                           -20                           
  %gep39 = add i32 %gep37, %ge... (idx: 1)        -50                           -50                           -50                           -50                           -20                           -20                           -20                           -20                           
  %gep42 = add i32 %gep_int40,... (idx: 2)        -50                           -50                           -50                           -50                           -20                           -20                           -20                           -20                           
  %gep44 = add i32 %gep42, %ge... (idx: 3)        -50                           -50                           -50                           -50                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep37 = add i32 %gep_int35,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep39 = add i32 %gep37, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep42 = add i32 %gep_int40,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep44 = add i32 %gep42, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep37 = add i32 %gep_int35,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 7)
  %gep39 = add i32 %gep37, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 7)
  %gep42 = add i32 %gep_int40,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 7)
  %gep44 = add i32 %gep42, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 7)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %78 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %78 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %83 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %83 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %78 = load i32* getelementpt... (idx: 0)        1                             0                             
  %83 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %78 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %83 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep47 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep49 = add i32 %gep47, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep52 = add i32 %gep_int50,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep54 = add i32 %gep52, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep47 = add i32 %gep_int45,... (idx: 0)        -70                           -70                           -70                           -70                           -20                           -20                           -20                           -20                           
  %gep49 = add i32 %gep47, %ge... (idx: 1)        -70                           -70                           -70                           -70                           -20                           -20                           -20                           -20                           
  %gep52 = add i32 %gep_int50,... (idx: 2)        -70                           -70                           -70                           -70                           -20                           -20                           -20                           -20                           
  %gep54 = add i32 %gep52, %ge... (idx: 3)        -70                           -70                           -70                           -70                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep47 = add i32 %gep_int45,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep49 = add i32 %gep47, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep52 = add i32 %gep_int50,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep54 = add i32 %gep52, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep47 = add i32 %gep_int45,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 9)
  %gep49 = add i32 %gep47, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 9)
  %gep52 = add i32 %gep_int50,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 9)
  %gep54 = add i32 %gep52, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 9)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %88 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %88 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %93 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %93 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %93 = load i32* getelementpt... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %88 = load i32* getelementpt... (idx: 0)        1                             0                             
  %93 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %88 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %93 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep57 = add i32 %gep_int55,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep59 = add i32 %gep57, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep62 = add i32 %gep_int60,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep64 = add i32 %gep62, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep57 = add i32 %gep_int55,... (idx: 0)        -90                           -90                           -90                           -90                           -20                           -20                           -20                           -20                           
  %gep59 = add i32 %gep57, %ge... (idx: 1)        -90                           -90                           -90                           -90                           -20                           -20                           -20                           -20                           
  %gep62 = add i32 %gep_int60,... (idx: 2)        -90                           -90                           -90                           -90                           -20                           -20                           -20                           -20                           
  %gep64 = add i32 %gep62, %ge... (idx: 3)        -90                           -90                           -90                           -90                           -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep57 = add i32 %gep_int55,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep59 = add i32 %gep57, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep62 = add i32 %gep_int60,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep64 = add i32 %gep62, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep57 = add i32 %gep_int55,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 11)
  %gep59 = add i32 %gep57, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 11)
  %gep62 = add i32 %gep_int60,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 11)
  %gep64 = add i32 %gep62, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 11)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %98 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %98 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %103 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %103 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* getelementpt... (idx: 0)        -110                          -30                           
  %103 = load i32* getelementp... (idx: 1)        -110                          -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %98 = load i32* getelementpt... (idx: 0)        1                             0                             
  %103 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %98 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  %103 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep67 = add i32 %gep_int65,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep69 = add i32 %gep67, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep72 = add i32 %gep_int70,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep74 = add i32 %gep72, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep67 = add i32 %gep_int65,... (idx: 0)        -110                          -110                          -110                          -110                          -20                           -20                           -20                           -20                           
  %gep69 = add i32 %gep67, %ge... (idx: 1)        -110                          -110                          -110                          -110                          -20                           -20                           -20                           -20                           
  %gep72 = add i32 %gep_int70,... (idx: 2)        -110                          -110                          -110                          -110                          -20                           -20                           -20                           -20                           
  %gep74 = add i32 %gep72, %ge... (idx: 3)        -110                          -110                          -110                          -110                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep67 = add i32 %gep_int65,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep69 = add i32 %gep67, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep72 = add i32 %gep_int70,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep74 = add i32 %gep72, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep67 = add i32 %gep_int65,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 13)
  %gep69 = add i32 %gep67, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 13)
  %gep72 = add i32 %gep_int70,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 13)
  %gep74 = add i32 %gep72, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 13)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %32 = load i32* %31, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %32 = load i32* %31, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %37 = load i32* %36, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %37 = load i32* %36, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load i32* %31, align 4... (idx: 0)        -115                          -35                           
  %37 = load i32* %36, align 4... (idx: 1)        -115                          -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %32 = load i32* %31, align 4... (idx: 0)        1                             0                             
  %37 = load i32* %36, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %32 = load i32* %31, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %37 = load i32* %36, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep77 = add i32 %gep_int75,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep79 = add i32 %gep77, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep82 = add i32 %gep_int80,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep84 = add i32 %gep82, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep77 = add i32 %gep_int75,... (idx: 0)        -130                          -130                          -130                          -130                          -20                           -20                           -20                           -20                           
  %gep79 = add i32 %gep77, %ge... (idx: 1)        -130                          -130                          -130                          -130                          -20                           -20                           -20                           -20                           
  %gep82 = add i32 %gep_int80,... (idx: 2)        -130                          -130                          -130                          -130                          -20                           -20                           -20                           -20                           
  %gep84 = add i32 %gep82, %ge... (idx: 3)        -130                          -130                          -130                          -130                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep77 = add i32 %gep_int75,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep79 = add i32 %gep77, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep82 = add i32 %gep_int80,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep84 = add i32 %gep82, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep77 = add i32 %gep_int75,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 15)
  %gep79 = add i32 %gep77, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 15)
  %gep82 = add i32 %gep_int80,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 15)
  %gep84 = add i32 %gep82, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 15)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep87 = add i32 %gep_int85,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep89 = add i32 %gep87, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep92 = add i32 %gep_int90,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep94 = add i32 %gep92, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep87 = add i32 %gep_int85,... (idx: 0)        -150                          -150                          -150                          -150                          -20                           -20                           -20                           -20                           
  %gep89 = add i32 %gep87, %ge... (idx: 1)        -150                          -150                          -150                          -150                          -20                           -20                           -20                           -20                           
  %gep92 = add i32 %gep_int90,... (idx: 2)        -150                          -150                          -150                          -150                          -20                           -20                           -20                           -20                           
  %gep94 = add i32 %gep92, %ge... (idx: 3)        -150                          -150                          -150                          -150                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep87 = add i32 %gep_int85,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep89 = add i32 %gep87, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep92 = add i32 %gep_int90,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep94 = add i32 %gep92, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep87 = add i32 %gep_int85,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 17)
  %gep89 = add i32 %gep87, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 17)
  %gep92 = add i32 %gep_int90,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 17)
  %gep94 = add i32 %gep92, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %37, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %37, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %37, i32* geteleme... (idx: 0)        -125                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %37, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %37, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep97 = add i32 %gep_int95,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep99 = add i32 %gep97, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep102 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep104 = add i32 %gep102, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep97 = add i32 %gep_int95,... (idx: 0)        -170                          -170                          -170                          -170                          -20                           -20                           -20                           -20                           
  %gep99 = add i32 %gep97, %ge... (idx: 1)        -170                          -170                          -170                          -170                          -20                           -20                           -20                           -20                           
  %gep102 = add i32 %gep_int10... (idx: 2)        -170                          -170                          -170                          -170                          -20                           -20                           -20                           -20                           
  %gep104 = add i32 %gep102, %... (idx: 3)        -170                          -170                          -170                          -170                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep97 = add i32 %gep_int95,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep99 = add i32 %gep97, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep102 = add i32 %gep_int10... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep104 = add i32 %gep102, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep97 = add i32 %gep_int95,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 19)
  %gep99 = add i32 %gep97, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 19)
  %gep102 = add i32 %gep_int10... (idx: 2) -> main_signed_add_32_2 (mux inputs: 19)
  %gep104 = add i32 %gep102, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 19)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %42 = load i32* %41, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %42 = load i32* %41, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %42 = load i32* %41, align 4... (idx: 0)        -135                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %42 = load i32* %41, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %42 = load i32* %41, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %42, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %42, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %42, i32* geteleme... (idx: 0)        -145                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %42, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %42, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %47 = load i32* %46, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %47 = load i32* %46, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %47 = load i32* %46, align 4... (idx: 0)        -155                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %47 = load i32* %46, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = load i32* %46, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %47, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %47, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %32, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %32, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %47, i32* geteleme... (idx: 0)        -165                          -45                           
  store i32 %32, i32* geteleme... (idx: 1)        -165                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %47, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %32, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %47, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
  store i32 %32, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* %51, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %52 = load i32* %51, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %57 = load i32* %56, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %57 = load i32* %56, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %52 = load i32* %51, align 4... (idx: 0)        -175                          -55                           
  %57 = load i32* %56, align 4... (idx: 1)        -175                          -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %52 = load i32* %51, align 4... (idx: 0)        1                             0                             
  %57 = load i32* %56, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* %51, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
  %57 = load i32* %56, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %57, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %57, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %52, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %52, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %57, i32* geteleme... (idx: 0)        -185                          -65                           
  store i32 %52, i32* geteleme... (idx: 1)        -185                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %57, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %52, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %57, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  store i32 %52, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %62 = load i32* %61, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %67 = load i32* %66, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %67 = load i32* %66, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %62 = load i32* %61, align 4... (idx: 0)        -195                          -75                           
  %67 = load i32* %66, align 4... (idx: 1)        -195                          -75                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %62 = load i32* %61, align 4... (idx: 0)        1                             0                             
  %67 = load i32* %66, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %62 = load i32* %61, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
  %67 = load i32* %66, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %67, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %67, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %62, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %62, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %67, i32* geteleme... (idx: 0)        -205                          -85                           
  store i32 %62, i32* geteleme... (idx: 1)        -205                          -85                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %67, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %62, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %67, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
  store i32 %62, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %72 = load i32* %71, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load i32* %71, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %77 = load i32* %76, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %77 = load i32* %76, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load i32* %71, align 4... (idx: 0)        -215                          -95                           
  %77 = load i32* %76, align 4... (idx: 1)        -215                          -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load i32* %71, align 4... (idx: 0)        1                             0                             
  %77 = load i32* %76, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load i32* %71, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  %77 = load i32* %76, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %77, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %77, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %77, i32* geteleme... (idx: 0)        -225                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %77, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %77, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %82 = load i32* %81, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load i32* %81, align 4... (idx: 0)        -235                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load i32* %81, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i32* %81, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 25)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %82, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %82, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %82, i32* geteleme... (idx: 0)        -245                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %82, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %82, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 26)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %87 = load i32* %86, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load i32* %86, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %87 = load i32* %86, align 4... (idx: 0)        -255                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %87 = load i32* %86, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %87 = load i32* %86, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 27)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %87, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %87, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %72, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %72, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %87, i32* geteleme... (idx: 0)        -265                          -105                          
  store i32 %72, i32* geteleme... (idx: 1)        -265                          -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %87, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %72, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %87, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 28)
  store i32 %72, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* %91, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %92 = load i32* %91, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* %91, align 4... (idx: 0)        -275                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* %91, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* %91, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %92, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %92, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %92, i32* geteleme... (idx: 0)        -285                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %92, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %92, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 30)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %97 = load i32* %96, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %97 = load i32* %96, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %97 = load i32* %96, align 4... (idx: 0)        -295                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %97 = load i32* %96, align 4... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %97 = load i32* %96, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 31)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %97, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %97, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %97, i32* geteleme... (idx: 0)        -305                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %97, i32* geteleme... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %97, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 32)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %102 = load i32* %101, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %102 = load i32* %101, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* %101, align... (idx: 0)        -315                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* %101, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = load i32* %101, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 33)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %102, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %102, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %102, i32* getelem... (idx: 0)        -325                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %102, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %102, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 34)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %107 = load i32* %106, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %107 = load i32* %106, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %107 = load i32* %106, align... (idx: 0)        -335                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %107 = load i32* %106, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %107 = load i32* %106, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 35)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %107, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %107, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %107, i32* getelem... (idx: 0)        -345                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %107, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %107, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 36)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %109 = add nsw i32 %i.08.i, ... (idx: 0)        -195                          -195                          -195                          -195                          -25                           -25                           -25                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %109 = add nsw i32 %i.08.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %109 = add nsw i32 %i.08.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %110 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %110 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %115 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %115 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %110 = load i32* getelementp... (idx: 0)        -350                          -110                          
  %115 = load i32* getelementp... (idx: 1)        -350                          -110                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %110 = load i32* getelementp... (idx: 0)        1                             0                             
  %115 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %110 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 36)
  %115 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %114 = load i32* %113, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %119 = load i32* %118, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %119 = load i32* %118, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load i32* %113, align... (idx: 0)        -355                          -115                          
  %119 = load i32* %118, align... (idx: 1)        -355                          -115                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %114 = load i32* %113, align... (idx: 0)        1                             0                             
  %119 = load i32* %118, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %114 = load i32* %113, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 37)
  %119 = load i32* %118, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep107 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep109 = add i32 %gep107, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep112 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep114 = add i32 %gep112, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep107 = add i32 %gep_int10... (idx: 0)        -200                          -190                          -190                          -190                          -20                           -20                           -20                           -20                           
  %gep109 = add i32 %gep107, %... (idx: 1)        -200                          -190                          -190                          -190                          -20                           -20                           -20                           -20                           
  %gep112 = add i32 %gep_int11... (idx: 2)        -200                          -190                          -190                          -190                          -20                           -20                           -20                           -20                           
  %gep114 = add i32 %gep112, %... (idx: 3)        -200                          -190                          -190                          -190                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep107 = add i32 %gep_int10... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep109 = add i32 %gep107, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep112 = add i32 %gep_int11... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep114 = add i32 %gep112, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep107 = add i32 %gep_int10... (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
  %gep109 = add i32 %gep107, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 21)
  %gep112 = add i32 %gep_int11... (idx: 2) -> main_signed_add_32_2 (mux inputs: 21)
  %gep114 = add i32 %gep112, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 21)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %120 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %120 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i32* getelementp... (idx: 0)        -360                          -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %120 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %120 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 37)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %119, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %119, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %119, i32* getelem... (idx: 0)        -365                          -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %119, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %119, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 38)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %125 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %125 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %125 = load i32* getelementp... (idx: 0)        -370                          -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %125 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %125 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 38)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %124 = load i32* %123, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %124 = load i32* %123, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %124 = load i32* %123, align... (idx: 0)        -375                          -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %124 = load i32* %123, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %124 = load i32* %123, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 39)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep117 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep119 = add i32 %gep117, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep117 = add i32 %gep_int11... (idx: 0)        -220                          -210                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep119 = add i32 %gep117, %... (idx: 1)        -220                          -210                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep117 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep119 = add i32 %gep117, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep117 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 24)
  %gep119 = add i32 %gep117, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 23)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %124, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %124, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %124, i32* getelem... (idx: 0)        -385                          -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %124, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %124, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 40)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep122 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep124 = add i32 %gep122, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep122 = add i32 %gep_int12... (idx: 0)        -240                          -230                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep124 = add i32 %gep122, %... (idx: 1)        -240                          -230                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep122 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep124 = add i32 %gep122, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep122 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 26)
  %gep124 = add i32 %gep122, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 25)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %129 = load i32* %128, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %129 = load i32* %128, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %130 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %130 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %129 = load i32* %128, align... (idx: 0)        -395                          -125                          
  %130 = load i32* getelementp... (idx: 1)        -390                          -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %129 = load i32* %128, align... (idx: 0)        1                             0                             
  %130 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %129 = load i32* %128, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 41)
  %130 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %135 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %135 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load i32* getelementp... (idx: 0)        -400                          -120                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %135 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %135 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 41)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %129, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %129, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %114, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %114, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %129, i32* getelem... (idx: 0)        -405                          -125                          
  store i32 %114, i32* getelem... (idx: 1)        -405                          -125                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %129, i32* getelem... (idx: 0)        1                             0                             
  store i32 %114, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %129, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  store i32 %114, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load i32* %133, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %134 = load i32* %133, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* %133, align... (idx: 0)        -415                          -135                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* %133, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = load i32* %133, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 43)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep127 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep129 = add i32 %gep127, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep127 = add i32 %gep_int12... (idx: 0)        -260                          -250                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep129 = add i32 %gep127, %... (idx: 1)        -260                          -250                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep127 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep129 = add i32 %gep127, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep127 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 28)
  %gep129 = add i32 %gep127, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 27)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %139 = load i32* %138, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %139 = load i32* %138, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %140 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %140 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %139 = load i32* %138, align... (idx: 0)        -425                          -135                          
  %140 = load i32* getelementp... (idx: 1)        -420                          -130                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %139 = load i32* %138, align... (idx: 0)        1                             0                             
  %140 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %139 = load i32* %138, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 44)
  %140 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep132 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep134 = add i32 %gep132, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep132 = add i32 %gep_int13... (idx: 0)        -280                          -270                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep134 = add i32 %gep132, %... (idx: 1)        -280                          -270                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep132 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep134 = add i32 %gep132, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep132 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 30)
  %gep134 = add i32 %gep132, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 29)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %145 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %145 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load i32* getelementp... (idx: 0)        -430                          -130                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %145 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %145 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 44)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %139, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %139, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %134, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %134, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %139, i32* getelem... (idx: 0)        -435                          -135                          
  store i32 %134, i32* getelem... (idx: 1)        -435                          -135                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %139, i32* getelem... (idx: 0)        1                             0                             
  store i32 %134, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %139, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 45)
  store i32 %134, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i32* %143, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %144 = load i32* %143, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* %143, align... (idx: 0)        -445                          -145                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* %143, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i32* %143, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 46)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep137 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep139 = add i32 %gep137, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep137 = add i32 %gep_int13... (idx: 0)        -300                          -290                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep139 = add i32 %gep137, %... (idx: 1)        -300                          -290                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep137 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep139 = add i32 %gep137, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep137 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 32)
  %gep139 = add i32 %gep137, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 31)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %149 = load i32* %148, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %149 = load i32* %148, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %150 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %150 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %149 = load i32* %148, align... (idx: 0)        -455                          -145                          
  %150 = load i32* getelementp... (idx: 1)        -450                          -140                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %149 = load i32* %148, align... (idx: 0)        1                             0                             
  %150 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %149 = load i32* %148, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 47)
  %150 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep142 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep144 = add i32 %gep142, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep142 = add i32 %gep_int14... (idx: 0)        -320                          -310                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep144 = add i32 %gep142, %... (idx: 1)        -320                          -310                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep142 = add i32 %gep_int14... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep144 = add i32 %gep142, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep142 = add i32 %gep_int14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 34)
  %gep144 = add i32 %gep142, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 33)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %155 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %155 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %155 = load i32* getelementp... (idx: 0)        -460                          -140                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %155 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %155 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 47)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %149, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %149, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %144, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %144, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %149, i32* getelem... (idx: 0)        -465                          -145                          
  store i32 %144, i32* getelem... (idx: 1)        -465                          -145                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %149, i32* getelem... (idx: 0)        1                             0                             
  store i32 %144, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %149, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 48)
  store i32 %144, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %154 = load i32* %153, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %154 = load i32* %153, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %154 = load i32* %153, align... (idx: 0)        -475                          -155                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %154 = load i32* %153, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %154 = load i32* %153, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 49)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep147 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep149 = add i32 %gep147, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep147 = add i32 %gep_int14... (idx: 0)        -340                          -330                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep149 = add i32 %gep147, %... (idx: 1)        -340                          -330                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep147 = add i32 %gep_int14... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep149 = add i32 %gep147, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep147 = add i32 %gep_int14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 36)
  %gep149 = add i32 %gep147, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 35)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load i32* %158, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %159 = load i32* %158, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %160 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %160 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load i32* %158, align... (idx: 0)        -485                          -155                          
  %160 = load i32* getelementp... (idx: 1)        -480                          -150                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load i32* %158, align... (idx: 0)        1                             0                             
  %160 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load i32* %158, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 50)
  %160 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep152 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep154 = add i32 %gep152, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep152 = add i32 %gep_int15... (idx: 0)        -360                          -350                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep154 = add i32 %gep152, %... (idx: 1)        -360                          -350                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep152 = add i32 %gep_int15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep154 = add i32 %gep152, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep152 = add i32 %gep_int15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 38)
  %gep154 = add i32 %gep152, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 37)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %159, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %159, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %159, i32* getelem... (idx: 0)        -495                          -155                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %159, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %159, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 51)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %164 = load i32* %163, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %164 = load i32* %163, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %165 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %165 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* %163, align... (idx: 0)        -505                          -155                          
  %165 = load i32* getelementp... (idx: 1)        -500                          -150                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %164 = load i32* %163, align... (idx: 0)        1                             0                             
  %165 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %164 = load i32* %163, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 52)
  %165 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep157 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep159 = add i32 %gep157, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep157 = add i32 %gep_int15... (idx: 0)        -380                          -370                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep159 = add i32 %gep157, %... (idx: 1)        -380                          -370                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep157 = add i32 %gep_int15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep159 = add i32 %gep157, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep157 = add i32 %gep_int15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 40)
  %gep159 = add i32 %gep157, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 39)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %164, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %164, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %164, i32* getelem... (idx: 0)        -515                          -155                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %164, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %164, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 53)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %169 = load i32* %168, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %169 = load i32* %168, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %170 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %170 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* %168, align... (idx: 0)        -525                          -155                          
  %170 = load i32* getelementp... (idx: 1)        -520                          -150                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* %168, align... (idx: 0)        1                             0                             
  %170 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %169 = load i32* %168, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 54)
  %170 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep162 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep164 = add i32 %gep162, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep162 = add i32 %gep_int16... (idx: 0)        -400                          -390                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep164 = add i32 %gep162, %... (idx: 1)        -400                          -390                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep162 = add i32 %gep_int16... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep164 = add i32 %gep162, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep162 = add i32 %gep_int16... (idx: 0) -> main_signed_add_32_0 (mux inputs: 42)
  %gep164 = add i32 %gep162, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 41)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %169, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %169, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %154, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %154, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %169, i32* getelem... (idx: 0)        -535                          -155                          
  store i32 %154, i32* getelem... (idx: 1)        -535                          -155                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %169, i32* getelem... (idx: 0)        1                             0                             
  store i32 %154, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %169, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 55)
  store i32 %154, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %174 = load i32* %173, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %174 = load i32* %173, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %175 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %175 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %174 = load i32* %173, align... (idx: 0)        -545                          -165                          
  %175 = load i32* getelementp... (idx: 1)        -540                          -160                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %174 = load i32* %173, align... (idx: 0)        1                             0                             
  %175 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %174 = load i32* %173, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 56)
  %175 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep167 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep169 = add i32 %gep167, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep167 = add i32 %gep_int16... (idx: 0)        -420                          -410                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep169 = add i32 %gep167, %... (idx: 1)        -420                          -410                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep167 = add i32 %gep_int16... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep169 = add i32 %gep167, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep167 = add i32 %gep_int16... (idx: 0) -> main_signed_add_32_0 (mux inputs: 44)
  %gep169 = add i32 %gep167, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 43)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %174, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %174, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %174, i32* getelem... (idx: 0)        -555                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %174, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %174, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 57)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %179 = load i32* %178, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %179 = load i32* %178, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %180 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %180 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %179 = load i32* %178, align... (idx: 0)        -565                          -165                          
  %180 = load i32* getelementp... (idx: 1)        -560                          -160                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %179 = load i32* %178, align... (idx: 0)        1                             0                             
  %180 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = load i32* %178, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 58)
  %180 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep172 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep174 = add i32 %gep172, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep172 = add i32 %gep_int17... (idx: 0)        -440                          -430                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep174 = add i32 %gep172, %... (idx: 1)        -440                          -430                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep172 = add i32 %gep_int17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep174 = add i32 %gep172, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep172 = add i32 %gep_int17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 46)
  %gep174 = add i32 %gep172, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 45)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %179, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %179, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %179, i32* getelem... (idx: 0)        -575                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %179, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %179, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 59)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %184 = load i32* %183, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %184 = load i32* %183, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %185 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %185 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %184 = load i32* %183, align... (idx: 0)        -585                          -165                          
  %185 = load i32* getelementp... (idx: 1)        -580                          -160                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %184 = load i32* %183, align... (idx: 0)        1                             0                             
  %185 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %184 = load i32* %183, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 60)
  %185 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep177 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep179 = add i32 %gep177, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep177 = add i32 %gep_int17... (idx: 0)        -460                          -450                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep179 = add i32 %gep177, %... (idx: 1)        -460                          -450                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep177 = add i32 %gep_int17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep179 = add i32 %gep177, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep177 = add i32 %gep_int17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 48)
  %gep179 = add i32 %gep177, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 47)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %184, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %184, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %184, i32* getelem... (idx: 0)        -595                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %184, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %184, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 61)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %189 = load i32* %188, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %189 = load i32* %188, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load i32* %188, align... (idx: 0)        -605                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %189 = load i32* %188, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %189 = load i32* %188, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 62)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep182 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep184 = add i32 %gep182, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep182 = add i32 %gep_int18... (idx: 0)        -480                          -470                          -210                          -210                          -20                           -20                           -20                           -20                           
  %gep184 = add i32 %gep182, %... (idx: 1)        -480                          -470                          -210                          -210                          -20                           -20                           -20                           -20                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep182 = add i32 %gep_int18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep184 = add i32 %gep182, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep182 = add i32 %gep_int18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 50)
  %gep184 = add i32 %gep182, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 49)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %189, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %189, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %189, i32* getelem... (idx: 0)        -615                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %189, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %189, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 63)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_0
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_1
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_2
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_3
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_4
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_5
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_6
  %190 = add nsw i32 %j.01.i2.... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep192 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep206 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %190 = add nsw i32 %j.01.i2.... (idx: 0)        -495                          -485                          -205                          -205                          -15                           -15                           -15                           -15                           
  %gep192 = add i32 %gep_int19... (idx: 1)        -495                          -485                          -205                          -205                          -15                           -15                           -15                           -15                           
  %gep199 = add i32 %gep_int19... (idx: 2)        -495                          -485                          -205                          -205                          -15                           -15                           -15                           -15                           
  %gep206 = add i32 %gep_int20... (idx: 3)        -495                          -485                          -205                          -205                          -15                           -15                           -15                           -15                           
  %215 = add nsw i32 %j.01.i2.... (idx: 4)        -505                          -495                          -215                          -215                          -25                           -25                           -25                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %190 = add nsw i32 %j.01.i2.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep192 = add i32 %gep_int19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep199 = add i32 %gep_int19... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep206 = add i32 %gep_int20... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %215 = add nsw i32 %j.01.i2.... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %190 = add nsw i32 %j.01.i2.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 51)
  %gep192 = add i32 %gep_int19... (idx: 1) -> main_signed_add_32_1 (mux inputs: 50)
  %gep199 = add i32 %gep_int19... (idx: 2) -> main_signed_add_32_2 (mux inputs: 22)
  %gep206 = add i32 %gep_int20... (idx: 3) -> main_signed_add_32_3 (mux inputs: 22)
  %215 = add nsw i32 %j.01.i2.... (idx: 4) -> main_signed_add_32_7 (mux inputs: 3)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %195 = load i32* %194, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %195 = load i32* %194, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %195 = load i32* %194, align... (idx: 0)        -625                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %195 = load i32* %194, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %195 = load i32* %194, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 64)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep190 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep197 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep211 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep190 = add i32 %gep_int18... (idx: 0)        -510                          -500                          -220                          -220                          -20                           -20                           -20                           -30                           
  %gep197 = add i32 %gep_int19... (idx: 1)        -510                          -500                          -220                          -220                          -20                           -20                           -20                           -30                           
  %gep204 = add i32 %gep_int20... (idx: 2)        -510                          -500                          -220                          -220                          -20                           -20                           -20                           -30                           
  %gep211 = add i32 %gep_int20... (idx: 3)        -510                          -500                          -220                          -220                          -20                           -20                           -20                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep190 = add i32 %gep_int18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep197 = add i32 %gep_int19... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep204 = add i32 %gep_int20... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep211 = add i32 %gep_int20... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep190 = add i32 %gep_int18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 53)
  %gep197 = add i32 %gep_int19... (idx: 1) -> main_signed_add_32_1 (mux inputs: 52)
  %gep204 = add i32 %gep_int20... (idx: 2) -> main_signed_add_32_2 (mux inputs: 24)
  %gep211 = add i32 %gep_int20... (idx: 3) -> main_signed_add_32_3 (mux inputs: 24)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %192 = load i32* %191, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %192 = load i32* %191, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %192 = load i32* %191, align... (idx: 0)        -635                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %192 = load i32* %191, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %192 = load i32* %191, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 65)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep187 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep194 = add i32 %gep192, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep208 = add i32 %gep206, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep187 = add i32 %gep_int18... (idx: 0)        -530                          -520                          -240                          -240                          -20                           -20                           -20                           -30                           
  %gep194 = add i32 %gep192, %... (idx: 1)        -530                          -520                          -240                          -240                          -20                           -20                           -20                           -30                           
  %gep201 = add i32 %gep199, %... (idx: 2)        -530                          -520                          -240                          -240                          -20                           -20                           -20                           -30                           
  %gep208 = add i32 %gep206, %... (idx: 3)        -530                          -520                          -240                          -240                          -20                           -20                           -20                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep187 = add i32 %gep_int18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep194 = add i32 %gep192, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep201 = add i32 %gep199, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep208 = add i32 %gep206, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep187 = add i32 %gep_int18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 55)
  %gep194 = add i32 %gep192, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 54)
  %gep201 = add i32 %gep199, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 26)
  %gep208 = add i32 %gep206, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 26)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %196, i32* %194, a... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %196, i32* %194, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %196, i32* %194, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %196, i32* %194, a... (idx: 0)        -645                          -170                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %196, i32* %194, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %196, i32* %194, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 66)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %198 = load i32* %197, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %198 = load i32* %197, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %201 = load i32* %200, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %201 = load i32* %200, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %198 = load i32* %197, align... (idx: 0)        -655                          -165                          
  %201 = load i32* %200, align... (idx: 1)        -655                          -165                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %198 = load i32* %197, align... (idx: 0)        1                             0                             
  %201 = load i32* %200, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %198 = load i32* %197, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 67)
  %201 = load i32* %200, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %202, i32* %200, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %202, i32* %200, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %202, i32* %200, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %202, i32* %200, a... (idx: 0)        -670                          -175                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %202, i32* %200, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %202, i32* %200, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 69)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %204 = load i32* %203, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %204 = load i32* %203, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %207 = load i32* %206, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %207 = load i32* %206, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %204 = load i32* %203, align... (idx: 0)        -685                          -175                          
  %207 = load i32* %206, align... (idx: 1)        -685                          -175                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %204 = load i32* %203, align... (idx: 0)        1                             0                             
  %207 = load i32* %206, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %204 = load i32* %203, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 70)
  %207 = load i32* %206, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %208, i32* %206, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %208, i32* %206, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %208, i32* %206, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %208, i32* %206, a... (idx: 0)        -700                          -185                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %208, i32* %206, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %208, i32* %206, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 72)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %210 = load i32* %209, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %210 = load i32* %209, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %210 = load i32* %209, align... (idx: 0)        -715                          -185                          
  %213 = load i32* %212, align... (idx: 1)        -715                          -185                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %210 = load i32* %209, align... (idx: 0)        1                             0                             
  %213 = load i32* %212, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %210 = load i32* %209, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 73)
  %213 = load i32* %212, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %214, i32* %212, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %214, i32* %212, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %214, i32* %212, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %214, i32* %212, a... (idx: 0)        -730                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %214, i32* %212, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %214, i32* %212, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 75)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %218 = load i32* %217, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %218 = load i32* %217, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %218 = load i32* %217, align... (idx: 0)        -745                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %218 = load i32* %217, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %218 = load i32* %217, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 76)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep214 = add i32 %gep_int21... (idx: 0)        -550                          -540                          -260                          -260                          -20                           -20                           -20                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep214 = add i32 %gep_int21... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep214 = add i32 %gep_int21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 57)
State: LEGUP_F_main_BB__220
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre.i = load i32* %217, al... can share an input with another operation already assigned to main_mem_dual_port_0
  %.pre.i = load i32* %217, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  %.pre.i = load i32* %217, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre.i = load i32* %217, al... (idx: 0)        -750                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre.i = load i32* %217, al... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i = load i32* %217, al... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 76)
State: LEGUP_F_main_BB__222
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %225 = add nsw i32 %i.17.i, ... can share an output register with another operation already assigned to main_signed_add_32_0
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %225 = add nsw i32 %i.17.i, ... (idx: 0)        -565                          -545                          -265                          -265                          -25                           -25                           -25                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %225 = add nsw i32 %i.17.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %225 = add nsw i32 %i.17.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 58)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %234 = add nsw i32 %i.26.i, ... (idx: 0)        -585                          -545                          -265                          -265                          -25                           -25                           -25                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %234 = add nsw i32 %i.26.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %234 = add nsw i32 %i.26.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 59)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: encryptout_enc_statemt_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_encryptout_enc_statemt_local_mem_dual_port_0
  %230 = load i32* %229, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_encryptout_enc_statemt_local_mem_dual_port_0
  %230 = load i32* %229, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %230 = load i32* %229, align... (idx: 0) -> main_encryptout_enc_statemt_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %228 = load i32* %227, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %228 = load i32* %227, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %228 = load i32* %227, align... (idx: 0)        -755                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %228 = load i32* %227, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %228 = load i32* %227, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 77)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep220 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep217 = add i32 %gep_int21... (idx: 0)        -590                          -540                          -260                          -260                          -20                           -20                           -20                           -30                           
  %gep220 = add i32 %gep_int21... (idx: 1)        -590                          -540                          -260                          -260                          -20                           -20                           -20                           -30                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep217 = add i32 %gep_int21... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep220 = add i32 %gep_int21... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep217 = add i32 %gep_int21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 61)
  %gep220 = add i32 %gep_int21... (idx: 1) -> main_signed_add_32_1 (mux inputs: 56)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %233 = add nsw i32 %232, %22... (idx: 0)        -620                          -570                          -270                          -270                          -30                           -30                           -30                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %233 = add nsw i32 %232, %22... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %233 = add nsw i32 %232, %22... (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
State: LEGUP_F_main_BB__236
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_0
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_1
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_2
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_3
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_4
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_5
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_6
  %237 = add nsw i32 %j.01.i.i... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep228 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep235 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep242 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %237 = add nsw i32 %j.01.i.i... (idx: 0)        -625                          -555                          -255                          -255                          -15                           -15                           -15                           -25                           
  %gep228 = add i32 %gep_int22... (idx: 1)        -625                          -555                          -255                          -255                          -15                           -15                           -15                           -25                           
  %gep235 = add i32 %gep_int23... (idx: 2)        -625                          -555                          -255                          -255                          -15                           -15                           -15                           -25                           
  %gep242 = add i32 %gep_int24... (idx: 3)        -625                          -555                          -255                          -255                          -15                           -15                           -15                           -25                           
  %262 = add nsw i32 %j.01.i.i... (idx: 4)        -635                          -565                          -265                          -265                          -25                           -25                           -25                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %237 = add nsw i32 %j.01.i.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep228 = add i32 %gep_int22... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep235 = add i32 %gep_int23... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep242 = add i32 %gep_int24... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %262 = add nsw i32 %j.01.i.i... (idx: 4)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %237 = add nsw i32 %j.01.i.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 64)
  %gep228 = add i32 %gep_int22... (idx: 1) -> main_signed_add_32_1 (mux inputs: 57)
  %gep235 = add i32 %gep_int23... (idx: 2) -> main_signed_add_32_2 (mux inputs: 27)
  %gep242 = add i32 %gep_int24... (idx: 3) -> main_signed_add_32_3 (mux inputs: 27)
  %262 = add nsw i32 %j.01.i.i... (idx: 4) -> main_signed_add_32_7 (mux inputs: 4)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %242 = load i32* %241, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %242 = load i32* %241, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %242 = load i32* %241, align... (idx: 0)        -765                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %242 = load i32* %241, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %242 = load i32* %241, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 78)
State: LEGUP_F_main_BB__236
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep240 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep247 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep226 = add i32 %gep_int22... (idx: 0)        -640                          -570                          -270                          -270                          -20                           -20                           -20                           -40                           
  %gep233 = add i32 %gep_int23... (idx: 1)        -640                          -570                          -270                          -270                          -20                           -20                           -20                           -40                           
  %gep240 = add i32 %gep_int23... (idx: 2)        -640                          -570                          -270                          -270                          -20                           -20                           -20                           -40                           
  %gep247 = add i32 %gep_int24... (idx: 3)        -640                          -570                          -270                          -270                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep226 = add i32 %gep_int22... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep233 = add i32 %gep_int23... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep240 = add i32 %gep_int23... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep247 = add i32 %gep_int24... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep226 = add i32 %gep_int22... (idx: 0) -> main_signed_add_32_0 (mux inputs: 66)
  %gep233 = add i32 %gep_int23... (idx: 1) -> main_signed_add_32_1 (mux inputs: 59)
  %gep240 = add i32 %gep_int23... (idx: 2) -> main_signed_add_32_2 (mux inputs: 29)
  %gep247 = add i32 %gep_int24... (idx: 3) -> main_signed_add_32_3 (mux inputs: 29)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %239 = load i32* %238, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %239 = load i32* %238, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %239 = load i32* %238, align... (idx: 0)        -775                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %239 = load i32* %238, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %239 = load i32* %238, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 79)
State: LEGUP_F_main_BB__236
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep223 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep230 = add i32 %gep228, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep237 = add i32 %gep235, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep244 = add i32 %gep242, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep223 = add i32 %gep_int22... (idx: 0)        -660                          -590                          -290                          -290                          -20                           -20                           -20                           -40                           
  %gep230 = add i32 %gep228, %... (idx: 1)        -660                          -590                          -290                          -290                          -20                           -20                           -20                           -40                           
  %gep237 = add i32 %gep235, %... (idx: 2)        -660                          -590                          -290                          -290                          -20                           -20                           -20                           -40                           
  %gep244 = add i32 %gep242, %... (idx: 3)        -660                          -590                          -290                          -290                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep223 = add i32 %gep_int22... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep230 = add i32 %gep228, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep237 = add i32 %gep235, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep244 = add i32 %gep242, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep223 = add i32 %gep_int22... (idx: 0) -> main_signed_add_32_0 (mux inputs: 68)
  %gep230 = add i32 %gep228, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 61)
  %gep237 = add i32 %gep235, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 31)
  %gep244 = add i32 %gep242, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 31)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %243, i32* %241, a... can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %243, i32* %241, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %243, i32* %241, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %243, i32* %241, a... (idx: 0)        -785                          -200                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %243, i32* %241, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %243, i32* %241, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 80)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %245 = load i32* %244, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %245 = load i32* %244, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %248 = load i32* %247, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %248 = load i32* %247, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %245 = load i32* %244, align... (idx: 0)        -795                          -195                          
  %248 = load i32* %247, align... (idx: 1)        -795                          -195                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %245 = load i32* %244, align... (idx: 0)        1                             0                             
  %248 = load i32* %247, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %245 = load i32* %244, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 81)
  %248 = load i32* %247, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %249, i32* %247, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %249, i32* %247, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %249, i32* %247, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %249, i32* %247, a... (idx: 0)        -810                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %249, i32* %247, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %249, i32* %247, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 83)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %251 = load i32* %250, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %251 = load i32* %250, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %254 = load i32* %253, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %254 = load i32* %253, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %251 = load i32* %250, align... (idx: 0)        -825                          -205                          
  %254 = load i32* %253, align... (idx: 1)        -825                          -205                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %251 = load i32* %250, align... (idx: 0)        1                             0                             
  %254 = load i32* %253, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %251 = load i32* %250, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 84)
  %254 = load i32* %253, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %255, i32* %253, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %255, i32* %253, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %255, i32* %253, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %255, i32* %253, a... (idx: 0)        -840                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %255, i32* %253, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %255, i32* %253, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 86)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %257 = load i32* %256, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %257 = load i32* %256, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %260 = load i32* %259, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %260 = load i32* %259, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %257 = load i32* %256, align... (idx: 0)        -855                          -215                          
  %260 = load i32* %259, align... (idx: 1)        -855                          -215                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %257 = load i32* %256, align... (idx: 0)        1                             0                             
  %260 = load i32* %259, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %257 = load i32* %256, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 87)
  %260 = load i32* %259, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB__236
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %261, i32* %259, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %261, i32* %259, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %261, i32* %259, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %261, i32* %259, a... (idx: 0)        -870                          -225                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %261, i32* %259, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %261, i32* %259, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %263 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %263 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %268 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %268 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %263 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %268 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %263 = load i32* getelementp... (idx: 0)        1                             0                             
  %268 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %263 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %268 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %273 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %273 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %278 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %278 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %273 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %278 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %273 = load i32* getelementp... (idx: 0)        1                             0                             
  %278 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %273 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %278 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %283 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %283 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %288 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %288 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %283 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %288 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %283 = load i32* getelementp... (idx: 0)        1                             0                             
  %288 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %283 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %288 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %267 = load i32* %266, align... (idx: 0)        -5                            -5                            
  %272 = load i32* %271, align... (idx: 1)        -5                            -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %267 = load i32* %266, align... (idx: 0)        1                             0                             
  %272 = load i32* %271, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %267 = load i32* %266, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 1)
  %272 = load i32* %271, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %293 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %293 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %298 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %298 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %293 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %298 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %293 = load i32* getelementp... (idx: 0)        1                             0                             
  %298 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %293 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %298 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep250 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep252 = add i32 %gep250, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep255 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep257 = add i32 %gep255, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep250 = add i32 %gep_int24... (idx: 0)        -680                          -610                          -310                          -310                          -20                           -20                           -20                           -40                           
  %gep252 = add i32 %gep250, %... (idx: 1)        -680                          -610                          -310                          -310                          -20                           -20                           -20                           -40                           
  %gep255 = add i32 %gep_int25... (idx: 2)        -680                          -610                          -310                          -310                          -20                           -20                           -20                           -40                           
  %gep257 = add i32 %gep255, %... (idx: 3)        -680                          -610                          -310                          -310                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep250 = add i32 %gep_int24... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep252 = add i32 %gep250, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep255 = add i32 %gep_int25... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep257 = add i32 %gep255, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep250 = add i32 %gep_int24... (idx: 0) -> main_signed_add_32_0 (mux inputs: 70)
  %gep252 = add i32 %gep250, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 63)
  %gep255 = add i32 %gep_int25... (idx: 2) -> main_signed_add_32_2 (mux inputs: 33)
  %gep257 = add i32 %gep255, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 33)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %303 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %303 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %308 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %308 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %303 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %308 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %303 = load i32* getelementp... (idx: 0)        1                             0                             
  %308 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %303 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %308 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep267 = add i32 %gep265, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep260 = add i32 %gep_int25... (idx: 0)        -700                          -630                          -330                          -330                          -20                           -20                           -20                           -40                           
  %gep262 = add i32 %gep260, %... (idx: 1)        -700                          -630                          -330                          -330                          -20                           -20                           -20                           -40                           
  %gep265 = add i32 %gep_int26... (idx: 2)        -700                          -630                          -330                          -330                          -20                           -20                           -20                           -40                           
  %gep267 = add i32 %gep265, %... (idx: 3)        -700                          -630                          -330                          -330                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep260 = add i32 %gep_int25... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep262 = add i32 %gep260, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep265 = add i32 %gep_int26... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep267 = add i32 %gep265, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep260 = add i32 %gep_int25... (idx: 0) -> main_signed_add_32_0 (mux inputs: 72)
  %gep262 = add i32 %gep260, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 65)
  %gep265 = add i32 %gep_int26... (idx: 2) -> main_signed_add_32_2 (mux inputs: 35)
  %gep267 = add i32 %gep265, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 35)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %313 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %313 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %318 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %318 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %313 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %318 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %313 = load i32* getelementp... (idx: 0)        1                             0                             
  %318 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %313 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %318 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep270 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep272 = add i32 %gep270, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep275 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep277 = add i32 %gep275, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep270 = add i32 %gep_int26... (idx: 0)        -720                          -650                          -350                          -350                          -20                           -20                           -20                           -40                           
  %gep272 = add i32 %gep270, %... (idx: 1)        -720                          -650                          -350                          -350                          -20                           -20                           -20                           -40                           
  %gep275 = add i32 %gep_int27... (idx: 2)        -720                          -650                          -350                          -350                          -20                           -20                           -20                           -40                           
  %gep277 = add i32 %gep275, %... (idx: 3)        -720                          -650                          -350                          -350                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep270 = add i32 %gep_int26... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep272 = add i32 %gep270, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep275 = add i32 %gep_int27... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep277 = add i32 %gep275, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep270 = add i32 %gep_int26... (idx: 0) -> main_signed_add_32_0 (mux inputs: 74)
  %gep272 = add i32 %gep270, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 67)
  %gep275 = add i32 %gep_int27... (idx: 2) -> main_signed_add_32_2 (mux inputs: 37)
  %gep277 = add i32 %gep275, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 37)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %323 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %323 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %328 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %328 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %323 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %328 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %323 = load i32* getelementp... (idx: 0)        1                             0                             
  %328 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %323 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %328 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep282 = add i32 %gep280, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep285 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep287 = add i32 %gep285, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep280 = add i32 %gep_int27... (idx: 0)        -740                          -670                          -370                          -370                          -20                           -20                           -20                           -40                           
  %gep282 = add i32 %gep280, %... (idx: 1)        -740                          -670                          -370                          -370                          -20                           -20                           -20                           -40                           
  %gep285 = add i32 %gep_int28... (idx: 2)        -740                          -670                          -370                          -370                          -20                           -20                           -20                           -40                           
  %gep287 = add i32 %gep285, %... (idx: 3)        -740                          -670                          -370                          -370                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep280 = add i32 %gep_int27... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep282 = add i32 %gep280, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep285 = add i32 %gep_int28... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep287 = add i32 %gep285, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep280 = add i32 %gep_int27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 76)
  %gep282 = add i32 %gep280, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 69)
  %gep285 = add i32 %gep_int28... (idx: 2) -> main_signed_add_32_2 (mux inputs: 39)
  %gep287 = add i32 %gep285, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 39)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %333 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %333 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %338 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %338 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %333 = load i32* getelementp... (idx: 0)        -880                          -220                          
  %338 = load i32* getelementp... (idx: 1)        -880                          -220                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %333 = load i32* getelementp... (idx: 0)        1                             0                             
  %338 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %333 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 89)
  %338 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep290 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep292 = add i32 %gep290, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep295 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep297 = add i32 %gep295, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep290 = add i32 %gep_int28... (idx: 0)        -760                          -690                          -390                          -390                          -20                           -20                           -20                           -40                           
  %gep292 = add i32 %gep290, %... (idx: 1)        -760                          -690                          -390                          -390                          -20                           -20                           -20                           -40                           
  %gep295 = add i32 %gep_int29... (idx: 2)        -760                          -690                          -390                          -390                          -20                           -20                           -20                           -40                           
  %gep297 = add i32 %gep295, %... (idx: 3)        -760                          -690                          -390                          -390                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep290 = add i32 %gep_int28... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep292 = add i32 %gep290, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep295 = add i32 %gep_int29... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep297 = add i32 %gep295, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep290 = add i32 %gep_int28... (idx: 0) -> main_signed_add_32_0 (mux inputs: 78)
  %gep292 = add i32 %gep290, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 71)
  %gep295 = add i32 %gep_int29... (idx: 2) -> main_signed_add_32_2 (mux inputs: 41)
  %gep297 = add i32 %gep295, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 41)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %272, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %272, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %272, i32* getelem... (idx: 0)        -885                          -225                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %272, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %272, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 90)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep300 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep302 = add i32 %gep300, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep305 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep307 = add i32 %gep305, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep300 = add i32 %gep_int29... (idx: 0)        -780                          -710                          -410                          -410                          -20                           -20                           -20                           -40                           
  %gep302 = add i32 %gep300, %... (idx: 1)        -780                          -710                          -410                          -410                          -20                           -20                           -20                           -40                           
  %gep305 = add i32 %gep_int30... (idx: 2)        -780                          -710                          -410                          -410                          -20                           -20                           -20                           -40                           
  %gep307 = add i32 %gep305, %... (idx: 3)        -780                          -710                          -410                          -410                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep300 = add i32 %gep_int29... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep302 = add i32 %gep300, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep305 = add i32 %gep_int30... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep307 = add i32 %gep305, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep300 = add i32 %gep_int29... (idx: 0) -> main_signed_add_32_0 (mux inputs: 80)
  %gep302 = add i32 %gep300, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 73)
  %gep305 = add i32 %gep_int30... (idx: 2) -> main_signed_add_32_2 (mux inputs: 43)
  %gep307 = add i32 %gep305, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 43)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %277 = load i32* %276, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %277 = load i32* %276, align... (idx: 0)        -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %277 = load i32* %276, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %277 = load i32* %276, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep310 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep312 = add i32 %gep310, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep315 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep317 = add i32 %gep315, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep310 = add i32 %gep_int30... (idx: 0)        -800                          -730                          -430                          -430                          -20                           -20                           -20                           -40                           
  %gep312 = add i32 %gep310, %... (idx: 1)        -800                          -730                          -430                          -430                          -20                           -20                           -20                           -40                           
  %gep315 = add i32 %gep_int31... (idx: 2)        -800                          -730                          -430                          -430                          -20                           -20                           -20                           -40                           
  %gep317 = add i32 %gep315, %... (idx: 3)        -800                          -730                          -430                          -430                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep310 = add i32 %gep_int30... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep312 = add i32 %gep310, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep315 = add i32 %gep_int31... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep317 = add i32 %gep315, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep310 = add i32 %gep_int30... (idx: 0) -> main_signed_add_32_0 (mux inputs: 82)
  %gep312 = add i32 %gep310, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 75)
  %gep315 = add i32 %gep_int31... (idx: 2) -> main_signed_add_32_2 (mux inputs: 45)
  %gep317 = add i32 %gep315, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 45)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %277, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %277, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %277, i32* getelem... (idx: 0)        -895                          -225                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %277, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %277, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 91)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep320 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep322 = add i32 %gep320, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep325 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep327 = add i32 %gep325, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep320 = add i32 %gep_int31... (idx: 0)        -820                          -750                          -450                          -450                          -20                           -20                           -20                           -40                           
  %gep322 = add i32 %gep320, %... (idx: 1)        -820                          -750                          -450                          -450                          -20                           -20                           -20                           -40                           
  %gep325 = add i32 %gep_int32... (idx: 2)        -820                          -750                          -450                          -450                          -20                           -20                           -20                           -40                           
  %gep327 = add i32 %gep325, %... (idx: 3)        -820                          -750                          -450                          -450                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep320 = add i32 %gep_int31... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep322 = add i32 %gep320, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep325 = add i32 %gep_int32... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep327 = add i32 %gep325, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep320 = add i32 %gep_int31... (idx: 0) -> main_signed_add_32_0 (mux inputs: 84)
  %gep322 = add i32 %gep320, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 77)
  %gep325 = add i32 %gep_int32... (idx: 2) -> main_signed_add_32_2 (mux inputs: 47)
  %gep327 = add i32 %gep325, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 47)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %282 = load i32* %281, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %282 = load i32* %281, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %282 = load i32* %281, align... (idx: 0)        -15                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %282 = load i32* %281, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %282 = load i32* %281, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %282, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %282, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %267, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %267, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %282, i32* getelem... (idx: 0)        -905                          -225                          
  store i32 %267, i32* getelem... (idx: 1)        -905                          -225                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %282, i32* getelem... (idx: 0)        1                             0                             
  store i32 %267, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %282, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 92)
  store i32 %267, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %287 = load i32* %286, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %287 = load i32* %286, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %292 = load i32* %291, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %292 = load i32* %291, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %287 = load i32* %286, align... (idx: 0)        -25                           -5                            
  %292 = load i32* %291, align... (idx: 1)        -25                           -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %287 = load i32* %286, align... (idx: 0)        1                             0                             
  %292 = load i32* %291, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %287 = load i32* %286, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 4)
  %292 = load i32* %291, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %292, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %292, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %287, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %287, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %292, i32* getelem... (idx: 0)        -915                          -235                          
  store i32 %287, i32* getelem... (idx: 1)        -915                          -235                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %292, i32* getelem... (idx: 0)        1                             0                             
  store i32 %287, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %292, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 93)
  store i32 %287, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %297 = load i32* %296, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %297 = load i32* %296, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %302 = load i32* %301, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %302 = load i32* %301, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %297 = load i32* %296, align... (idx: 0)        -35                           -15                           
  %302 = load i32* %301, align... (idx: 1)        -35                           -15                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %297 = load i32* %296, align... (idx: 0)        1                             0                             
  %302 = load i32* %301, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %297 = load i32* %296, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 5)
  %302 = load i32* %301, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %302, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %302, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %297, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %297, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %302, i32* getelem... (idx: 0)        -925                          -245                          
  store i32 %297, i32* getelem... (idx: 1)        -925                          -245                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %302, i32* getelem... (idx: 0)        1                             0                             
  store i32 %297, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %302, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 94)
  store i32 %297, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %307 = load i32* %306, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %307 = load i32* %306, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %312 = load i32* %311, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %312 = load i32* %311, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %307 = load i32* %306, align... (idx: 0)        -45                           -25                           
  %312 = load i32* %311, align... (idx: 1)        -45                           -25                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %307 = load i32* %306, align... (idx: 0)        1                             0                             
  %312 = load i32* %311, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %307 = load i32* %306, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 6)
  %312 = load i32* %311, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %312, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %312, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %312, i32* getelem... (idx: 0)        -935                          -255                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %312, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %312, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 95)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %317 = load i32* %316, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %317 = load i32* %316, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %317 = load i32* %316, align... (idx: 0)        -55                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %317 = load i32* %316, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %317 = load i32* %316, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %317, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %317, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %317, i32* getelem... (idx: 0)        -945                          -255                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %317, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %317, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 96)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %322 = load i32* %321, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %322 = load i32* %321, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %322 = load i32* %321, align... (idx: 0)        -65                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %322 = load i32* %321, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %322 = load i32* %321, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %322, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %322, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %307, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %307, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %322, i32* getelem... (idx: 0)        -955                          -255                          
  store i32 %307, i32* getelem... (idx: 1)        -955                          -255                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %322, i32* getelem... (idx: 0)        1                             0                             
  store i32 %307, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %322, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 97)
  store i32 %307, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %327 = load i32* %326, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %327 = load i32* %326, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %327 = load i32* %326, align... (idx: 0)        -75                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %327 = load i32* %326, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %327 = load i32* %326, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %327, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %327, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %327, i32* getelem... (idx: 0)        -965                          -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %327, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %327, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %332 = load i32* %331, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %332 = load i32* %331, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %332 = load i32* %331, align... (idx: 0)        -85                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %332 = load i32* %331, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %332 = load i32* %331, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %332, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %332, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %332, i32* getelem... (idx: 0)        -975                          -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %332, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %332, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 99)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %337 = load i32* %336, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %337 = load i32* %336, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %337 = load i32* %336, align... (idx: 0)        -95                           -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %337 = load i32* %336, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = load i32* %336, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %337, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %337, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %337, i32* getelem... (idx: 0)        -985                          -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %337, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %337, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 100)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %342 = load i32* %341, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %342 = load i32* %341, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %342 = load i32* %341, align... (idx: 0)        -105                          -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %342 = load i32* %341, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %342 = load i32* %341, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_lrph10ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %342, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %342, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %342, i32* getelem... (idx: 0)        -995                          -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %342, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %342, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %i.0.i = add nsw i32 %i.09.i... (idx: 0)        -845                          -775                          -475                          -475                          -25                           -25                           -25                           -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %i.0.i = add nsw i32 %i.09.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %i.0.i = add nsw i32 %i.09.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 85)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %344 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %344 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %349 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %349 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        -1000                         -260                          
  %349 = load i32* getelementp... (idx: 1)        -1000                         -260                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %344 = load i32* getelementp... (idx: 0)        1                             0                             
  %349 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %344 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 101)
  %349 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %354 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %354 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %354 = load i32* getelementp... (idx: 0)        -1000                         -260                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %354 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %354 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %359 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %359 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %359 = load i32* getelementp... (idx: 0)        -1000                         -260                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %359 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %359 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %348 = load i32* %347, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %348 = load i32* %347, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %353 = load i32* %352, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %353 = load i32* %352, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %348 = load i32* %347, align... (idx: 0)        -115                          -35                           
  %353 = load i32* %352, align... (idx: 1)        -115                          -35                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %348 = load i32* %347, align... (idx: 0)        1                             0                             
  %353 = load i32* %352, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %348 = load i32* %347, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 13)
  %353 = load i32* %352, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %364 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %364 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %364 = load i32* getelementp... (idx: 0)        -1000                         -260                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %364 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %364 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep330 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep332 = add i32 %gep330, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep335 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep337 = add i32 %gep335, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep330 = add i32 %gep_int32... (idx: 0)        -850                          -770                          -470                          -470                          -20                           -20                           -20                           -40                           
  %gep332 = add i32 %gep330, %... (idx: 1)        -850                          -770                          -470                          -470                          -20                           -20                           -20                           -40                           
  %gep335 = add i32 %gep_int33... (idx: 2)        -850                          -770                          -470                          -470                          -20                           -20                           -20                           -40                           
  %gep337 = add i32 %gep335, %... (idx: 3)        -850                          -770                          -470                          -470                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep330 = add i32 %gep_int32... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep332 = add i32 %gep330, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep335 = add i32 %gep_int33... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep337 = add i32 %gep335, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep330 = add i32 %gep_int32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 87)
  %gep332 = add i32 %gep330, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 79)
  %gep335 = add i32 %gep_int33... (idx: 2) -> main_signed_add_32_2 (mux inputs: 49)
  %gep337 = add i32 %gep335, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 49)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %353, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %353, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %353, i32* getelem... (idx: 0)        -1005                         -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %353, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %353, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 102)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep340 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep342 = add i32 %gep340, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep340 = add i32 %gep_int33... (idx: 0)        -870                          -790                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep342 = add i32 %gep340, %... (idx: 1)        -870                          -790                          -490                          -490                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep340 = add i32 %gep_int33... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep342 = add i32 %gep340, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep340 = add i32 %gep_int33... (idx: 0) -> main_signed_add_32_0 (mux inputs: 89)
  %gep342 = add i32 %gep340, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 81)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %358 = load i32* %357, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %358 = load i32* %357, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %358 = load i32* %357, align... (idx: 0)        -125                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %358 = load i32* %357, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %358 = load i32* %357, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep345 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep347 = add i32 %gep345, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep345 = add i32 %gep_int34... (idx: 0)        -890                          -810                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep347 = add i32 %gep345, %... (idx: 1)        -890                          -810                          -490                          -490                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep345 = add i32 %gep_int34... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep347 = add i32 %gep345, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep345 = add i32 %gep_int34... (idx: 0) -> main_signed_add_32_0 (mux inputs: 91)
  %gep347 = add i32 %gep345, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 83)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %358, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %358, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %358, i32* getelem... (idx: 0)        -1015                         -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %358, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %358, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 103)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep350 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep352 = add i32 %gep350, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep350 = add i32 %gep_int34... (idx: 0)        -910                          -830                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep352 = add i32 %gep350, %... (idx: 1)        -910                          -830                          -490                          -490                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep350 = add i32 %gep_int34... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep352 = add i32 %gep350, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep350 = add i32 %gep_int34... (idx: 0) -> main_signed_add_32_0 (mux inputs: 93)
  %gep352 = add i32 %gep350, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 85)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %363 = load i32* %362, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %363 = load i32* %362, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %363 = load i32* %362, align... (idx: 0)        -135                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %363 = load i32* %362, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %363 = load i32* %362, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %369 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %369 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %369 = load i32* getelementp... (idx: 0)        -1020                         -260                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %369 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %369 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 103)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %363, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %363, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %348, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %348, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %363, i32* getelem... (idx: 0)        -1025                         -265                          
  store i32 %348, i32* getelem... (idx: 1)        -1025                         -265                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %363, i32* getelem... (idx: 0)        1                             0                             
  store i32 %348, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %363, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 104)
  store i32 %348, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %368 = load i32* %367, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %368 = load i32* %367, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %368 = load i32* %367, align... (idx: 0)        -145                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %368 = load i32* %367, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %368 = load i32* %367, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %374 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %374 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %379 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %379 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %374 = load i32* getelementp... (idx: 0)        -1030                         -270                          
  %379 = load i32* getelementp... (idx: 1)        -1030                         -270                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %374 = load i32* getelementp... (idx: 0)        1                             0                             
  %379 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %374 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 104)
  %379 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %373 = load i32* %372, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %373 = load i32* %372, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %373 = load i32* %372, align... (idx: 0)        -155                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %373 = load i32* %372, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %373 = load i32* %372, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep355 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep357 = add i32 %gep355, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep355 = add i32 %gep_int35... (idx: 0)        -930                          -850                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep357 = add i32 %gep355, %... (idx: 1)        -930                          -850                          -490                          -490                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep355 = add i32 %gep_int35... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep357 = add i32 %gep355, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep355 = add i32 %gep_int35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 95)
  %gep357 = add i32 %gep355, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 87)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %373, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %373, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %368, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %368, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %373, i32* getelem... (idx: 0)        -1035                         -275                          
  store i32 %368, i32* getelem... (idx: 1)        -1035                         -275                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %373, i32* getelem... (idx: 0)        1                             0                             
  store i32 %368, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %373, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 105)
  store i32 %368, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %378 = load i32* %377, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %378 = load i32* %377, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %383 = load i32* %382, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %383 = load i32* %382, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %378 = load i32* %377, align... (idx: 0)        -165                          -45                           
  %383 = load i32* %382, align... (idx: 1)        -165                          -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %378 = load i32* %377, align... (idx: 0)        1                             0                             
  %383 = load i32* %382, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %378 = load i32* %377, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 18)
  %383 = load i32* %382, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %384 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %384 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %389 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %389 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %384 = load i32* getelementp... (idx: 0)        -1040                         -280                          
  %389 = load i32* getelementp... (idx: 1)        -1040                         -280                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %384 = load i32* getelementp... (idx: 0)        1                             0                             
  %389 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %384 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 105)
  %389 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep360 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep362 = add i32 %gep360, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep365 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep367 = add i32 %gep365, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep360 = add i32 %gep_int35... (idx: 0)        -950                          -870                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep362 = add i32 %gep360, %... (idx: 1)        -950                          -870                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep365 = add i32 %gep_int36... (idx: 2)        -950                          -870                          -490                          -490                          -20                           -20                           -20                           -40                           
  %gep367 = add i32 %gep365, %... (idx: 3)        -950                          -870                          -490                          -490                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep360 = add i32 %gep_int35... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep362 = add i32 %gep360, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep365 = add i32 %gep_int36... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep367 = add i32 %gep365, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep360 = add i32 %gep_int35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 97)
  %gep362 = add i32 %gep360, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 89)
  %gep365 = add i32 %gep_int36... (idx: 2) -> main_signed_add_32_2 (mux inputs: 51)
  %gep367 = add i32 %gep365, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 51)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %383, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %383, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %378, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %378, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %383, i32* getelem... (idx: 0)        -1045                         -285                          
  store i32 %378, i32* getelem... (idx: 1)        -1045                         -285                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %383, i32* getelem... (idx: 0)        1                             0                             
  store i32 %378, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %383, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 106)
  store i32 %378, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %394 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %394 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %394 = load i32* getelementp... (idx: 0)        -1050                         -290                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %394 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %394 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 106)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %388 = load i32* %387, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %388 = load i32* %387, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %393 = load i32* %392, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %393 = load i32* %392, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %388 = load i32* %387, align... (idx: 0)        -175                          -55                           
  %393 = load i32* %392, align... (idx: 1)        -175                          -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %388 = load i32* %387, align... (idx: 0)        1                             0                             
  %393 = load i32* %392, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %388 = load i32* %387, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 19)
  %393 = load i32* %392, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %399 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %399 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %399 = load i32* getelementp... (idx: 0)        -1050                         -290                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %399 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %399 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 106)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep370 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep372 = add i32 %gep370, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep375 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep377 = add i32 %gep375, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep370 = add i32 %gep_int36... (idx: 0)        -970                          -890                          -510                          -510                          -20                           -20                           -20                           -40                           
  %gep372 = add i32 %gep370, %... (idx: 1)        -970                          -890                          -510                          -510                          -20                           -20                           -20                           -40                           
  %gep375 = add i32 %gep_int37... (idx: 2)        -970                          -890                          -510                          -510                          -20                           -20                           -20                           -40                           
  %gep377 = add i32 %gep375, %... (idx: 3)        -970                          -890                          -510                          -510                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep370 = add i32 %gep_int36... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep372 = add i32 %gep370, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep375 = add i32 %gep_int37... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep377 = add i32 %gep375, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep370 = add i32 %gep_int36... (idx: 0) -> main_signed_add_32_0 (mux inputs: 99)
  %gep372 = add i32 %gep370, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 91)
  %gep375 = add i32 %gep_int37... (idx: 2) -> main_signed_add_32_2 (mux inputs: 53)
  %gep377 = add i32 %gep375, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 53)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %393, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %393, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  %404 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %404 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %393, i32* getelem... (idx: 0)        -1055                         -295                          
  %404 = load i32* getelementp... (idx: 1)        -1050                         -290                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %393, i32* getelem... (idx: 0)        1                             0                             
  %404 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %393, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 107)
  %404 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %398 = load i32* %397, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %398 = load i32* %397, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %398 = load i32* %397, align... (idx: 0)        -185                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %398 = load i32* %397, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %398 = load i32* %397, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep380 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep382 = add i32 %gep380, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep380 = add i32 %gep_int37... (idx: 0)        -990                          -910                          -530                          -530                          -20                           -20                           -20                           -40                           
  %gep382 = add i32 %gep380, %... (idx: 1)        -990                          -910                          -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep380 = add i32 %gep_int37... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep382 = add i32 %gep380, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep380 = add i32 %gep_int37... (idx: 0) -> main_signed_add_32_0 (mux inputs: 101)
  %gep382 = add i32 %gep380, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 93)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %398, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %398, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %398, i32* getelem... (idx: 0)        -1065                         -295                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %398, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %398, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 108)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep385 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep387 = add i32 %gep385, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep385 = add i32 %gep_int38... (idx: 0)        -1010                         -930                          -530                          -530                          -20                           -20                           -20                           -40                           
  %gep387 = add i32 %gep385, %... (idx: 1)        -1010                         -930                          -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep385 = add i32 %gep_int38... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep387 = add i32 %gep385, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep385 = add i32 %gep_int38... (idx: 0) -> main_signed_add_32_0 (mux inputs: 103)
  %gep387 = add i32 %gep385, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 95)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %403 = load i32* %402, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %403 = load i32* %402, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %403 = load i32* %402, align... (idx: 0)        -195                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %403 = load i32* %402, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %403 = load i32* %402, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep390 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep392 = add i32 %gep390, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep390 = add i32 %gep_int38... (idx: 0)        -1030                         -950                          -530                          -530                          -20                           -20                           -20                           -40                           
  %gep392 = add i32 %gep390, %... (idx: 1)        -1030                         -950                          -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep390 = add i32 %gep_int38... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep392 = add i32 %gep390, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep390 = add i32 %gep_int38... (idx: 0) -> main_signed_add_32_0 (mux inputs: 105)
  %gep392 = add i32 %gep390, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 97)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %403, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %403, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %388, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %388, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %403, i32* getelem... (idx: 0)        -1075                         -295                          
  store i32 %388, i32* getelem... (idx: 1)        -1075                         -295                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %403, i32* getelem... (idx: 0)        1                             0                             
  store i32 %388, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %403, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 109)
  store i32 %388, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 31)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %408 = load i32* %407, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %408 = load i32* %407, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %408 = load i32* %407, align... (idx: 0)        -205                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %408 = load i32* %407, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %408 = load i32* %407, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %409 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %409 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %409 = load i32* getelementp... (idx: 0)        -1080                         -300                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %409 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %409 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 109)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %408, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %408, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  %414 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %414 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %408, i32* getelem... (idx: 0)        -1085                         -305                          
  %414 = load i32* getelementp... (idx: 1)        -1080                         -300                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %408, i32* getelem... (idx: 0)        1                             0                             
  %414 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %408, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 110)
  %414 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 31)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %419 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %419 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %419 = load i32* getelementp... (idx: 0)        -1090                         -300                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %419 = load i32* getelementp... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %419 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %413 = load i32* %412, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %413 = load i32* %412, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %413 = load i32* %412, align... (idx: 0)        -215                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %413 = load i32* %412, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %413 = load i32* %412, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep395 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep397 = add i32 %gep395, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep395 = add i32 %gep_int39... (idx: 0)        -1050                         -970                          -530                          -530                          -20                           -20                           -20                           -40                           
  %gep397 = add i32 %gep395, %... (idx: 1)        -1050                         -970                          -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep395 = add i32 %gep_int39... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep397 = add i32 %gep395, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep395 = add i32 %gep_int39... (idx: 0) -> main_signed_add_32_0 (mux inputs: 107)
  %gep397 = add i32 %gep395, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 99)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %413, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %413, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %413, i32* getelem... (idx: 0)        -1095                         -305                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %413, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %413, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 111)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep400 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep402 = add i32 %gep400, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep400 = add i32 %gep_int39... (idx: 0)        -1070                         -990                          -530                          -530                          -20                           -20                           -20                           -40                           
  %gep402 = add i32 %gep400, %... (idx: 1)        -1070                         -990                          -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep400 = add i32 %gep_int39... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep402 = add i32 %gep400, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep400 = add i32 %gep_int39... (idx: 0) -> main_signed_add_32_0 (mux inputs: 109)
  %gep402 = add i32 %gep400, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %418 = load i32* %417, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %418 = load i32* %417, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %418 = load i32* %417, align... (idx: 0)        -225                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %418 = load i32* %417, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %418 = load i32* %417, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 24)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep405 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep407 = add i32 %gep405, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep405 = add i32 %gep_int40... (idx: 0)        -1090                         -1010                         -530                          -530                          -20                           -20                           -20                           -40                           
  %gep407 = add i32 %gep405, %... (idx: 1)        -1090                         -1010                         -530                          -530                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep405 = add i32 %gep_int40... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep407 = add i32 %gep405, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep405 = add i32 %gep_int40... (idx: 0) -> main_signed_add_32_0 (mux inputs: 111)
  %gep407 = add i32 %gep405, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 103)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %418, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %418, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %418, i32* getelem... (idx: 0)        -1105                         -305                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %418, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %418, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 112)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %423 = load i32* %422, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %423 = load i32* %422, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %423 = load i32* %422, align... (idx: 0)        -235                          -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %423 = load i32* %422, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %423 = load i32* %422, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 25)
State: LEGUP_F_main_BB_lrph10i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %423, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %423, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %423, i32* getelem... (idx: 0)        -1115                         -305                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %423, i32* getelem... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %423, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 113)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep415 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep422 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep429 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep415 = add i32 %gep_int41... (idx: 0)        -1105                         -1025                         -525                          -525                          -15                           -15                           -15                           -35                           
  %gep422 = add i32 %gep_int42... (idx: 1)        -1105                         -1025                         -525                          -525                          -15                           -15                           -15                           -35                           
  %gep429 = add i32 %gep_int42... (idx: 2)        -1105                         -1025                         -525                          -525                          -15                           -15                           -15                           -35                           
  %449 = add nsw i32 %j.01.i2.... (idx: 3)        -1115                         -1035                         -535                          -535                          -25                           -25                           -25                           -45                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep415 = add i32 %gep_int41... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep422 = add i32 %gep_int42... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep429 = add i32 %gep_int42... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %449 = add nsw i32 %j.01.i2.... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep415 = add i32 %gep_int41... (idx: 0) -> main_signed_add_32_0 (mux inputs: 112)
  %gep422 = add i32 %gep_int42... (idx: 1) -> main_signed_add_32_1 (mux inputs: 104)
  %gep429 = add i32 %gep_int42... (idx: 2) -> main_signed_add_32_2 (mux inputs: 54)
  %449 = add nsw i32 %j.01.i2.... (idx: 3) -> main_signed_add_32_3 (mux inputs: 54)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %426 = load i32* %425, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %426 = load i32* %425, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %429 = load i32* %428, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %429 = load i32* %428, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %426 = load i32* %425, align... (idx: 0)        -1125                         -305                          
  %429 = load i32* %428, align... (idx: 1)        -1125                         -305                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %426 = load i32* %425, align... (idx: 0)        1                             0                             
  %429 = load i32* %428, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %426 = load i32* %425, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 114)
  %429 = load i32* %428, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 32)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep410 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep413 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep417 = add i32 %gep415, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep420 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep424 = add i32 %gep422, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep427 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep431 = add i32 %gep429, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep434 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep410 = add i32 %gep_int40... (idx: 0)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep413 = add i32 %gep_int41... (idx: 1)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep417 = add i32 %gep415, %... (idx: 2)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep420 = add i32 %gep_int41... (idx: 3)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep424 = add i32 %gep422, %... (idx: 4)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep427 = add i32 %gep_int42... (idx: 5)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep431 = add i32 %gep429, %... (idx: 6)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
  %gep434 = add i32 %gep_int43... (idx: 7)        -1120                         -1040                         -540                          -540                          -20                           -20                           -20                           -40                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep410 = add i32 %gep_int40... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep413 = add i32 %gep_int41... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep417 = add i32 %gep415, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep420 = add i32 %gep_int41... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep424 = add i32 %gep422, %... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep427 = add i32 %gep_int42... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             
  %gep431 = add i32 %gep429, %... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep434 = add i32 %gep_int43... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep410 = add i32 %gep_int40... (idx: 0) -> main_signed_add_32_0 (mux inputs: 114)
  %gep413 = add i32 %gep_int41... (idx: 1) -> main_signed_add_32_1 (mux inputs: 106)
  %gep417 = add i32 %gep415, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 56)
  %gep420 = add i32 %gep_int41... (idx: 3) -> main_signed_add_32_3 (mux inputs: 56)
  %gep424 = add i32 %gep422, %... (idx: 4) -> main_signed_add_32_4 (mux inputs: 4)
  %gep427 = add i32 %gep_int42... (idx: 5) -> main_signed_add_32_5 (mux inputs: 4)
  %gep431 = add i32 %gep429, %... (idx: 6) -> main_signed_add_32_6 (mux inputs: 4)
  %gep434 = add i32 %gep_int43... (idx: 7) -> main_signed_add_32_7 (mux inputs: 6)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %430, i32* %428, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %430, i32* %428, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %430, i32* %428, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %430, i32* %428, a... (idx: 0)        -1140                         -315                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %430, i32* %428, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %430, i32* %428, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 116)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %432 = load i32* %431, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %432 = load i32* %431, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %435 = load i32* %434, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %435 = load i32* %434, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %432 = load i32* %431, align... (idx: 0)        -1155                         -315                          
  %435 = load i32* %434, align... (idx: 1)        -1155                         -315                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %432 = load i32* %431, align... (idx: 0)        1                             0                             
  %435 = load i32* %434, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %432 = load i32* %431, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 117)
  %435 = load i32* %434, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 33)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %436, i32* %434, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %436, i32* %434, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %436, i32* %434, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %436, i32* %434, a... (idx: 0)        -1170                         -325                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %436, i32* %434, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %436, i32* %434, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 119)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %438 = load i32* %437, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %438 = load i32* %437, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %441 = load i32* %440, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %441 = load i32* %440, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %438 = load i32* %437, align... (idx: 0)        -1185                         -325                          
  %441 = load i32* %440, align... (idx: 1)        -1185                         -325                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %438 = load i32* %437, align... (idx: 0)        1                             0                             
  %441 = load i32* %440, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %438 = load i32* %437, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 120)
  %441 = load i32* %440, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 34)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %442, i32* %440, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %442, i32* %440, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %442, i32* %440, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %442, i32* %440, a... (idx: 0)        -1200                         -335                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %442, i32* %440, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %442, i32* %440, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 122)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %444 = load i32* %443, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %444 = load i32* %443, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %447 = load i32* %446, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %447 = load i32* %446, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %444 = load i32* %443, align... (idx: 0)        -1215                         -335                          
  %447 = load i32* %446, align... (idx: 1)        -1215                         -335                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %444 = load i32* %443, align... (idx: 0)        1                             0                             
  %447 = load i32* %446, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %444 = load i32* %443, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 123)
  %447 = load i32* %446, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 35)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %448, i32* %446, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %448, i32* %446, a... can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %448, i32* %446, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %448, i32* %446, a... (idx: 0)        -1230                         -345                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %448, i32* %446, a... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %448, i32* %446, a... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 125)
State: LEGUP_F_main_BB_lrphi14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %452 = load i32* %451, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %452 = load i32* %451, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %452 = load i32* %451, align... (idx: 0)        -1245                         -345                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %452 = load i32* %451, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %452 = load i32* %451, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 126)
State: LEGUP_F_main_BB_lrphi14
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep437 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep437 = add i32 %gep_int43... (idx: 0)        -1140                         -1060                         -560                          -560                          -40                           -40                           -40                           -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep437 = add i32 %gep_int43... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep437 = add i32 %gep_int43... (idx: 0) -> main_signed_add_32_0 (mux inputs: 116)
State: LEGUP_F_main_BB__454
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre12.i = load i32* %451, ... can share an input with another operation already assigned to main_mem_dual_port_0
  %.pre12.i = load i32* %451, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %.pre12.i = load i32* %451, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre12.i = load i32* %451, ... (idx: 0)        -1250                         -345                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre12.i = load i32* %451, ... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre12.i = load i32* %451, ... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 126)
State: LEGUP_F_main_BB__456
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %459 = add nsw i32 %i.17.i13... can share an output register with another operation already assigned to main_signed_add_32_0
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %459 = add nsw i32 %i.17.i13... (idx: 0)        -1155                         -1065                         -565                          -565                          -45                           -45                           -45                           -65                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %459 = add nsw i32 %i.17.i13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %459 = add nsw i32 %i.17.i13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 117)
State: LEGUP_F_main_BB_preheaderloopexiti11
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_0
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_1
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_2
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_3
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_4
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_5
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_6
  %468 = add nsw i32 %i.26.i15... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %468 = add nsw i32 %i.26.i15... (idx: 0)        -1165                         -1055                         -555                          -555                          -35                           -35                           -35                           -55                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %468 = add nsw i32 %i.26.i15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %468 = add nsw i32 %i.26.i15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 118)
State: LEGUP_F_main_BB_preheaderloopexiti11
Binding functional unit type: decryptout_dec_statemt_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_decryptout_dec_statemt_local_mem_dual_port_0
  %464 = load i32* %463, align... (idx: 0)        -5                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_decryptout_dec_statemt_local_mem_dual_port_0
  %464 = load i32* %463, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %464 = load i32* %463, align... (idx: 0) -> main_decryptout_dec_statemt_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderloopexiti11
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %462 = load i32* %461, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %462 = load i32* %461, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %462 = load i32* %461, align... (idx: 0)        -1255                         -345                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %462 = load i32* %461, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %462 = load i32* %461, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 127)
State: LEGUP_F_main_BB_preheaderloopexiti11
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep440 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep443 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep440 = add i32 %gep_int43... (idx: 0)        -1180                         -1060                         -560                          -560                          -40                           -40                           -40                           -60                           
  %gep443 = add i32 %gep_int44... (idx: 1)        -1180                         -1060                         -560                          -560                          -40                           -40                           -40                           -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep440 = add i32 %gep_int43... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep443 = add i32 %gep_int44... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep440 = add i32 %gep_int43... (idx: 0) -> main_signed_add_32_0 (mux inputs: 120)
  %gep443 = add i32 %gep_int44... (idx: 1) -> main_signed_add_32_1 (mux inputs: 108)
State: LEGUP_F_main_BB_preheaderloopexiti11
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_0
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_1
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_2
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_3
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_4
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_5
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_6
  %467 = add nsw i32 %466, %46... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %467 = add nsw i32 %466, %46... (idx: 0)        -1200                         -1080                         -560                          -560                          -40                           -40                           -40                           -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %467 = add nsw i32 %466, %46... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %467 = add nsw i32 %466, %46... (idx: 0) -> main_signed_add_32_0 (mux inputs: 122)

