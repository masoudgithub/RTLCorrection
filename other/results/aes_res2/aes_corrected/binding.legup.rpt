//----------------------------------------------------------------------------//
// Generated by LegUp High-Level Synthesis Tool Version 4.0 (http://legup.org)
// Compiled: Tue Jun 18 03:11:52 2019
// University of Toronto
// For research and academic purposes only. Commercial use is prohibited.
// Please send bugs to: legup@eecg.toronto.edu
// Date: Sun Jun 23 13:47:07 2019
//----------------------------------------------------------------------------//

--------------------------------------------------------------------------------
Function: main
--------------------------------------------------------------------------------
Function unit type:           Number Required               
decryptout_dec_statemt_local_mem_dual_port1                             
encryptout_enc_statemt_local_mem_dual_port1                             
invSbox_local_mem_dual_port   2                             
mem_dual_port                 2                             
signed_add_32                 8                             

Running Bipartite Weighted Matching on function: main
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 50, i32* getelemen... (idx: 0)        2                             2                             
  store i32 67, i32* getelemen... (idx: 1)        2                             2                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 50, i32* getelemen... (idx: 0)        1                             0                             
  store i32 67, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 50, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 67, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 246, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 246, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 168, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 168, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 246, i32* geteleme... (idx: 0)        12                            12                            
  store i32 168, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 246, i32* geteleme... (idx: 0)        1                             0                             
  store i32 168, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 246, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 168, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 90, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 90, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 136, i32* geteleme... (idx: 0)        12                            12                            
  store i32 90, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 136, i32* geteleme... (idx: 0)        1                             0                             
  store i32 90, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 136, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 90, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 48, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 48, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 141, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 141, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* getelemen... (idx: 0)        12                            12                            
  store i32 141, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 48, i32* getelemen... (idx: 0)        1                             0                             
  store i32 141, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 48, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 141, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 49, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 49, i32* getelemen... (idx: 0)        12                            12                            
  store i32 49, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 49, i32* getelemen... (idx: 0)        1                             0                             
  store i32 49, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 49, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 49, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 152, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 152, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 162, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 162, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 152, i32* geteleme... (idx: 0)        12                            12                            
  store i32 162, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 152, i32* geteleme... (idx: 0)        1                             0                             
  store i32 162, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 152, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 162, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 224, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 224, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 55, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 55, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 224, i32* geteleme... (idx: 0)        12                            12                            
  store i32 55, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 224, i32* geteleme... (idx: 0)        1                             0                             
  store i32 55, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 224, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 55, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 7, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 7, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 52, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 52, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 7, i32* getelement... (idx: 0)        12                            12                            
  store i32 52, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 7, i32* getelement... (idx: 0)        1                             0                             
  store i32 52, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 7, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 52, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 43, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 43, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 126, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 126, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 43, i32* getelemen... (idx: 0)        12                            12                            
  store i32 126, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 43, i32* getelemen... (idx: 0)        1                             0                             
  store i32 126, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 43, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 126, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 22, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 22, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        12                            12                            
  store i32 22, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        1                             0                             
  store i32 22, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 21, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 22, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 40, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 40, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 174, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 174, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 40, i32* getelemen... (idx: 0)        12                            12                            
  store i32 174, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 40, i32* getelemen... (idx: 0)        1                             0                             
  store i32 174, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 40, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 174, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 210, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 210, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 166, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 166, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 210, i32* geteleme... (idx: 0)        12                            12                            
  store i32 166, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 210, i32* geteleme... (idx: 0)        1                             0                             
  store i32 166, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 210, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 166, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 171, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 171, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 247, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 247, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 171, i32* geteleme... (idx: 0)        12                            12                            
  store i32 247, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 171, i32* geteleme... (idx: 0)        1                             0                             
  store i32 247, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 171, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 247, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 21, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 136, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        12                            12                            
  store i32 136, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 21, i32* getelemen... (idx: 0)        1                             0                             
  store i32 136, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 21, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 136, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 9, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 9, i32* getelement... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 207, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 207, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 9, i32* getelement... (idx: 0)        12                            12                            
  store i32 207, i32* geteleme... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 9, i32* getelement... (idx: 0)        1                             0                             
  store i32 207, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 9, i32* getelement... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 207, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__0
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 79, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 79, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 60, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 60, i32* getelemen... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 79, i32* getelemen... (idx: 0)        12                            12                            
  store i32 60, i32* getelemen... (idx: 1)        12                            12                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 79, i32* getelemen... (idx: 0)        1                             0                             
  store i32 60, i32* getelemen... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 79, i32* getelemen... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 0)
  store i32 60, i32* getelemen... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 0)
State: LEGUP_F_main_BB__2
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep5 = add i32 %gep_int4, 4... (idx: 0)        -5                            -5                            -4                            -4                            -4                            -4                            -4                            -4                            
  %gep12 = add i32 %gep_int11,... (idx: 1)        -4                            -5                            -5                            -4                            -4                            -4                            -4                            -4                            
  %gep19 = add i32 %gep_int18,... (idx: 2)        -4                            -4                            -5                            -5                            -4                            -4                            -4                            -4                            
  %27 = add nsw i32 %j.02.i.i,... (idx: 3)        -3                            -3                            -2                            -3                            -3                            -2                            -2                            -2                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep5 = add i32 %gep_int4, 4... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep12 = add i32 %gep_int11,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep19 = add i32 %gep_int18,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %27 = add nsw i32 %j.02.i.i,... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep5 = add i32 %gep_int4, 4... (idx: 0) -> main_signed_add_32_0 (mux inputs: 1)
  %gep12 = add i32 %gep_int11,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 1)
  %gep19 = add i32 %gep_int18,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 1)
  %27 = add nsw i32 %j.02.i.i,... (idx: 3) -> main_signed_add_32_3 (mux inputs: 1)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %4 = load i32* %3, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %4 = load i32* %3, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_1
  %7 = load i32* %6, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %7 = load i32* %6, align 4, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %3, align 4, ... (idx: 0)        5                             5                             
  %7 = load i32* %6, align 4, ... (idx: 1)        5                             6                             
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %4 = load i32* %3, align 4, ... (idx: 0)        0                             1                             
  %7 = load i32* %6, align 4, ... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %7 = load i32* %6, align 4, ... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 1)
  %4 = load i32* %3, align 4, ... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB__2
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep = add i32 %gep_int, %ge... (idx: 0)        -19                           -19                           -19                           -19                           -9                            -9                            -9                            -9                            
  %gep3 = add i32 %gep_int1, %... (idx: 1)        -17                           -17                           -17                           -17                           -7                            -7                            -7                            -7                            
  %gep7 = add i32 %gep5, %gep_... (idx: 2)        -19                           -19                           -19                           -19                           -9                            -9                            -9                            -9                            
  %gep10 = add i32 %gep_int8, ... (idx: 3)        -17                           -17                           -17                           -17                           -7                            -7                            -7                            -7                            
  %gep14 = add i32 %gep12, %ge... (idx: 4)        -19                           -19                           -19                           -19                           -9                            -9                            -9                            -9                            
  %gep17 = add i32 %gep_int15,... (idx: 5)        -17                           -17                           -17                           -17                           -7                            -7                            -7                            -7                            
  %gep21 = add i32 %gep19, %ge... (idx: 6)        -19                           -19                           -19                           -19                           -9                            -9                            -9                            -9                            
  %gep24 = add i32 %gep_int22,... (idx: 7)        -17                           -17                           -17                           -17                           -7                            -7                            -7                            -7                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep = add i32 %gep_int, %ge... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep3 = add i32 %gep_int1, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep7 = add i32 %gep5, %gep_... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep10 = add i32 %gep_int8, ... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep14 = add i32 %gep12, %ge... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep17 = add i32 %gep_int15,... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             
  %gep21 = add i32 %gep19, %ge... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep24 = add i32 %gep_int22,... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep = add i32 %gep_int, %ge... (idx: 0) -> main_signed_add_32_0 (mux inputs: 3)
  %gep3 = add i32 %gep_int1, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 3)
  %gep7 = add i32 %gep5, %gep_... (idx: 2) -> main_signed_add_32_2 (mux inputs: 3)
  %gep10 = add i32 %gep_int8, ... (idx: 3) -> main_signed_add_32_3 (mux inputs: 3)
  %gep14 = add i32 %gep12, %ge... (idx: 4) -> main_signed_add_32_4 (mux inputs: 2)
  %gep17 = add i32 %gep_int15,... (idx: 5) -> main_signed_add_32_5 (mux inputs: 2)
  %gep21 = add i32 %gep19, %ge... (idx: 6) -> main_signed_add_32_6 (mux inputs: 2)
  %gep24 = add i32 %gep_int22,... (idx: 7) -> main_signed_add_32_7 (mux inputs: 2)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %8, i32* %6, align... hey can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %8, i32* %6, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %8, i32* %6, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %8, i32* %6, align... (idx: 0)        -5                            -9                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %8, i32* %6, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %8, i32* %6, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %10 = load i32* %9, align 4,... can share an output register with another operation already assigned to main_mem_dual_port_0
  %10 = load i32* %9, align 4,... can share an output register with another operation already assigned to main_mem_dual_port_1
  %13 = load i32* %12, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %13 = load i32* %12, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load i32* %9, align 4,... (idx: 0)        -4                            -24                           
  %13 = load i32* %12, align 4... (idx: 1)        -5                            -24                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %10 = load i32* %9, align 4,... (idx: 0)        0                             1                             
  %13 = load i32* %12, align 4... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %13 = load i32* %12, align 4... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 2)
  %10 = load i32* %9, align 4,... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %14, i32* %12, ali... hey can share an input with another operation already assigned to main_mem_dual_port_0
  store i32 %14, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %14, i32* %12, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %14, i32* %12, ali... (idx: 0)        -15                           -39                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %14, i32* %12, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %14, i32* %12, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %16 = load i32* %15, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %16 = load i32* %15, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %19 = load i32* %18, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %19 = load i32* %18, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load i32* %15, align 4... (idx: 0)        -15                           -54                           
  %19 = load i32* %18, align 4... (idx: 1)        -15                           -54                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %16 = load i32* %15, align 4... (idx: 0)        1                             0                             
  %19 = load i32* %18, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %16 = load i32* %15, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 3)
  %19 = load i32* %18, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %20, i32* %18, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %20, i32* %18, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %20, i32* %18, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %20, i32* %18, ali... (idx: 0)        -30                           -63                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %20, i32* %18, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %20, i32* %18, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 8)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %22 = load i32* %21, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %22 = load i32* %21, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %25 = load i32* %24, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %25 = load i32* %24, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i32* %21, align 4... (idx: 0)        -25                           -74                           
  %25 = load i32* %24, align 4... (idx: 1)        -25                           -74                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %22 = load i32* %21, align 4... (idx: 0)        1                             0                             
  %25 = load i32* %24, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %22 = load i32* %21, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 4)
  %25 = load i32* %24, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 9)
State: LEGUP_F_main_BB__2
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %26, i32* %24, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %26, i32* %24, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %26, i32* %24, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %26, i32* %24, ali... (idx: 0)        -40                           -84                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %26, i32* %24, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %26, i32* %24, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 10)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep32 = add i32 %gep_int31,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep39 = add i32 %gep_int38,... can share an output register with another operation already assigned to main_signed_add_32_7
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_0
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_1
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_2
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_3
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_4
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_5
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_6
  %42 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep46 = add i32 %gep_int45,... can share an output register with another operation already assigned to main_signed_add_32_7
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_0
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_1
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_2
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_3
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_4
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_5
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_6
  %48 = add nsw i32 %j.11.i.i,... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep32 = add i32 %gep_int31,... (idx: 0)        -25                           -25                           -24                           -24                           -14                           -14                           -14                           -14                           
  %36 = add nsw i32 %j.11.i.i,... (idx: 1)        -34                           -34                           -33                           -34                           -24                           -23                           -23                           -23                           
  %gep39 = add i32 %gep_int38,... (idx: 2)        -24                           -25                           -25                           -24                           -14                           -14                           -14                           -14                           
  %42 = add nsw i32 %j.11.i.i,... (idx: 3)        -23                           -23                           -24                           -23                           -13                           -13                           -14                           -13                           
  %gep46 = add i32 %gep_int45,... (idx: 4)        -24                           -24                           -25                           -25                           -14                           -14                           -14                           -14                           
  %48 = add nsw i32 %j.11.i.i,... (idx: 5)        -23                           -23                           -23                           -24                           -14                           -13                           -13                           -13                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep32 = add i32 %gep_int31,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %36 = add nsw i32 %j.11.i.i,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep39 = add i32 %gep_int38,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %42 = add nsw i32 %j.11.i.i,... (idx: 3)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep46 = add i32 %gep_int45,... (idx: 4)        0                             0                             0                             1                             0                             0                             0                             0                             
  %48 = add nsw i32 %j.11.i.i,... (idx: 5)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep32 = add i32 %gep_int31,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 4)
  %36 = add nsw i32 %j.11.i.i,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 4)
  %gep39 = add i32 %gep_int38,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 4)
  %gep46 = add i32 %gep_int45,... (idx: 4) -> main_signed_add_32_3 (mux inputs: 4)
  %48 = add nsw i32 %j.11.i.i,... (idx: 5) -> main_signed_add_32_4 (mux inputs: 3)
  %42 = add nsw i32 %j.11.i.i,... (idx: 3) -> main_signed_add_32_6 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %29 = load i32* %28, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %32 = load i32* %31, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %32 = load i32* %31, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load i32* %28, align 4... (idx: 0)        -34                           -94                           
  %32 = load i32* %31, align 4... (idx: 1)        -35                           -95                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %29 = load i32* %28, align 4... (idx: 0)        1                             0                             
  %32 = load i32* %31, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %29 = load i32* %28, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 5)
  %32 = load i32* %31, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 11)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep27 = add i32 %gep_int25,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep30 = add i32 %gep_int28,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep34 = add i32 %gep32, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep41 = add i32 %gep39, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep48 = add i32 %gep46, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep27 = add i32 %gep_int25,... (idx: 0)        -39                           -39                           -39                           -39                           -29                           -19                           -29                           -19                           
  %gep30 = add i32 %gep_int28,... (idx: 1)        -37                           -37                           -37                           -37                           -27                           -17                           -27                           -17                           
  %gep34 = add i32 %gep32, %ge... (idx: 2)        -39                           -39                           -39                           -39                           -29                           -19                           -29                           -19                           
  %gep41 = add i32 %gep39, %ge... (idx: 3)        -39                           -39                           -39                           -39                           -29                           -19                           -29                           -19                           
  %gep48 = add i32 %gep46, %ge... (idx: 4)        -39                           -39                           -39                           -39                           -29                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep27 = add i32 %gep_int25,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep30 = add i32 %gep_int28,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep34 = add i32 %gep32, %ge... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep41 = add i32 %gep39, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep48 = add i32 %gep46, %ge... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep27 = add i32 %gep_int25,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 6)
  %gep30 = add i32 %gep_int28,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 6)
  %gep34 = add i32 %gep32, %ge... (idx: 2) -> main_signed_add_32_2 (mux inputs: 6)
  %gep41 = add i32 %gep39, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 6)
  %gep48 = add i32 %gep46, %ge... (idx: 4) -> main_signed_add_32_4 (mux inputs: 5)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep37 = add i32 %gep_int35,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep44 = add i32 %gep_int42,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep51 = add i32 %gep_int49,... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep37 = add i32 %gep_int35,... (idx: 0)        -57                           -57                           -57                           -57                           -47                           -17                           -27                           -17                           
  %gep44 = add i32 %gep_int42,... (idx: 1)        -57                           -57                           -57                           -57                           -47                           -17                           -27                           -17                           
  %gep51 = add i32 %gep_int49,... (idx: 2)        -57                           -57                           -57                           -57                           -47                           -17                           -27                           -17                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep37 = add i32 %gep_int35,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep44 = add i32 %gep_int42,... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep51 = add i32 %gep_int49,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep37 = add i32 %gep_int35,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 8)
  %gep44 = add i32 %gep_int42,... (idx: 1) -> main_signed_add_32_1 (mux inputs: 8)
  %gep51 = add i32 %gep_int49,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %33, i32* %31, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %33, i32* %31, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %33, i32* %31, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %33, i32* %31, ali... (idx: 0)        -50                           -105                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %33, i32* %31, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %33, i32* %31, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 12)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %35 = load i32* %34, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %35 = load i32* %34, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %38 = load i32* %37, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %38 = load i32* %37, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %35 = load i32* %34, align 4... (idx: 0)        -45                           -114                          
  %38 = load i32* %37, align 4... (idx: 1)        -45                           -114                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %35 = load i32* %34, align 4... (idx: 0)        1                             0                             
  %38 = load i32* %37, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %35 = load i32* %34, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 6)
  %38 = load i32* %37, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 13)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %39, i32* %37, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %39, i32* %37, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %39, i32* %37, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %39, i32* %37, ali... (idx: 0)        -60                           -123                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %39, i32* %37, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %39, i32* %37, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 14)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %41 = load i32* %40, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %41 = load i32* %40, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %44 = load i32* %43, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %44 = load i32* %43, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load i32* %40, align 4... (idx: 0)        -54                           -134                          
  %44 = load i32* %43, align 4... (idx: 1)        -55                           -135                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %41 = load i32* %40, align 4... (idx: 0)        1                             0                             
  %44 = load i32* %43, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %41 = load i32* %40, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 7)
  %44 = load i32* %43, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 15)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %45, i32* %43, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %45, i32* %43, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %45, i32* %43, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %45, i32* %43, ali... (idx: 0)        -69                           -144                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %45, i32* %43, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %45, i32* %43, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 16)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %47 = load i32* %46, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %47 = load i32* %46, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %50 = load i32* %49, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %50 = load i32* %49, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %47 = load i32* %46, align 4... (idx: 0)        -65                           -155                          
  %50 = load i32* %49, align 4... (idx: 1)        -64                           -154                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %47 = load i32* %46, align 4... (idx: 0)        1                             0                             
  %50 = load i32* %49, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %47 = load i32* %46, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %50 = load i32* %49, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 17)
State: LEGUP_F_main_BB_preheaderii
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %51, i32* %49, ali... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %51, i32* %49, ali... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %51, i32* %49, ali... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %51, i32* %49, ali... (idx: 0)        -79                           -163                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %51, i32* %49, ali... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %51, i32* %49, ali... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %52 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %52 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %57 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %57 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %52 = load i32* getelementpt... (idx: 0)        -69                           -169                          
  %57 = load i32* getelementpt... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %52 = load i32* getelementpt... (idx: 0)        1                             0                             
  %57 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %52 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %57 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %62 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %62 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %67 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %67 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %62 = load i32* getelementpt... (idx: 0)        -69                           -169                          
  %67 = load i32* getelementpt... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %62 = load i32* getelementpt... (idx: 0)        1                             0                             
  %67 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %62 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %67 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %72 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %72 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %77 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %77 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load i32* getelementpt... (idx: 0)        -69                           -169                          
  %77 = load i32* getelementpt... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %72 = load i32* getelementpt... (idx: 0)        1                             0                             
  %77 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %72 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %77 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %82 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %82 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %87 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load i32* getelementpt... (idx: 0)        -69                           -169                          
  %87 = load i32* getelementpt... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %82 = load i32* getelementpt... (idx: 0)        1                             0                             
  %87 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %82 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %87 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep54 = add i32 %gep_int52,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep56 = add i32 %gep54, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep59 = add i32 %gep_int57,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep61 = add i32 %gep59, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep54 = add i32 %gep_int52,... (idx: 0)        -79                           -79                           -79                           -59                           -49                           -19                           -29                           -19                           
  %gep56 = add i32 %gep54, %ge... (idx: 1)        -79                           -79                           -79                           -59                           -49                           -19                           -29                           -19                           
  %gep59 = add i32 %gep_int57,... (idx: 2)        -79                           -79                           -79                           -59                           -49                           -19                           -29                           -19                           
  %gep61 = add i32 %gep59, %ge... (idx: 3)        -79                           -79                           -79                           -59                           -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep54 = add i32 %gep_int52,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep56 = add i32 %gep54, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep59 = add i32 %gep_int57,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep61 = add i32 %gep59, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep54 = add i32 %gep_int52,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 10)
  %gep56 = add i32 %gep54, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 10)
  %gep59 = add i32 %gep_int57,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 10)
  %gep61 = add i32 %gep59, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 8)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %92 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %92 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
  %97 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_0
  %97 = load i32* getelementpt... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        -69                           -169                          
  %97 = load i32* getelementpt... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %92 = load i32* getelementpt... (idx: 0)        1                             0                             
  %97 = load i32* getelementpt... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %92 = load i32* getelementpt... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %97 = load i32* getelementpt... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep64 = add i32 %gep_int62,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep66 = add i32 %gep64, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep69 = add i32 %gep_int67,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep71 = add i32 %gep69, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep64 = add i32 %gep_int62,... (idx: 0)        -99                           -99                           -99                           -79                           -49                           -19                           -29                           -19                           
  %gep66 = add i32 %gep64, %ge... (idx: 1)        -99                           -99                           -99                           -79                           -49                           -19                           -29                           -19                           
  %gep69 = add i32 %gep_int67,... (idx: 2)        -99                           -99                           -99                           -79                           -49                           -19                           -29                           -19                           
  %gep71 = add i32 %gep69, %ge... (idx: 3)        -99                           -99                           -99                           -79                           -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep64 = add i32 %gep_int62,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep66 = add i32 %gep64, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep69 = add i32 %gep_int67,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep71 = add i32 %gep69, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep64 = add i32 %gep_int62,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 12)
  %gep66 = add i32 %gep64, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 12)
  %gep69 = add i32 %gep_int67,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 12)
  %gep71 = add i32 %gep69, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 10)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %102 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %102 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %107 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %107 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* getelementp... (idx: 0)        -69                           -169                          
  %107 = load i32* getelementp... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %102 = load i32* getelementp... (idx: 0)        1                             0                             
  %107 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %102 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %107 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep74 = add i32 %gep_int72,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep76 = add i32 %gep74, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep79 = add i32 %gep_int77,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep81 = add i32 %gep79, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep74 = add i32 %gep_int72,... (idx: 0)        -119                          -119                          -119                          -99                           -49                           -19                           -29                           -19                           
  %gep76 = add i32 %gep74, %ge... (idx: 1)        -119                          -119                          -119                          -99                           -49                           -19                           -29                           -19                           
  %gep79 = add i32 %gep_int77,... (idx: 2)        -119                          -119                          -119                          -99                           -49                           -19                           -29                           -19                           
  %gep81 = add i32 %gep79, %ge... (idx: 3)        -119                          -119                          -119                          -99                           -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep74 = add i32 %gep_int72,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep76 = add i32 %gep74, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep79 = add i32 %gep_int77,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep81 = add i32 %gep79, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep74 = add i32 %gep_int72,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 14)
  %gep76 = add i32 %gep74, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 14)
  %gep79 = add i32 %gep_int77,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 14)
  %gep81 = add i32 %gep79, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 12)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %112 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %112 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %117 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %117 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %112 = load i32* getelementp... (idx: 0)        -69                           -169                          
  %117 = load i32* getelementp... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %112 = load i32* getelementp... (idx: 0)        1                             0                             
  %117 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %112 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %117 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep84 = add i32 %gep_int82,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep86 = add i32 %gep84, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep89 = add i32 %gep_int87,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep91 = add i32 %gep89, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep84 = add i32 %gep_int82,... (idx: 0)        -139                          -139                          -139                          -119                          -49                           -19                           -29                           -19                           
  %gep86 = add i32 %gep84, %ge... (idx: 1)        -139                          -139                          -139                          -119                          -49                           -19                           -29                           -19                           
  %gep89 = add i32 %gep_int87,... (idx: 2)        -139                          -139                          -139                          -119                          -49                           -19                           -29                           -19                           
  %gep91 = add i32 %gep89, %ge... (idx: 3)        -139                          -139                          -139                          -119                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep84 = add i32 %gep_int82,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep86 = add i32 %gep84, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep89 = add i32 %gep_int87,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep91 = add i32 %gep89, %ge... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep84 = add i32 %gep_int82,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 16)
  %gep86 = add i32 %gep84, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 16)
  %gep89 = add i32 %gep_int87,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 16)
  %gep91 = add i32 %gep89, %ge... (idx: 3) -> main_signed_add_32_3 (mux inputs: 14)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %122 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %122 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %127 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %127 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %122 = load i32* getelementp... (idx: 0)        -69                           -169                          
  %127 = load i32* getelementp... (idx: 1)        -69                           -169                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %122 = load i32* getelementp... (idx: 0)        1                             0                             
  %127 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %122 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 8)
  %127 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep94 = add i32 %gep_int92,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep96 = add i32 %gep94, %ge... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep99 = add i32 %gep_int97,... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep101 = add i32 %gep99, %g... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep94 = add i32 %gep_int92,... (idx: 0)        -159                          -159                          -159                          -139                          -49                           -19                           -29                           -19                           
  %gep96 = add i32 %gep94, %ge... (idx: 1)        -159                          -159                          -159                          -139                          -49                           -19                           -29                           -19                           
  %gep99 = add i32 %gep_int97,... (idx: 2)        -159                          -159                          -159                          -139                          -49                           -19                           -29                           -19                           
  %gep101 = add i32 %gep99, %g... (idx: 3)        -159                          -159                          -159                          -139                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep94 = add i32 %gep_int92,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep96 = add i32 %gep94, %ge... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep99 = add i32 %gep_int97,... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep101 = add i32 %gep99, %g... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep94 = add i32 %gep_int92,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 18)
  %gep96 = add i32 %gep94, %ge... (idx: 1) -> main_signed_add_32_1 (mux inputs: 18)
  %gep99 = add i32 %gep_int97,... (idx: 2) -> main_signed_add_32_2 (mux inputs: 18)
  %gep101 = add i32 %gep99, %g... (idx: 3) -> main_signed_add_32_3 (mux inputs: 16)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %56 = load i32* %55, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %61 = load i32* %60, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %61 = load i32* %60, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %56 = load i32* %55, align 4... (idx: 0)        -75                           -174                          
  %61 = load i32* %60, align 4... (idx: 1)        -74                           -174                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %56 = load i32* %55, align 4... (idx: 0)        1                             0                             
  %61 = load i32* %60, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %56 = load i32* %55, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 9)
  %61 = load i32* %60, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 19)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep104 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep106 = add i32 %gep104, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep109 = add i32 %gep_int10... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep111 = add i32 %gep109, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep104 = add i32 %gep_int10... (idx: 0)        -179                          -179                          -179                          -159                          -49                           -19                           -29                           -19                           
  %gep106 = add i32 %gep104, %... (idx: 1)        -179                          -179                          -179                          -159                          -49                           -19                           -29                           -19                           
  %gep109 = add i32 %gep_int10... (idx: 2)        -179                          -179                          -179                          -159                          -49                           -19                           -29                           -19                           
  %gep111 = add i32 %gep109, %... (idx: 3)        -179                          -179                          -179                          -159                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep104 = add i32 %gep_int10... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep106 = add i32 %gep104, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep109 = add i32 %gep_int10... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep111 = add i32 %gep109, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep104 = add i32 %gep_int10... (idx: 0) -> main_signed_add_32_0 (mux inputs: 20)
  %gep106 = add i32 %gep104, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 20)
  %gep109 = add i32 %gep_int10... (idx: 2) -> main_signed_add_32_2 (mux inputs: 20)
  %gep111 = add i32 %gep109, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 18)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep114 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep116 = add i32 %gep114, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep119 = add i32 %gep_int11... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep121 = add i32 %gep119, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep114 = add i32 %gep_int11... (idx: 0)        -199                          -199                          -199                          -179                          -49                           -19                           -29                           -19                           
  %gep116 = add i32 %gep114, %... (idx: 1)        -199                          -199                          -199                          -179                          -49                           -19                           -29                           -19                           
  %gep119 = add i32 %gep_int11... (idx: 2)        -199                          -199                          -199                          -179                          -49                           -19                           -29                           -19                           
  %gep121 = add i32 %gep119, %... (idx: 3)        -199                          -199                          -199                          -179                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep114 = add i32 %gep_int11... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep116 = add i32 %gep114, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep119 = add i32 %gep_int11... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep121 = add i32 %gep119, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep114 = add i32 %gep_int11... (idx: 0) -> main_signed_add_32_0 (mux inputs: 22)
  %gep116 = add i32 %gep114, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 22)
  %gep119 = add i32 %gep_int11... (idx: 2) -> main_signed_add_32_2 (mux inputs: 22)
  %gep121 = add i32 %gep119, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 20)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %61, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %61, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %61, i32* geteleme... (idx: 0)        -84                           -183                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %61, i32* geteleme... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %61, i32* geteleme... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 20)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep124 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep126 = add i32 %gep124, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep129 = add i32 %gep_int12... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep131 = add i32 %gep129, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep124 = add i32 %gep_int12... (idx: 0)        -219                          -219                          -219                          -199                          -49                           -19                           -29                           -19                           
  %gep126 = add i32 %gep124, %... (idx: 1)        -219                          -219                          -219                          -199                          -49                           -19                           -29                           -19                           
  %gep129 = add i32 %gep_int12... (idx: 2)        -219                          -219                          -219                          -199                          -49                           -19                           -29                           -19                           
  %gep131 = add i32 %gep129, %... (idx: 3)        -219                          -219                          -219                          -199                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep124 = add i32 %gep_int12... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep126 = add i32 %gep124, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep129 = add i32 %gep_int12... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep131 = add i32 %gep129, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep124 = add i32 %gep_int12... (idx: 0) -> main_signed_add_32_0 (mux inputs: 24)
  %gep126 = add i32 %gep124, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 24)
  %gep129 = add i32 %gep_int12... (idx: 2) -> main_signed_add_32_2 (mux inputs: 24)
  %gep131 = add i32 %gep129, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 22)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %66 = load i32* %65, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %66 = load i32* %65, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %66 = load i32* %65, align 4... (idx: 0)        -85                           -194                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %66 = load i32* %65, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %66 = load i32* %65, align 4... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 21)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %66, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %66, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %66, i32* geteleme... (idx: 0)        -84                           -203                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %66, i32* geteleme... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %66, i32* geteleme... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 22)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %71 = load i32* %70, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %71 = load i32* %70, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load i32* %70, align 4... (idx: 0)        -84                           -214                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %71 = load i32* %70, align 4... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %71 = load i32* %70, align 4... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 23)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %71, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %71, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %56, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %56, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %71, i32* geteleme... (idx: 0)        -84                           -223                          
  store i32 %56, i32* geteleme... (idx: 1)        -83                           -223                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %71, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %56, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %71, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 10)
  store i32 %56, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 24)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %76 = load i32* %75, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %76 = load i32* %75, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %81 = load i32* %80, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %81 = load i32* %80, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %76 = load i32* %75, align 4... (idx: 0)        -94                           -233                          
  %81 = load i32* %80, align 4... (idx: 1)        -95                           -234                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %76 = load i32* %75, align 4... (idx: 0)        1                             0                             
  %81 = load i32* %80, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %76 = load i32* %75, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 11)
  %81 = load i32* %80, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 25)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %81, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %81, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %76, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %76, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %81, i32* geteleme... (idx: 0)        -104                          -244                          
  store i32 %76, i32* geteleme... (idx: 1)        -103                          -243                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %81, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %76, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %81, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 12)
  store i32 %76, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 26)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %86 = load i32* %85, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %91 = load i32* %90, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %91 = load i32* %90, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load i32* %85, align 4... (idx: 0)        -115                          -254                          
  %91 = load i32* %90, align 4... (idx: 1)        -115                          -254                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %86 = load i32* %85, align 4... (idx: 0)        1                             0                             
  %91 = load i32* %90, align 4... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %86 = load i32* %85, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 13)
  %91 = load i32* %90, align 4... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 27)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %91, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %91, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %86, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %86, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %91, i32* geteleme... (idx: 0)        -124                          -263                          
  store i32 %86, i32* geteleme... (idx: 1)        -124                          -263                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %91, i32* geteleme... (idx: 0)        1                             0                             
  store i32 %86, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %91, i32* geteleme... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 14)
  store i32 %86, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 28)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %96 = load i32* %95, align 4... can share an output register with another operation already assigned to main_mem_dual_port_0
  %96 = load i32* %95, align 4... can share an output register with another operation already assigned to main_mem_dual_port_1
  %101 = load i32* %100, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %101 = load i32* %100, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* %95, align 4... (idx: 0)        -135                          -275                          
  %101 = load i32* %100, align... (idx: 1)        -135                          -275                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %96 = load i32* %95, align 4... (idx: 0)        1                             0                             
  %101 = load i32* %100, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %96 = load i32* %95, align 4... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 15)
  %101 = load i32* %100, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 29)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %101, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %101, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %101, i32* getelem... (idx: 0)        -144                          -283                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %101, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %101, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 30)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %106 = load i32* %105, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %106 = load i32* %105, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %106 = load i32* %105, align... (idx: 0)        -145                          -294                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %106 = load i32* %105, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %106 = load i32* %105, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 31)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %106, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %106, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %106, i32* getelem... (idx: 0)        -144                          -303                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %106, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %106, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 32)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %111 = load i32* %110, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %111 = load i32* %110, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load i32* %110, align... (idx: 0)        -145                          -314                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %111 = load i32* %110, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %111 = load i32* %110, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 33)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %111, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %111, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %96, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %96, i32* geteleme... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %111, i32* getelem... (idx: 0)        -144                          -323                          
  store i32 %96, i32* geteleme... (idx: 1)        -144                          -323                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %111, i32* getelem... (idx: 0)        1                             0                             
  store i32 %96, i32* geteleme... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %111, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  store i32 %96, i32* geteleme... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 34)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %116 = load i32* %115, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %116 = load i32* %115, align... (idx: 0)        -155                          -335                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %116 = load i32* %115, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %116 = load i32* %115, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 35)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %116, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %116, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %116, i32* getelem... (idx: 0)        -154                          -343                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %116, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %116, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 36)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %121 = load i32* %120, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %121 = load i32* %120, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %121 = load i32* %120, align... (idx: 0)        -155                          -354                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %121 = load i32* %120, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %121 = load i32* %120, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 37)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %121, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %121, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %121, i32* getelem... (idx: 0)        -154                          -363                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %121, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %121, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 38)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %126 = load i32* %125, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %126 = load i32* %125, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %126 = load i32* %125, align... (idx: 0)        -155                          -375                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %126 = load i32* %125, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %126 = load i32* %125, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 39)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %126, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %126, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %126, i32* getelem... (idx: 0)        -154                          -383                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %126, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %126, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 40)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %131 = load i32* %130, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %131 = load i32* %130, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %131 = load i32* %130, align... (idx: 0)        -155                          -395                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %131 = load i32* %130, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %131 = load i32* %130, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 41)
State: LEGUP_F_main_BB_AddRoundKeyexitipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %131, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %131, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %131, i32* getelem... (idx: 0)        -154                          -403                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %131, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %131, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 42)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %133 = add nsw i32 %i.010.i,... (idx: 0)        -245                          -245                          -243                          -225                          -55                           -23                           -33                           -23                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %133 = add nsw i32 %i.010.i,... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %133 = add nsw i32 %i.010.i,... (idx: 0) -> main_signed_add_32_0 (mux inputs: 25)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %134 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %134 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %139 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %139 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* getelementp... (idx: 0)        -149                          -409                          
  %139 = load i32* getelementp... (idx: 1)        -149                          -409                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %134 = load i32* getelementp... (idx: 0)        1                             0                             
  %139 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %134 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 16)
  %139 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 42)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %138 = load i32* %137, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %138 = load i32* %137, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %143 = load i32* %142, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %143 = load i32* %142, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load i32* %137, align... (idx: 0)        -155                          -415                          
  %143 = load i32* %142, align... (idx: 1)        -155                          -414                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %138 = load i32* %137, align... (idx: 0)        0                             1                             
  %143 = load i32* %142, align... (idx: 1)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %143 = load i32* %142, align... (idx: 1) -> main_mem_dual_port_0 (mux inputs: 17)
  %138 = load i32* %137, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 43)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep134 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep136 = add i32 %gep134, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep139 = add i32 %gep_int13... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep141 = add i32 %gep139, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep134 = add i32 %gep_int13... (idx: 0)        -249                          -239                          -239                          -219                          -49                           -19                           -29                           -19                           
  %gep136 = add i32 %gep134, %... (idx: 1)        -249                          -239                          -239                          -219                          -49                           -19                           -29                           -19                           
  %gep139 = add i32 %gep_int13... (idx: 2)        -249                          -239                          -239                          -219                          -49                           -19                           -29                           -19                           
  %gep141 = add i32 %gep139, %... (idx: 3)        -249                          -239                          -239                          -219                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep134 = add i32 %gep_int13... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep136 = add i32 %gep134, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep139 = add i32 %gep_int13... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep141 = add i32 %gep139, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep134 = add i32 %gep_int13... (idx: 0) -> main_signed_add_32_0 (mux inputs: 27)
  %gep136 = add i32 %gep134, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 26)
  %gep139 = add i32 %gep_int13... (idx: 2) -> main_signed_add_32_2 (mux inputs: 26)
  %gep141 = add i32 %gep139, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 24)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %144 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %144 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* getelementp... (idx: 0)        -159                          -419                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %144 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %144 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 43)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %143, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %143, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %143, i32* getelem... (idx: 0)        -163                          -423                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %143, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %143, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 44)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %149 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %149 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %149 = load i32* getelementp... (idx: 0)        -159                          -429                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %149 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %149 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 44)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %148 = load i32* %147, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %148 = load i32* %147, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* %147, align... (idx: 0)        -165                          -435                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %148 = load i32* %147, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %148 = load i32* %147, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 45)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep144 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep146 = add i32 %gep144, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep144 = add i32 %gep_int14... (idx: 0)        -269                          -259                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep146 = add i32 %gep144, %... (idx: 1)        -269                          -259                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep144 = add i32 %gep_int14... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep146 = add i32 %gep144, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep144 = add i32 %gep_int14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 29)
  %gep146 = add i32 %gep144, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 28)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %148, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %148, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %148, i32* getelem... (idx: 0)        -164                          -443                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %148, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %148, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 46)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep149 = add i32 %gep_int14... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep151 = add i32 %gep149, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep149 = add i32 %gep_int14... (idx: 0)        -289                          -279                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep151 = add i32 %gep149, %... (idx: 1)        -289                          -279                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep149 = add i32 %gep_int14... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep151 = add i32 %gep149, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep149 = add i32 %gep_int14... (idx: 0) -> main_signed_add_32_0 (mux inputs: 31)
  %gep151 = add i32 %gep149, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 30)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %153 = load i32* %152, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %153 = load i32* %152, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %154 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %154 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %153 = load i32* %152, align... (idx: 0)        -165                          -455                          
  %154 = load i32* getelementp... (idx: 1)        -159                          -449                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %153 = load i32* %152, align... (idx: 0)        1                             0                             
  %154 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %153 = load i32* %152, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 18)
  %154 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 46)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %159 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %159 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load i32* getelementp... (idx: 0)        -169                          -449                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %159 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %159 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 46)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %153, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %153, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %138, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %138, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %153, i32* getelem... (idx: 0)        -174                          -453                          
  store i32 %138, i32* getelem... (idx: 1)        -174                          -453                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %153, i32* getelem... (idx: 0)        1                             0                             
  store i32 %138, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %153, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 19)
  store i32 %138, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 47)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %158 = load i32* %157, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %158 = load i32* %157, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %158 = load i32* %157, align... (idx: 0)        -185                          -464                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %158 = load i32* %157, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %158 = load i32* %157, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 48)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep154 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep156 = add i32 %gep154, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep154 = add i32 %gep_int15... (idx: 0)        -309                          -299                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep156 = add i32 %gep154, %... (idx: 1)        -309                          -299                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep154 = add i32 %gep_int15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep156 = add i32 %gep154, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep154 = add i32 %gep_int15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 33)
  %gep156 = add i32 %gep154, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 32)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %163 = load i32* %162, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %163 = load i32* %162, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %164 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %163 = load i32* %162, align... (idx: 0)        -185                          -475                          
  %164 = load i32* getelementp... (idx: 1)        -179                          -469                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %163 = load i32* %162, align... (idx: 0)        1                             0                             
  %164 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %163 = load i32* %162, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 20)
  %164 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 48)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep159 = add i32 %gep_int15... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep161 = add i32 %gep159, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep159 = add i32 %gep_int15... (idx: 0)        -329                          -319                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep161 = add i32 %gep159, %... (idx: 1)        -329                          -319                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep159 = add i32 %gep_int15... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep161 = add i32 %gep159, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep159 = add i32 %gep_int15... (idx: 0) -> main_signed_add_32_0 (mux inputs: 35)
  %gep161 = add i32 %gep159, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 34)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %169 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %169 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* getelementp... (idx: 0)        -189                          -469                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %169 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %169 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 48)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %163, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %163, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %158, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %158, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %163, i32* getelem... (idx: 0)        -194                          -473                          
  store i32 %158, i32* getelem... (idx: 1)        -194                          -473                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %163, i32* getelem... (idx: 0)        1                             0                             
  store i32 %158, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %163, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 21)
  store i32 %158, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 49)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %168 = load i32* %167, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %168 = load i32* %167, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load i32* %167, align... (idx: 0)        -205                          -485                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %168 = load i32* %167, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %168 = load i32* %167, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 50)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep164 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep166 = add i32 %gep164, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep164 = add i32 %gep_int16... (idx: 0)        -349                          -339                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep166 = add i32 %gep164, %... (idx: 1)        -349                          -339                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep164 = add i32 %gep_int16... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep166 = add i32 %gep164, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep164 = add i32 %gep_int16... (idx: 0) -> main_signed_add_32_0 (mux inputs: 37)
  %gep166 = add i32 %gep164, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 36)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %173 = load i32* %172, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %173 = load i32* %172, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %174 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %174 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %173 = load i32* %172, align... (idx: 0)        -205                          -495                          
  %174 = load i32* getelementp... (idx: 1)        -199                          -489                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %173 = load i32* %172, align... (idx: 0)        1                             0                             
  %174 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %173 = load i32* %172, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 22)
  %174 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 50)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep169 = add i32 %gep_int16... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep171 = add i32 %gep169, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep169 = add i32 %gep_int16... (idx: 0)        -369                          -359                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep171 = add i32 %gep169, %... (idx: 1)        -369                          -359                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep169 = add i32 %gep_int16... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep171 = add i32 %gep169, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep169 = add i32 %gep_int16... (idx: 0) -> main_signed_add_32_0 (mux inputs: 39)
  %gep171 = add i32 %gep169, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 38)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %179 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %179 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %179 = load i32* getelementp... (idx: 0)        -209                          -489                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %179 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %179 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 50)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %173, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %173, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %168, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %168, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %173, i32* getelem... (idx: 0)        -214                          -493                          
  store i32 %168, i32* getelem... (idx: 1)        -214                          -493                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %173, i32* getelem... (idx: 0)        1                             0                             
  store i32 %168, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %173, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 23)
  store i32 %168, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 51)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %178 = load i32* %177, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %178 = load i32* %177, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %178 = load i32* %177, align... (idx: 0)        -225                          -505                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %178 = load i32* %177, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %178 = load i32* %177, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 52)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep174 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep176 = add i32 %gep174, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep174 = add i32 %gep_int17... (idx: 0)        -389                          -379                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep176 = add i32 %gep174, %... (idx: 1)        -389                          -379                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep174 = add i32 %gep_int17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep176 = add i32 %gep174, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep174 = add i32 %gep_int17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 41)
  %gep176 = add i32 %gep174, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 40)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %183 = load i32* %182, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %183 = load i32* %182, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %184 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %184 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %183 = load i32* %182, align... (idx: 0)        -225                          -515                          
  %184 = load i32* getelementp... (idx: 1)        -219                          -509                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %183 = load i32* %182, align... (idx: 0)        1                             0                             
  %184 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %183 = load i32* %182, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 24)
  %184 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 52)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep179 = add i32 %gep_int17... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep181 = add i32 %gep179, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep179 = add i32 %gep_int17... (idx: 0)        -409                          -399                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep181 = add i32 %gep179, %... (idx: 1)        -409                          -399                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep179 = add i32 %gep_int17... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep181 = add i32 %gep179, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep179 = add i32 %gep_int17... (idx: 0) -> main_signed_add_32_0 (mux inputs: 43)
  %gep181 = add i32 %gep179, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 42)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %183, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %183, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %183, i32* getelem... (idx: 0)        -234                          -513                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %183, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %183, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 53)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %188 = load i32* %187, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %189 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %189 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %188 = load i32* %187, align... (idx: 0)        -235                          -525                          
  %189 = load i32* getelementp... (idx: 1)        -229                          -519                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %188 = load i32* %187, align... (idx: 0)        1                             0                             
  %189 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %188 = load i32* %187, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 25)
  %189 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 53)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep184 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep186 = add i32 %gep184, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep184 = add i32 %gep_int18... (idx: 0)        -429                          -419                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep186 = add i32 %gep184, %... (idx: 1)        -429                          -419                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep184 = add i32 %gep_int18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep186 = add i32 %gep184, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep184 = add i32 %gep_int18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 45)
  %gep186 = add i32 %gep184, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 44)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %188, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %188, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %188, i32* getelem... (idx: 0)        -244                          -523                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %188, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %188, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 54)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %193 = load i32* %192, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %193 = load i32* %192, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %194 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %194 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %193 = load i32* %192, align... (idx: 0)        -245                          -535                          
  %194 = load i32* getelementp... (idx: 1)        -239                          -529                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %193 = load i32* %192, align... (idx: 0)        1                             0                             
  %194 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %193 = load i32* %192, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 26)
  %194 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 54)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep189 = add i32 %gep_int18... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep191 = add i32 %gep189, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep189 = add i32 %gep_int18... (idx: 0)        -449                          -439                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep191 = add i32 %gep189, %... (idx: 1)        -449                          -439                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep189 = add i32 %gep_int18... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep191 = add i32 %gep189, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep189 = add i32 %gep_int18... (idx: 0) -> main_signed_add_32_0 (mux inputs: 47)
  %gep191 = add i32 %gep189, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 46)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %193, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %193, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %178, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %178, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %193, i32* getelem... (idx: 0)        -254                          -533                          
  store i32 %178, i32* getelem... (idx: 1)        -254                          -533                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %193, i32* getelem... (idx: 0)        1                             0                             
  store i32 %178, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %193, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 27)
  store i32 %178, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 55)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %198 = load i32* %197, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %198 = load i32* %197, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %199 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %199 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %198 = load i32* %197, align... (idx: 0)        -265                          -545                          
  %199 = load i32* getelementp... (idx: 1)        -259                          -539                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %198 = load i32* %197, align... (idx: 0)        1                             0                             
  %199 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %198 = load i32* %197, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 28)
  %199 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 55)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep194 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep196 = add i32 %gep194, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep194 = add i32 %gep_int19... (idx: 0)        -469                          -459                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep196 = add i32 %gep194, %... (idx: 1)        -469                          -459                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep194 = add i32 %gep_int19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep196 = add i32 %gep194, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep194 = add i32 %gep_int19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 49)
  %gep196 = add i32 %gep194, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 48)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %198, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %198, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %198, i32* getelem... (idx: 0)        -274                          -543                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %198, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %198, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 56)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %203 = load i32* %202, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %203 = load i32* %202, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %204 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %204 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %203 = load i32* %202, align... (idx: 0)        -275                          -555                          
  %204 = load i32* getelementp... (idx: 1)        -269                          -549                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %203 = load i32* %202, align... (idx: 0)        1                             0                             
  %204 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %203 = load i32* %202, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 29)
  %204 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 56)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep199 = add i32 %gep_int19... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep201 = add i32 %gep199, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep199 = add i32 %gep_int19... (idx: 0)        -489                          -479                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep201 = add i32 %gep199, %... (idx: 1)        -489                          -479                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep199 = add i32 %gep_int19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep201 = add i32 %gep199, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep199 = add i32 %gep_int19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 51)
  %gep201 = add i32 %gep199, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 50)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %203, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %203, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %203, i32* getelem... (idx: 0)        -284                          -553                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %203, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %203, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 57)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %208 = load i32* %207, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %208 = load i32* %207, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %209 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %209 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %208 = load i32* %207, align... (idx: 0)        -285                          -565                          
  %209 = load i32* getelementp... (idx: 1)        -279                          -559                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %208 = load i32* %207, align... (idx: 0)        1                             0                             
  %209 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %208 = load i32* %207, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 30)
  %209 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 57)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep204 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep206 = add i32 %gep204, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep204 = add i32 %gep_int20... (idx: 0)        -509                          -499                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep206 = add i32 %gep204, %... (idx: 1)        -509                          -499                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep204 = add i32 %gep_int20... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep206 = add i32 %gep204, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep204 = add i32 %gep_int20... (idx: 0) -> main_signed_add_32_0 (mux inputs: 53)
  %gep206 = add i32 %gep204, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 52)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %208, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %208, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %208, i32* getelem... (idx: 0)        -294                          -563                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %208, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %208, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 58)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %213 = load i32* %212, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %213 = load i32* %212, align... (idx: 0)        -295                          -575                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %213 = load i32* %212, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %213 = load i32* %212, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 59)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep209 = add i32 %gep_int20... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep211 = add i32 %gep209, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep209 = add i32 %gep_int20... (idx: 0)        -529                          -519                          -259                          -239                          -49                           -19                           -29                           -19                           
  %gep211 = add i32 %gep209, %... (idx: 1)        -529                          -519                          -259                          -239                          -49                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep209 = add i32 %gep_int20... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep211 = add i32 %gep209, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep209 = add i32 %gep_int20... (idx: 0) -> main_signed_add_32_0 (mux inputs: 55)
  %gep211 = add i32 %gep209, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 54)
State: LEGUP_F_main_BB_AddRoundKeyexiti
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %213, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %213, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %213, i32* getelem... (idx: 0)        -294                          -583                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %213, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %213, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 60)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_0
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_1
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_2
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_3
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_4
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_5
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_6
  %214 = add nsw i32 %j.02.i2.... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep219 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep226 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep233 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %214 = add nsw i32 %j.02.i2.... (idx: 0)        -545                          -534                          -254                          -234                          -44                           -14                           -24                           -14                           
  %gep219 = add i32 %gep_int21... (idx: 1)        -545                          -535                          -254                          -234                          -44                           -14                           -24                           -14                           
  %gep226 = add i32 %gep_int22... (idx: 2)        -544                          -535                          -255                          -234                          -44                           -14                           -24                           -14                           
  %gep233 = add i32 %gep_int23... (idx: 3)        -544                          -534                          -255                          -235                          -44                           -14                           -24                           -14                           
  %239 = add nsw i32 %j.02.i2.... (idx: 4)        -555                          -545                          -264                          -245                          -55                           -24                           -34                           -24                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %214 = add nsw i32 %j.02.i2.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep219 = add i32 %gep_int21... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep226 = add i32 %gep_int22... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep233 = add i32 %gep_int23... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %239 = add nsw i32 %j.02.i2.... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %214 = add nsw i32 %j.02.i2.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 56)
  %gep219 = add i32 %gep_int21... (idx: 1) -> main_signed_add_32_1 (mux inputs: 55)
  %gep226 = add i32 %gep_int22... (idx: 2) -> main_signed_add_32_2 (mux inputs: 27)
  %gep233 = add i32 %gep_int23... (idx: 3) -> main_signed_add_32_3 (mux inputs: 25)
  %239 = add nsw i32 %j.02.i2.... (idx: 4) -> main_signed_add_32_4 (mux inputs: 6)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %219 = load i32* %218, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %219 = load i32* %218, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %219 = load i32* %218, align... (idx: 0)        -295                          -595                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %219 = load i32* %218, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %219 = load i32* %218, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 61)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep217 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep224 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep231 = add i32 %gep_int22... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep238 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep217 = add i32 %gep_int21... (idx: 0)        -557                          -547                          -267                          -247                          -57                           -17                           -27                           -17                           
  %gep224 = add i32 %gep_int22... (idx: 1)        -557                          -547                          -267                          -247                          -57                           -17                           -27                           -17                           
  %gep231 = add i32 %gep_int22... (idx: 2)        -557                          -547                          -267                          -247                          -57                           -17                           -27                           -17                           
  %gep238 = add i32 %gep_int23... (idx: 3)        -557                          -547                          -267                          -247                          -57                           -17                           -27                           -17                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep217 = add i32 %gep_int21... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep224 = add i32 %gep_int22... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep231 = add i32 %gep_int22... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep238 = add i32 %gep_int23... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep217 = add i32 %gep_int21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 58)
  %gep224 = add i32 %gep_int22... (idx: 1) -> main_signed_add_32_1 (mux inputs: 57)
  %gep231 = add i32 %gep_int22... (idx: 2) -> main_signed_add_32_2 (mux inputs: 29)
  %gep238 = add i32 %gep_int23... (idx: 3) -> main_signed_add_32_3 (mux inputs: 27)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %216 = load i32* %215, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %216 = load i32* %215, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %216 = load i32* %215, align... (idx: 0)        -295                          -605                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %216 = load i32* %215, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %216 = load i32* %215, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 62)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep214 = add i32 %gep_int21... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep221 = add i32 %gep219, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep228 = add i32 %gep226, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep235 = add i32 %gep233, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep214 = add i32 %gep_int21... (idx: 0)        -579                          -569                          -289                          -269                          -59                           -19                           -29                           -19                           
  %gep221 = add i32 %gep219, %... (idx: 1)        -579                          -569                          -289                          -269                          -59                           -19                           -29                           -19                           
  %gep228 = add i32 %gep226, %... (idx: 2)        -579                          -569                          -289                          -269                          -59                           -19                           -29                           -19                           
  %gep235 = add i32 %gep233, %... (idx: 3)        -579                          -569                          -289                          -269                          -59                           -19                           -29                           -19                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep214 = add i32 %gep_int21... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep221 = add i32 %gep219, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep228 = add i32 %gep226, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep235 = add i32 %gep233, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep214 = add i32 %gep_int21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 60)
  %gep221 = add i32 %gep219, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 59)
  %gep228 = add i32 %gep226, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 31)
  %gep235 = add i32 %gep233, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 29)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %220, i32* %218, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %220, i32* %218, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %220, i32* %218, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %220, i32* %218, a... (idx: 0)        -300                          -615                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %220, i32* %218, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %220, i32* %218, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 63)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %222 = load i32* %221, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %222 = load i32* %221, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %225 = load i32* %224, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %225 = load i32* %224, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %222 = load i32* %221, align... (idx: 0)        -295                          -625                          
  %225 = load i32* %224, align... (idx: 1)        -295                          -625                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %222 = load i32* %221, align... (idx: 0)        1                             0                             
  %225 = load i32* %224, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %222 = load i32* %221, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 31)
  %225 = load i32* %224, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 64)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %226, i32* %224, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %226, i32* %224, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %226, i32* %224, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %226, i32* %224, a... (idx: 0)        -310                          -635                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %226, i32* %224, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %226, i32* %224, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 65)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %228 = load i32* %227, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %228 = load i32* %227, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %231 = load i32* %230, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %231 = load i32* %230, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %228 = load i32* %227, align... (idx: 0)        -305                          -645                          
  %231 = load i32* %230, align... (idx: 1)        -305                          -645                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %228 = load i32* %227, align... (idx: 0)        1                             0                             
  %231 = load i32* %230, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %228 = load i32* %227, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 32)
  %231 = load i32* %230, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 66)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %232, i32* %230, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %232, i32* %230, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %232, i32* %230, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %232, i32* %230, a... (idx: 0)        -320                          -655                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %232, i32* %230, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %232, i32* %230, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 67)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %234 = load i32* %233, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %234 = load i32* %233, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %237 = load i32* %236, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %237 = load i32* %236, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %234 = load i32* %233, align... (idx: 0)        -315                          -665                          
  %237 = load i32* %236, align... (idx: 1)        -315                          -665                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %234 = load i32* %233, align... (idx: 0)        1                             0                             
  %237 = load i32* %236, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %234 = load i32* %233, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 33)
  %237 = load i32* %236, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 68)
State: LEGUP_F_main_BB_AddRoundKeyexit_crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %238, i32* %236, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %238, i32* %236, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %238, i32* %236, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %238, i32* %236, a... (idx: 0)        -330                          -675                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %238, i32* %236, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %238, i32* %236, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 69)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_0
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_1
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_2
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_3
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_4
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_5
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_6
  %240 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep246 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep253 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_7
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_0
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_1
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_2
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_3
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_4
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_5
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_6
  %255 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep260 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_7
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_0
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_1
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_2
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_3
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_4
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_5
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_6
  %261 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %240 = add nsw i32 %j.11.i3.... (idx: 0)        -595                          -584                          -304                          -284                          -54                           -14                           -24                           -14                           
  %gep246 = add i32 %gep_int24... (idx: 1)        -595                          -585                          -304                          -284                          -54                           -14                           -24                           -14                           
  %249 = add nsw i32 %j.11.i3.... (idx: 2)        -605                          -595                          -314                          -295                          -65                           -24                           -34                           -24                           
  %gep253 = add i32 %gep_int25... (idx: 3)        -594                          -585                          -305                          -284                          -54                           -14                           -24                           -14                           
  %255 = add nsw i32 %j.11.i3.... (idx: 4)        -594                          -584                          -305                          -284                          -54                           -14                           -25                           -14                           
  %gep260 = add i32 %gep_int25... (idx: 5)        -594                          -584                          -305                          -285                          -54                           -14                           -24                           -14                           
  %261 = add nsw i32 %j.11.i3.... (idx: 6)        -594                          -584                          -304                          -285                          -55                           -14                           -24                           -14                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %240 = add nsw i32 %j.11.i3.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep246 = add i32 %gep_int24... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %249 = add nsw i32 %j.11.i3.... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             1                             
  %gep253 = add i32 %gep_int25... (idx: 3)        0                             0                             1                             0                             0                             0                             0                             0                             
  %255 = add nsw i32 %j.11.i3.... (idx: 4)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep260 = add i32 %gep_int25... (idx: 5)        0                             0                             0                             1                             0                             0                             0                             0                             
  %261 = add nsw i32 %j.11.i3.... (idx: 6)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %240 = add nsw i32 %j.11.i3.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 61)
  %gep246 = add i32 %gep_int24... (idx: 1) -> main_signed_add_32_1 (mux inputs: 60)
  %gep253 = add i32 %gep_int25... (idx: 3) -> main_signed_add_32_2 (mux inputs: 32)
  %gep260 = add i32 %gep_int25... (idx: 5) -> main_signed_add_32_3 (mux inputs: 30)
  %261 = add nsw i32 %j.11.i3.... (idx: 6) -> main_signed_add_32_4 (mux inputs: 7)
  %255 = add nsw i32 %j.11.i3.... (idx: 4) -> main_signed_add_32_6 (mux inputs: 4)
  %249 = add nsw i32 %j.11.i3.... (idx: 2) -> main_signed_add_32_7 (mux inputs: 3)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %245 = load i32* %244, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %245 = load i32* %244, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %245 = load i32* %244, align... (idx: 0)        -325                          -685                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %245 = load i32* %244, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %245 = load i32* %244, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 70)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep244 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep244 = add i32 %gep_int24... (idx: 0)        -607                          -597                          -317                          -297                          -67                           -17                           -37                           -27                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep244 = add i32 %gep_int24... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep244 = add i32 %gep_int24... (idx: 0) -> main_signed_add_32_0 (mux inputs: 63)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %242 = load i32* %241, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %242 = load i32* %241, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %242 = load i32* %241, align... (idx: 0)        -325                          -695                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %242 = load i32* %241, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %242 = load i32* %241, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 71)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep241 = add i32 %gep_int23... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep248 = add i32 %gep246, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep251 = add i32 %gep_int24... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep255 = add i32 %gep253, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep258 = add i32 %gep_int25... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep262 = add i32 %gep260, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep265 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep241 = add i32 %gep_int23... (idx: 0)        -629                          -599                          -319                          -299                          -69                           -19                           -39                           -29                           
  %gep248 = add i32 %gep246, %... (idx: 1)        -629                          -599                          -319                          -299                          -69                           -19                           -39                           -29                           
  %gep251 = add i32 %gep_int24... (idx: 2)        -627                          -597                          -317                          -297                          -67                           -17                           -37                           -27                           
  %gep255 = add i32 %gep253, %... (idx: 3)        -629                          -599                          -319                          -299                          -69                           -19                           -39                           -29                           
  %gep258 = add i32 %gep_int25... (idx: 4)        -627                          -597                          -317                          -297                          -67                           -17                           -37                           -27                           
  %gep262 = add i32 %gep260, %... (idx: 5)        -629                          -599                          -319                          -299                          -69                           -19                           -39                           -29                           
  %gep265 = add i32 %gep_int26... (idx: 6)        -627                          -597                          -317                          -297                          -67                           -17                           -37                           -27                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep241 = add i32 %gep_int23... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep248 = add i32 %gep246, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep251 = add i32 %gep_int24... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep255 = add i32 %gep253, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep258 = add i32 %gep_int25... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep262 = add i32 %gep260, %... (idx: 5)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep265 = add i32 %gep_int26... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep241 = add i32 %gep_int23... (idx: 0) -> main_signed_add_32_0 (mux inputs: 65)
  %gep248 = add i32 %gep246, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 62)
  %gep251 = add i32 %gep_int24... (idx: 2) -> main_signed_add_32_2 (mux inputs: 34)
  %gep255 = add i32 %gep253, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 32)
  %gep258 = add i32 %gep_int25... (idx: 4) -> main_signed_add_32_4 (mux inputs: 9)
  %gep262 = add i32 %gep260, %... (idx: 5) -> main_signed_add_32_6 (mux inputs: 6)
  %gep265 = add i32 %gep_int26... (idx: 6) -> main_signed_add_32_7 (mux inputs: 5)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %246, i32* %244, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %246, i32* %244, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %246, i32* %244, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %246, i32* %244, a... (idx: 0)        -330                          -705                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %246, i32* %244, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %246, i32* %244, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 72)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %248 = load i32* %247, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %248 = load i32* %247, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %251 = load i32* %250, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %251 = load i32* %250, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %248 = load i32* %247, align... (idx: 0)        -325                          -715                          
  %251 = load i32* %250, align... (idx: 1)        -325                          -715                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %248 = load i32* %247, align... (idx: 0)        1                             0                             
  %251 = load i32* %250, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %248 = load i32* %247, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 34)
  %251 = load i32* %250, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 73)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %252, i32* %250, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %252, i32* %250, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %252, i32* %250, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %252, i32* %250, a... (idx: 0)        -340                          -725                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %252, i32* %250, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %252, i32* %250, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 74)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %254 = load i32* %253, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %254 = load i32* %253, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %257 = load i32* %256, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %257 = load i32* %256, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %254 = load i32* %253, align... (idx: 0)        -335                          -735                          
  %257 = load i32* %256, align... (idx: 1)        -335                          -735                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %254 = load i32* %253, align... (idx: 0)        1                             0                             
  %257 = load i32* %256, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %254 = load i32* %253, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 35)
  %257 = load i32* %256, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 75)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %258, i32* %256, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %258, i32* %256, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %258, i32* %256, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %258, i32* %256, a... (idx: 0)        -350                          -745                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %258, i32* %256, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %258, i32* %256, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 76)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %260 = load i32* %259, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %260 = load i32* %259, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %263 = load i32* %262, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %263 = load i32* %262, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %260 = load i32* %259, align... (idx: 0)        -345                          -755                          
  %263 = load i32* %262, align... (idx: 1)        -345                          -755                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %260 = load i32* %259, align... (idx: 0)        1                             0                             
  %263 = load i32* %262, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %260 = load i32* %259, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 36)
  %263 = load i32* %262, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 77)
State: LEGUP_F_main_BB_preheaderi4i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %264, i32* %262, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %264, i32* %262, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %264, i32* %262, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %264, i32* %262, a... (idx: 0)        -360                          -765                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %264, i32* %262, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %264, i32* %262, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 78)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %267 = load i32* %266, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %267 = load i32* %266, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %267 = load i32* %266, align... (idx: 0)        -355                          -775                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %267 = load i32* %266, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %267 = load i32* %266, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 79)
State: LEGUP_F_main_BB_lrphi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep268 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep268 = add i32 %gep_int26... (idx: 0)        -647                          -617                          -337                          -317                          -87                           -17                           -57                           -47                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep268 = add i32 %gep_int26... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep268 = add i32 %gep_int26... (idx: 0) -> main_signed_add_32_0 (mux inputs: 67)
State: LEGUP_F_main_BB__269
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre.i = load i32* %266, al... can share an output register with another operation already assigned to main_mem_dual_port_0
  %.pre.i = load i32* %266, al... hey can share an input with another operation already assigned to main_mem_dual_port_1
  %.pre.i = load i32* %266, al... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre.i = load i32* %266, al... (idx: 0)        -355                          -780                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre.i = load i32* %266, al... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre.i = load i32* %266, al... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 79)
State: LEGUP_F_main_BB__271
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %274 = add nsw i32 %i.19.i, ... can share an output register with another operation already assigned to main_signed_add_32_0
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %274 = add nsw i32 %i.19.i, ... (idx: 0)        -665                          -625                          -344                          -325                          -95                           -24                           -64                           -54                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %274 = add nsw i32 %i.19.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %274 = add nsw i32 %i.19.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 68)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %283 = add nsw i32 %i.28.i, ... (idx: 0)        -685                          -625                          -344                          -325                          -95                           -24                           -64                           -54                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %283 = add nsw i32 %i.28.i, ... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %283 = add nsw i32 %i.28.i, ... (idx: 0) -> main_signed_add_32_0 (mux inputs: 69)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: encryptout_enc_statemt_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_encryptout_enc_statemt_local_mem_dual_port_0
  %279 = load i32* %278, align... (idx: 0)        95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_encryptout_enc_statemt_local_mem_dual_port_0
  %279 = load i32* %278, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %279 = load i32* %278, align... (idx: 0) -> main_encryptout_enc_statemt_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %277 = load i32* %276, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %277 = load i32* %276, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %277 = load i32* %276, align... (idx: 0)        -355                          -785                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %277 = load i32* %276, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %277 = load i32* %276, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 80)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep271 = add i32 %gep_int26... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep274 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep271 = add i32 %gep_int26... (idx: 0)        -687                          -617                          -337                          -317                          -87                           -17                           -57                           -47                           
  %gep274 = add i32 %gep_int27... (idx: 1)        -689                          -619                          -339                          -319                          -89                           -19                           -59                           -49                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep271 = add i32 %gep_int26... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep274 = add i32 %gep_int27... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep271 = add i32 %gep_int26... (idx: 0) -> main_signed_add_32_0 (mux inputs: 71)
  %gep274 = add i32 %gep_int27... (idx: 1) -> main_signed_add_32_1 (mux inputs: 64)
State: LEGUP_F_main_BB_preheaderi
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %282 = add nsw i32 %281, %27... (idx: 0)        -720                          -650                          -350                          -330                          -100                          -30                           -70                           -60                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %282 = add nsw i32 %281, %27... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %282 = add nsw i32 %281, %27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 73)
State: LEGUP_F_main_BB__285
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_0
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_1
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_2
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_3
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_4
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_5
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_6
  %286 = add nsw i32 %j.02.i.i... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep282 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep289 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep296 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %286 = add nsw i32 %j.02.i.i... (idx: 0)        -725                          -634                          -334                          -314                          -84                           -14                           -54                           -44                           
  %gep282 = add i32 %gep_int28... (idx: 1)        -725                          -635                          -334                          -314                          -84                           -14                           -54                           -44                           
  %gep289 = add i32 %gep_int28... (idx: 2)        -724                          -635                          -335                          -314                          -84                           -14                           -54                           -44                           
  %gep296 = add i32 %gep_int29... (idx: 3)        -724                          -634                          -335                          -315                          -84                           -14                           -54                           -44                           
  %311 = add nsw i32 %j.02.i.i... (idx: 4)        -735                          -645                          -344                          -325                          -95                           -24                           -64                           -54                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %286 = add nsw i32 %j.02.i.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep282 = add i32 %gep_int28... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep289 = add i32 %gep_int28... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep296 = add i32 %gep_int29... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %311 = add nsw i32 %j.02.i.i... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %286 = add nsw i32 %j.02.i.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 74)
  %gep282 = add i32 %gep_int28... (idx: 1) -> main_signed_add_32_1 (mux inputs: 65)
  %gep289 = add i32 %gep_int28... (idx: 2) -> main_signed_add_32_2 (mux inputs: 35)
  %gep296 = add i32 %gep_int29... (idx: 3) -> main_signed_add_32_3 (mux inputs: 33)
  %311 = add nsw i32 %j.02.i.i... (idx: 4) -> main_signed_add_32_4 (mux inputs: 10)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %291 = load i32* %290, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %291 = load i32* %290, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %291 = load i32* %290, align... (idx: 0)        -355                          -795                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %291 = load i32* %290, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %291 = load i32* %290, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 81)
State: LEGUP_F_main_BB__285
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep280 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep287 = add i32 %gep_int28... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep294 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep301 = add i32 %gep_int29... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep280 = add i32 %gep_int27... (idx: 0)        -737                          -647                          -347                          -327                          -97                           -17                           -57                           -47                           
  %gep287 = add i32 %gep_int28... (idx: 1)        -737                          -647                          -347                          -327                          -97                           -17                           -57                           -47                           
  %gep294 = add i32 %gep_int29... (idx: 2)        -737                          -647                          -347                          -327                          -97                           -17                           -57                           -47                           
  %gep301 = add i32 %gep_int29... (idx: 3)        -737                          -647                          -347                          -327                          -97                           -17                           -57                           -47                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep280 = add i32 %gep_int27... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep287 = add i32 %gep_int28... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep294 = add i32 %gep_int29... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep301 = add i32 %gep_int29... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep280 = add i32 %gep_int27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 76)
  %gep287 = add i32 %gep_int28... (idx: 1) -> main_signed_add_32_1 (mux inputs: 67)
  %gep294 = add i32 %gep_int29... (idx: 2) -> main_signed_add_32_2 (mux inputs: 37)
  %gep301 = add i32 %gep_int29... (idx: 3) -> main_signed_add_32_3 (mux inputs: 35)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %288 = load i32* %287, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %288 = load i32* %287, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %288 = load i32* %287, align... (idx: 0)        -355                          -805                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %288 = load i32* %287, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %288 = load i32* %287, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 82)
State: LEGUP_F_main_BB__285
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep277 = add i32 %gep_int27... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep284 = add i32 %gep282, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep291 = add i32 %gep289, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep298 = add i32 %gep296, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep277 = add i32 %gep_int27... (idx: 0)        -759                          -669                          -369                          -349                          -99                           -19                           -59                           -49                           
  %gep284 = add i32 %gep282, %... (idx: 1)        -759                          -669                          -369                          -349                          -99                           -19                           -59                           -49                           
  %gep291 = add i32 %gep289, %... (idx: 2)        -759                          -669                          -369                          -349                          -99                           -19                           -59                           -49                           
  %gep298 = add i32 %gep296, %... (idx: 3)        -759                          -669                          -369                          -349                          -99                           -19                           -59                           -49                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep277 = add i32 %gep_int27... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep284 = add i32 %gep282, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep291 = add i32 %gep289, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep298 = add i32 %gep296, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep277 = add i32 %gep_int27... (idx: 0) -> main_signed_add_32_0 (mux inputs: 78)
  %gep284 = add i32 %gep282, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 69)
  %gep291 = add i32 %gep289, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 39)
  %gep298 = add i32 %gep296, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 37)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %292, i32* %290, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %292, i32* %290, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %292, i32* %290, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %292, i32* %290, a... (idx: 0)        -360                          -815                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %292, i32* %290, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %292, i32* %290, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 83)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %294 = load i32* %293, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %294 = load i32* %293, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %297 = load i32* %296, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %297 = load i32* %296, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %294 = load i32* %293, align... (idx: 0)        -355                          -825                          
  %297 = load i32* %296, align... (idx: 1)        -355                          -825                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %294 = load i32* %293, align... (idx: 0)        1                             0                             
  %297 = load i32* %296, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %294 = load i32* %293, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 37)
  %297 = load i32* %296, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 84)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %298, i32* %296, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %298, i32* %296, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %298, i32* %296, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %298, i32* %296, a... (idx: 0)        -370                          -835                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %298, i32* %296, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %298, i32* %296, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 85)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %300 = load i32* %299, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %300 = load i32* %299, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %303 = load i32* %302, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %303 = load i32* %302, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %300 = load i32* %299, align... (idx: 0)        -365                          -845                          
  %303 = load i32* %302, align... (idx: 1)        -365                          -845                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %300 = load i32* %299, align... (idx: 0)        1                             0                             
  %303 = load i32* %302, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %300 = load i32* %299, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 38)
  %303 = load i32* %302, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 86)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %304, i32* %302, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %304, i32* %302, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %304, i32* %302, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %304, i32* %302, a... (idx: 0)        -380                          -855                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %304, i32* %302, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %304, i32* %302, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 87)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %306 = load i32* %305, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %306 = load i32* %305, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %309 = load i32* %308, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %309 = load i32* %308, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %306 = load i32* %305, align... (idx: 0)        -375                          -865                          
  %309 = load i32* %308, align... (idx: 1)        -375                          -865                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %306 = load i32* %305, align... (idx: 0)        1                             0                             
  %309 = load i32* %308, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %306 = load i32* %305, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 39)
  %309 = load i32* %308, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 88)
State: LEGUP_F_main_BB__285
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %310, i32* %308, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %310, i32* %308, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %310, i32* %308, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %310, i32* %308, a... (idx: 0)        -390                          -875                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %310, i32* %308, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %310, i32* %308, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 89)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_0
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_1
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_2
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_3
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_4
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_5
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_6
  %312 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep309 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep316 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_7
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_0
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_1
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_2
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_3
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_4
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_5
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_6
  %327 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep323 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_7
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_0
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_1
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_2
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_3
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_4
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_5
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_6
  %333 = add nsw i32 %j.11.i.i... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %312 = add nsw i32 %j.11.i.i... (idx: 0)        -775                          -684                          -384                          -364                          -94                           -14                           -54                           -44                           
  %gep309 = add i32 %gep_int30... (idx: 1)        -775                          -685                          -384                          -364                          -94                           -14                           -54                           -44                           
  %321 = add nsw i32 %j.11.i.i... (idx: 2)        -785                          -695                          -394                          -375                          -105                          -24                           -64                           -54                           
  %gep316 = add i32 %gep_int31... (idx: 3)        -774                          -685                          -385                          -364                          -94                           -14                           -54                           -44                           
  %327 = add nsw i32 %j.11.i.i... (idx: 4)        -774                          -684                          -385                          -364                          -94                           -14                           -55                           -44                           
  %gep323 = add i32 %gep_int32... (idx: 5)        -774                          -684                          -385                          -365                          -94                           -14                           -54                           -44                           
  %333 = add nsw i32 %j.11.i.i... (idx: 6)        -774                          -684                          -384                          -365                          -95                           -14                           -54                           -44                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %312 = add nsw i32 %j.11.i.i... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep309 = add i32 %gep_int30... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %321 = add nsw i32 %j.11.i.i... (idx: 2)        0                             0                             0                             0                             0                             0                             0                             1                             
  %gep316 = add i32 %gep_int31... (idx: 3)        0                             0                             1                             0                             0                             0                             0                             0                             
  %327 = add nsw i32 %j.11.i.i... (idx: 4)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep323 = add i32 %gep_int32... (idx: 5)        0                             0                             0                             1                             0                             0                             0                             0                             
  %333 = add nsw i32 %j.11.i.i... (idx: 6)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %312 = add nsw i32 %j.11.i.i... (idx: 0) -> main_signed_add_32_0 (mux inputs: 79)
  %gep309 = add i32 %gep_int30... (idx: 1) -> main_signed_add_32_1 (mux inputs: 70)
  %gep316 = add i32 %gep_int31... (idx: 3) -> main_signed_add_32_2 (mux inputs: 40)
  %gep323 = add i32 %gep_int32... (idx: 5) -> main_signed_add_32_3 (mux inputs: 38)
  %333 = add nsw i32 %j.11.i.i... (idx: 6) -> main_signed_add_32_4 (mux inputs: 11)
  %327 = add nsw i32 %j.11.i.i... (idx: 4) -> main_signed_add_32_6 (mux inputs: 7)
  %321 = add nsw i32 %j.11.i.i... (idx: 2) -> main_signed_add_32_7 (mux inputs: 6)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %317 = load i32* %316, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %317 = load i32* %316, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %317 = load i32* %316, align... (idx: 0)        -385                          -885                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %317 = load i32* %316, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %317 = load i32* %316, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 90)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep307 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep307 = add i32 %gep_int30... (idx: 0)        -787                          -697                          -397                          -377                          -107                          -17                           -67                           -57                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep307 = add i32 %gep_int30... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep307 = add i32 %gep_int30... (idx: 0) -> main_signed_add_32_0 (mux inputs: 81)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %314 = load i32* %313, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %314 = load i32* %313, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %314 = load i32* %313, align... (idx: 0)        -385                          -895                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %314 = load i32* %313, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %314 = load i32* %313, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 91)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep304 = add i32 %gep_int30... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep311 = add i32 %gep309, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep314 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep318 = add i32 %gep316, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep321 = add i32 %gep_int31... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep325 = add i32 %gep323, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep328 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep304 = add i32 %gep_int30... (idx: 0)        -809                          -699                          -399                          -379                          -109                          -19                           -69                           -59                           
  %gep311 = add i32 %gep309, %... (idx: 1)        -809                          -699                          -399                          -379                          -109                          -19                           -69                           -59                           
  %gep314 = add i32 %gep_int31... (idx: 2)        -807                          -697                          -397                          -377                          -107                          -17                           -67                           -57                           
  %gep318 = add i32 %gep316, %... (idx: 3)        -809                          -699                          -399                          -379                          -109                          -19                           -69                           -59                           
  %gep321 = add i32 %gep_int31... (idx: 4)        -807                          -697                          -397                          -377                          -107                          -17                           -67                           -57                           
  %gep325 = add i32 %gep323, %... (idx: 5)        -809                          -699                          -399                          -379                          -109                          -19                           -69                           -59                           
  %gep328 = add i32 %gep_int32... (idx: 6)        -807                          -697                          -397                          -377                          -107                          -17                           -67                           -57                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep304 = add i32 %gep_int30... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep311 = add i32 %gep309, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep314 = add i32 %gep_int31... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep318 = add i32 %gep316, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep321 = add i32 %gep_int31... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep325 = add i32 %gep323, %... (idx: 5)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep328 = add i32 %gep_int32... (idx: 6)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep304 = add i32 %gep_int30... (idx: 0) -> main_signed_add_32_0 (mux inputs: 83)
  %gep311 = add i32 %gep309, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 72)
  %gep314 = add i32 %gep_int31... (idx: 2) -> main_signed_add_32_2 (mux inputs: 42)
  %gep318 = add i32 %gep316, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 40)
  %gep321 = add i32 %gep_int31... (idx: 4) -> main_signed_add_32_4 (mux inputs: 13)
  %gep325 = add i32 %gep323, %... (idx: 5) -> main_signed_add_32_6 (mux inputs: 9)
  %gep328 = add i32 %gep_int32... (idx: 6) -> main_signed_add_32_7 (mux inputs: 8)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %318, i32* %316, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %318, i32* %316, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %318, i32* %316, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %318, i32* %316, a... (idx: 0)        -390                          -905                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %318, i32* %316, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %318, i32* %316, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 92)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %320 = load i32* %319, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %320 = load i32* %319, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %323 = load i32* %322, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %323 = load i32* %322, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %320 = load i32* %319, align... (idx: 0)        -385                          -915                          
  %323 = load i32* %322, align... (idx: 1)        -385                          -915                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %320 = load i32* %319, align... (idx: 0)        1                             0                             
  %323 = load i32* %322, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %320 = load i32* %319, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 40)
  %323 = load i32* %322, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 93)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %324, i32* %322, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %324, i32* %322, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %324, i32* %322, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %324, i32* %322, a... (idx: 0)        -400                          -925                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %324, i32* %322, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %324, i32* %322, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 94)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %326 = load i32* %325, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %326 = load i32* %325, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %329 = load i32* %328, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %329 = load i32* %328, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %326 = load i32* %325, align... (idx: 0)        -395                          -935                          
  %329 = load i32* %328, align... (idx: 1)        -395                          -935                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %326 = load i32* %325, align... (idx: 0)        1                             0                             
  %329 = load i32* %328, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %326 = load i32* %325, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 41)
  %329 = load i32* %328, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 95)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %330, i32* %328, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %330, i32* %328, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %330, i32* %328, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %330, i32* %328, a... (idx: 0)        -410                          -945                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %330, i32* %328, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %330, i32* %328, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 96)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %332 = load i32* %331, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %332 = load i32* %331, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %335 = load i32* %334, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %335 = load i32* %334, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %332 = load i32* %331, align... (idx: 0)        -405                          -955                          
  %335 = load i32* %334, align... (idx: 1)        -405                          -955                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %332 = load i32* %331, align... (idx: 0)        1                             0                             
  %335 = load i32* %334, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %332 = load i32* %331, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %335 = load i32* %334, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 97)
State: LEGUP_F_main_BB_preheaderii4
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %336, i32* %334, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %336, i32* %334, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %336, i32* %334, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %336, i32* %334, a... (idx: 0)        -420                          -965                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %336, i32* %334, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %336, i32* %334, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %337 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %337 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %342 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %342 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %337 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %342 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %337 = load i32* getelementp... (idx: 0)        1                             0                             
  %342 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %337 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %342 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %347 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %347 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %352 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %352 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %347 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %352 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %347 = load i32* getelementp... (idx: 0)        1                             0                             
  %352 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %347 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %352 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %357 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %357 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %362 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %362 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %357 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %362 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %357 = load i32* getelementp... (idx: 0)        1                             0                             
  %362 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %357 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %362 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %341 = load i32* %340, align... (idx: 0)        95                            95                            
  %346 = load i32* %345, align... (idx: 1)        95                            95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %341 = load i32* %340, align... (idx: 0)        1                             0                             
  %346 = load i32* %345, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %341 = load i32* %340, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 1)
  %346 = load i32* %345, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 1)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %367 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %367 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %372 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %372 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %367 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %372 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %367 = load i32* getelementp... (idx: 0)        1                             0                             
  %372 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %367 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %372 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep331 = add i32 %gep_int32... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep333 = add i32 %gep331, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep336 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep338 = add i32 %gep336, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep331 = add i32 %gep_int32... (idx: 0)        -829                          -719                          -419                          -399                          -129                          -19                           -89                           -79                           
  %gep333 = add i32 %gep331, %... (idx: 1)        -829                          -719                          -419                          -399                          -129                          -19                           -89                           -79                           
  %gep336 = add i32 %gep_int33... (idx: 2)        -829                          -719                          -419                          -399                          -129                          -19                           -89                           -79                           
  %gep338 = add i32 %gep336, %... (idx: 3)        -829                          -719                          -419                          -399                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep331 = add i32 %gep_int32... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep333 = add i32 %gep331, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep336 = add i32 %gep_int33... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep338 = add i32 %gep336, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep331 = add i32 %gep_int32... (idx: 0) -> main_signed_add_32_0 (mux inputs: 85)
  %gep333 = add i32 %gep331, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 74)
  %gep336 = add i32 %gep_int33... (idx: 2) -> main_signed_add_32_2 (mux inputs: 44)
  %gep338 = add i32 %gep336, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 42)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %377 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %377 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %382 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %382 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %377 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %382 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %377 = load i32* getelementp... (idx: 0)        1                             0                             
  %382 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %377 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %382 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep341 = add i32 %gep_int33... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep343 = add i32 %gep341, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep346 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep348 = add i32 %gep346, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep341 = add i32 %gep_int33... (idx: 0)        -849                          -739                          -439                          -419                          -129                          -19                           -89                           -79                           
  %gep343 = add i32 %gep341, %... (idx: 1)        -849                          -739                          -439                          -419                          -129                          -19                           -89                           -79                           
  %gep346 = add i32 %gep_int34... (idx: 2)        -849                          -739                          -439                          -419                          -129                          -19                           -89                           -79                           
  %gep348 = add i32 %gep346, %... (idx: 3)        -849                          -739                          -439                          -419                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep341 = add i32 %gep_int33... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep343 = add i32 %gep341, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep346 = add i32 %gep_int34... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep348 = add i32 %gep346, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep341 = add i32 %gep_int33... (idx: 0) -> main_signed_add_32_0 (mux inputs: 87)
  %gep343 = add i32 %gep341, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 76)
  %gep346 = add i32 %gep_int34... (idx: 2) -> main_signed_add_32_2 (mux inputs: 46)
  %gep348 = add i32 %gep346, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 44)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %387 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %387 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %392 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %392 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %387 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %392 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %387 = load i32* getelementp... (idx: 0)        1                             0                             
  %392 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %387 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %392 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep351 = add i32 %gep_int34... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep353 = add i32 %gep351, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep356 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep358 = add i32 %gep356, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep351 = add i32 %gep_int34... (idx: 0)        -869                          -759                          -459                          -439                          -129                          -19                           -89                           -79                           
  %gep353 = add i32 %gep351, %... (idx: 1)        -869                          -759                          -459                          -439                          -129                          -19                           -89                           -79                           
  %gep356 = add i32 %gep_int35... (idx: 2)        -869                          -759                          -459                          -439                          -129                          -19                           -89                           -79                           
  %gep358 = add i32 %gep356, %... (idx: 3)        -869                          -759                          -459                          -439                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep351 = add i32 %gep_int34... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep353 = add i32 %gep351, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep356 = add i32 %gep_int35... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep358 = add i32 %gep356, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep351 = add i32 %gep_int34... (idx: 0) -> main_signed_add_32_0 (mux inputs: 89)
  %gep353 = add i32 %gep351, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 78)
  %gep356 = add i32 %gep_int35... (idx: 2) -> main_signed_add_32_2 (mux inputs: 48)
  %gep358 = add i32 %gep356, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 46)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %397 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %397 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %402 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %402 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %397 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %402 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %397 = load i32* getelementp... (idx: 0)        1                             0                             
  %402 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %397 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %402 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep361 = add i32 %gep_int35... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep363 = add i32 %gep361, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep366 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep368 = add i32 %gep366, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep361 = add i32 %gep_int35... (idx: 0)        -889                          -779                          -479                          -459                          -129                          -19                           -89                           -79                           
  %gep363 = add i32 %gep361, %... (idx: 1)        -889                          -779                          -479                          -459                          -129                          -19                           -89                           -79                           
  %gep366 = add i32 %gep_int36... (idx: 2)        -889                          -779                          -479                          -459                          -129                          -19                           -89                           -79                           
  %gep368 = add i32 %gep366, %... (idx: 3)        -889                          -779                          -479                          -459                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep361 = add i32 %gep_int35... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep363 = add i32 %gep361, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep366 = add i32 %gep_int36... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep368 = add i32 %gep366, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep361 = add i32 %gep_int35... (idx: 0) -> main_signed_add_32_0 (mux inputs: 91)
  %gep363 = add i32 %gep361, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 80)
  %gep366 = add i32 %gep_int36... (idx: 2) -> main_signed_add_32_2 (mux inputs: 50)
  %gep368 = add i32 %gep366, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 48)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %407 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %407 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %412 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %412 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %407 = load i32* getelementp... (idx: 0)        -409                          -969                          
  %412 = load i32* getelementp... (idx: 1)        -409                          -969                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %407 = load i32* getelementp... (idx: 0)        1                             0                             
  %412 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %407 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 42)
  %412 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep371 = add i32 %gep_int36... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep373 = add i32 %gep371, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep376 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep378 = add i32 %gep376, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep371 = add i32 %gep_int36... (idx: 0)        -909                          -799                          -499                          -479                          -129                          -19                           -89                           -79                           
  %gep373 = add i32 %gep371, %... (idx: 1)        -909                          -799                          -499                          -479                          -129                          -19                           -89                           -79                           
  %gep376 = add i32 %gep_int37... (idx: 2)        -909                          -799                          -499                          -479                          -129                          -19                           -89                           -79                           
  %gep378 = add i32 %gep376, %... (idx: 3)        -909                          -799                          -499                          -479                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep371 = add i32 %gep_int36... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep373 = add i32 %gep371, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep376 = add i32 %gep_int37... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep378 = add i32 %gep376, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep371 = add i32 %gep_int36... (idx: 0) -> main_signed_add_32_0 (mux inputs: 93)
  %gep373 = add i32 %gep371, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 82)
  %gep376 = add i32 %gep_int37... (idx: 2) -> main_signed_add_32_2 (mux inputs: 52)
  %gep378 = add i32 %gep376, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 50)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %346, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %346, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %346, i32* getelem... (idx: 0)        -414                          -973                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %346, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %346, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 99)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep381 = add i32 %gep_int37... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep383 = add i32 %gep381, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep386 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep388 = add i32 %gep386, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep381 = add i32 %gep_int37... (idx: 0)        -929                          -819                          -519                          -499                          -129                          -19                           -89                           -79                           
  %gep383 = add i32 %gep381, %... (idx: 1)        -929                          -819                          -519                          -499                          -129                          -19                           -89                           -79                           
  %gep386 = add i32 %gep_int38... (idx: 2)        -929                          -819                          -519                          -499                          -129                          -19                           -89                           -79                           
  %gep388 = add i32 %gep386, %... (idx: 3)        -929                          -819                          -519                          -499                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep381 = add i32 %gep_int37... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep383 = add i32 %gep381, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep386 = add i32 %gep_int38... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep388 = add i32 %gep386, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep381 = add i32 %gep_int37... (idx: 0) -> main_signed_add_32_0 (mux inputs: 95)
  %gep383 = add i32 %gep381, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 84)
  %gep386 = add i32 %gep_int38... (idx: 2) -> main_signed_add_32_2 (mux inputs: 54)
  %gep388 = add i32 %gep386, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 52)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %351 = load i32* %350, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %351 = load i32* %350, align... (idx: 0)        85                            95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %351 = load i32* %350, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %351 = load i32* %350, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 2)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep391 = add i32 %gep_int38... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep393 = add i32 %gep391, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep396 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep398 = add i32 %gep396, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep391 = add i32 %gep_int38... (idx: 0)        -949                          -839                          -539                          -519                          -129                          -19                           -89                           -79                           
  %gep393 = add i32 %gep391, %... (idx: 1)        -949                          -839                          -539                          -519                          -129                          -19                           -89                           -79                           
  %gep396 = add i32 %gep_int39... (idx: 2)        -949                          -839                          -539                          -519                          -129                          -19                           -89                           -79                           
  %gep398 = add i32 %gep396, %... (idx: 3)        -949                          -839                          -539                          -519                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep391 = add i32 %gep_int38... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep393 = add i32 %gep391, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep396 = add i32 %gep_int39... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep398 = add i32 %gep396, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep391 = add i32 %gep_int38... (idx: 0) -> main_signed_add_32_0 (mux inputs: 97)
  %gep393 = add i32 %gep391, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 86)
  %gep396 = add i32 %gep_int39... (idx: 2) -> main_signed_add_32_2 (mux inputs: 56)
  %gep398 = add i32 %gep396, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 54)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %351, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %351, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %351, i32* getelem... (idx: 0)        -414                          -983                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %351, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %351, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 100)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep401 = add i32 %gep_int39... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep403 = add i32 %gep401, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep406 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep408 = add i32 %gep406, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep401 = add i32 %gep_int39... (idx: 0)        -969                          -859                          -559                          -539                          -129                          -19                           -89                           -79                           
  %gep403 = add i32 %gep401, %... (idx: 1)        -969                          -859                          -559                          -539                          -129                          -19                           -89                           -79                           
  %gep406 = add i32 %gep_int40... (idx: 2)        -969                          -859                          -559                          -539                          -129                          -19                           -89                           -79                           
  %gep408 = add i32 %gep406, %... (idx: 3)        -969                          -859                          -559                          -539                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep401 = add i32 %gep_int39... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep403 = add i32 %gep401, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep406 = add i32 %gep_int40... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep408 = add i32 %gep406, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep401 = add i32 %gep_int39... (idx: 0) -> main_signed_add_32_0 (mux inputs: 99)
  %gep403 = add i32 %gep401, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 88)
  %gep406 = add i32 %gep_int40... (idx: 2) -> main_signed_add_32_2 (mux inputs: 58)
  %gep408 = add i32 %gep406, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 56)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %356 = load i32* %355, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %356 = load i32* %355, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %356 = load i32* %355, align... (idx: 0)        85                            95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %356 = load i32* %355, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %356 = load i32* %355, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 3)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %356, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %356, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %341, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %341, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %356, i32* getelem... (idx: 0)        -414                          -993                          
  store i32 %341, i32* getelem... (idx: 1)        -414                          -993                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %356, i32* getelem... (idx: 0)        1                             0                             
  store i32 %341, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %356, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 43)
  store i32 %341, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 101)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %361 = load i32* %360, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %361 = load i32* %360, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %366 = load i32* %365, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %366 = load i32* %365, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %361 = load i32* %360, align... (idx: 0)        75                            95                            
  %366 = load i32* %365, align... (idx: 1)        75                            95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %361 = load i32* %360, align... (idx: 0)        1                             0                             
  %366 = load i32* %365, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %361 = load i32* %360, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 4)
  %366 = load i32* %365, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 2)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %366, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %366, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %361, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %361, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %366, i32* getelem... (idx: 0)        -424                          -1003                         
  store i32 %361, i32* getelem... (idx: 1)        -424                          -1003                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %366, i32* getelem... (idx: 0)        1                             0                             
  store i32 %361, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %366, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 44)
  store i32 %361, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 102)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %371 = load i32* %370, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %371 = load i32* %370, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %376 = load i32* %375, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %376 = load i32* %375, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %371 = load i32* %370, align... (idx: 0)        65                            85                            
  %376 = load i32* %375, align... (idx: 1)        65                            85                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %371 = load i32* %370, align... (idx: 0)        1                             0                             
  %376 = load i32* %375, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %371 = load i32* %370, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 5)
  %376 = load i32* %375, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 3)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %376, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %376, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %371, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %371, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %376, i32* getelem... (idx: 0)        -434                          -1013                         
  store i32 %371, i32* getelem... (idx: 1)        -434                          -1013                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %376, i32* getelem... (idx: 0)        1                             0                             
  store i32 %371, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %376, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 45)
  store i32 %371, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 103)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %381 = load i32* %380, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %381 = load i32* %380, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %386 = load i32* %385, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %386 = load i32* %385, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %381 = load i32* %380, align... (idx: 0)        55                            75                            
  %386 = load i32* %385, align... (idx: 1)        55                            75                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %381 = load i32* %380, align... (idx: 0)        1                             0                             
  %386 = load i32* %385, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %381 = load i32* %380, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 6)
  %386 = load i32* %385, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 4)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %386, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %386, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %386, i32* getelem... (idx: 0)        -444                          -1023                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %386, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %386, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 104)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %391 = load i32* %390, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %391 = load i32* %390, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %391 = load i32* %390, align... (idx: 0)        45                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %391 = load i32* %390, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %391 = load i32* %390, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 7)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %391, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %391, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %391, i32* getelem... (idx: 0)        -444                          -1033                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %391, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %391, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 105)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %396 = load i32* %395, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %396 = load i32* %395, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %396 = load i32* %395, align... (idx: 0)        35                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %396 = load i32* %395, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %396 = load i32* %395, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 8)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %396, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %396, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %381, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %381, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %396, i32* getelem... (idx: 0)        -444                          -1043                         
  store i32 %381, i32* getelem... (idx: 1)        -444                          -1043                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %396, i32* getelem... (idx: 0)        1                             0                             
  store i32 %381, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %396, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 46)
  store i32 %381, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 106)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %401 = load i32* %400, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %401 = load i32* %400, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %401 = load i32* %400, align... (idx: 0)        25                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %401 = load i32* %400, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %401 = load i32* %400, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 9)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %401, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %401, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %401, i32* getelem... (idx: 0)        -454                          -1053                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %401, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %401, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 107)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %406 = load i32* %405, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %406 = load i32* %405, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %406 = load i32* %405, align... (idx: 0)        15                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %406 = load i32* %405, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %406 = load i32* %405, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 10)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %406, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %406, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %406, i32* getelem... (idx: 0)        -454                          -1063                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %406, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %406, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 108)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %411 = load i32* %410, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %411 = load i32* %410, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %411 = load i32* %410, align... (idx: 0)        5                             65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %411 = load i32* %410, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %411 = load i32* %410, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 11)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %411, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %411, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %411, i32* getelem... (idx: 0)        -454                          -1073                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %411, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %411, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 109)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %416 = load i32* %415, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %416 = load i32* %415, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %416 = load i32* %415, align... (idx: 0)        -5                            65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %416 = load i32* %415, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %416 = load i32* %415, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 12)
State: LEGUP_F_main_BB_lrph12ipreheader
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %416, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %416, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %416, i32* getelem... (idx: 0)        -454                          -1083                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %416, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %416, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %i.0.i = add nsw i32 %i.011.... (idx: 0)        -994                          -883                          -583                          -563                          -133                          -23                           -93                           -83                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %i.0.i = add nsw i32 %i.011.... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %i.0.i = add nsw i32 %i.011.... (idx: 0) -> main_signed_add_32_0 (mux inputs: 100)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %418 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %418 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %423 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %423 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %418 = load i32* getelementp... (idx: 0)        -449                          -1089                         
  %423 = load i32* getelementp... (idx: 1)        -449                          -1089                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %418 = load i32* getelementp... (idx: 0)        1                             0                             
  %423 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %418 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 46)
  %423 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %428 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %428 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %428 = load i32* getelementp... (idx: 0)        -449                          -1089                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %428 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %428 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %433 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %433 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %433 = load i32* getelementp... (idx: 0)        -449                          -1089                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %433 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %433 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %422 = load i32* %421, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %422 = load i32* %421, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %427 = load i32* %426, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %427 = load i32* %426, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %422 = load i32* %421, align... (idx: 0)        -15                           65                            
  %427 = load i32* %426, align... (idx: 1)        -15                           65                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %422 = load i32* %421, align... (idx: 0)        1                             0                             
  %427 = load i32* %426, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %422 = load i32* %421, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 13)
  %427 = load i32* %426, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 5)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %438 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %438 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %438 = load i32* getelementp... (idx: 0)        -449                          -1089                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %438 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %438 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep411 = add i32 %gep_int40... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep413 = add i32 %gep411, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep416 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep418 = add i32 %gep416, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep411 = add i32 %gep_int40... (idx: 0)        -999                          -879                          -579                          -559                          -129                          -19                           -89                           -79                           
  %gep413 = add i32 %gep411, %... (idx: 1)        -999                          -879                          -579                          -559                          -129                          -19                           -89                           -79                           
  %gep416 = add i32 %gep_int41... (idx: 2)        -999                          -879                          -579                          -559                          -129                          -19                           -89                           -79                           
  %gep418 = add i32 %gep416, %... (idx: 3)        -999                          -879                          -579                          -559                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep411 = add i32 %gep_int40... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep413 = add i32 %gep411, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep416 = add i32 %gep_int41... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep418 = add i32 %gep416, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep411 = add i32 %gep_int40... (idx: 0) -> main_signed_add_32_0 (mux inputs: 102)
  %gep413 = add i32 %gep411, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 90)
  %gep416 = add i32 %gep_int41... (idx: 2) -> main_signed_add_32_2 (mux inputs: 60)
  %gep418 = add i32 %gep416, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 58)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %427, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %427, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %427, i32* getelem... (idx: 0)        -454                          -1093                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %427, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %427, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 111)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep421 = add i32 %gep_int41... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep423 = add i32 %gep421, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep421 = add i32 %gep_int41... (idx: 0)        -1019                         -899                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep423 = add i32 %gep421, %... (idx: 1)        -1019                         -899                          -599                          -579                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep421 = add i32 %gep_int41... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep423 = add i32 %gep421, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep421 = add i32 %gep_int41... (idx: 0) -> main_signed_add_32_0 (mux inputs: 104)
  %gep423 = add i32 %gep421, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 92)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %432 = load i32* %431, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %432 = load i32* %431, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %432 = load i32* %431, align... (idx: 0)        -25                           55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %432 = load i32* %431, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %432 = load i32* %431, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 14)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep426 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep428 = add i32 %gep426, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep426 = add i32 %gep_int42... (idx: 0)        -1039                         -919                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep428 = add i32 %gep426, %... (idx: 1)        -1039                         -919                          -599                          -579                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep426 = add i32 %gep_int42... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep428 = add i32 %gep426, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep426 = add i32 %gep_int42... (idx: 0) -> main_signed_add_32_0 (mux inputs: 106)
  %gep428 = add i32 %gep426, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 94)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %432, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %432, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %432, i32* getelem... (idx: 0)        -454                          -1103                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %432, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %432, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 112)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep431 = add i32 %gep_int42... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep433 = add i32 %gep431, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep431 = add i32 %gep_int42... (idx: 0)        -1059                         -939                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep433 = add i32 %gep431, %... (idx: 1)        -1059                         -939                          -599                          -579                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep431 = add i32 %gep_int42... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep433 = add i32 %gep431, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep431 = add i32 %gep_int42... (idx: 0) -> main_signed_add_32_0 (mux inputs: 108)
  %gep433 = add i32 %gep431, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 96)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %437 = load i32* %436, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %437 = load i32* %436, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %437 = load i32* %436, align... (idx: 0)        -35                           55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %437 = load i32* %436, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %437 = load i32* %436, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 15)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %443 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %443 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %443 = load i32* getelementp... (idx: 0)        -449                          -1109                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %443 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %443 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 112)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %437, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %437, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %422, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %422, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %437, i32* getelem... (idx: 0)        -454                          -1113                         
  store i32 %422, i32* getelem... (idx: 1)        -454                          -1113                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %437, i32* getelem... (idx: 0)        1                             0                             
  store i32 %422, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %437, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 47)
  store i32 %422, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 113)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %442 = load i32* %441, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %442 = load i32* %441, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %442 = load i32* %441, align... (idx: 0)        -45                           55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %442 = load i32* %441, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %442 = load i32* %441, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 16)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %448 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %448 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %453 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %453 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %448 = load i32* getelementp... (idx: 0)        -459                          -1119                         
  %453 = load i32* getelementp... (idx: 1)        -459                          -1119                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %448 = load i32* getelementp... (idx: 0)        1                             0                             
  %453 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %448 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 47)
  %453 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 113)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %447 = load i32* %446, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %447 = load i32* %446, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %447 = load i32* %446, align... (idx: 0)        -55                           55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %447 = load i32* %446, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %447 = load i32* %446, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 17)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep436 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep438 = add i32 %gep436, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep436 = add i32 %gep_int43... (idx: 0)        -1079                         -959                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep438 = add i32 %gep436, %... (idx: 1)        -1079                         -959                          -599                          -579                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep436 = add i32 %gep_int43... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep438 = add i32 %gep436, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep436 = add i32 %gep_int43... (idx: 0) -> main_signed_add_32_0 (mux inputs: 110)
  %gep438 = add i32 %gep436, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 98)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %447, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %447, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %442, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %442, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %447, i32* getelem... (idx: 0)        -464                          -1123                         
  store i32 %442, i32* getelem... (idx: 1)        -464                          -1123                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %447, i32* getelem... (idx: 0)        1                             0                             
  store i32 %442, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %447, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 48)
  store i32 %442, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 114)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %452 = load i32* %451, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %452 = load i32* %451, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %457 = load i32* %456, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %457 = load i32* %456, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %452 = load i32* %451, align... (idx: 0)        -65                           55                            
  %457 = load i32* %456, align... (idx: 1)        -65                           55                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %452 = load i32* %451, align... (idx: 0)        1                             0                             
  %457 = load i32* %456, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %452 = load i32* %451, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 18)
  %457 = load i32* %456, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 6)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %458 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %458 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
  %463 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %463 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %458 = load i32* getelementp... (idx: 0)        -469                          -1129                         
  %463 = load i32* getelementp... (idx: 1)        -469                          -1129                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %458 = load i32* getelementp... (idx: 0)        1                             0                             
  %463 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %458 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 48)
  %463 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 114)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep441 = add i32 %gep_int43... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep443 = add i32 %gep441, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep446 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep448 = add i32 %gep446, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep441 = add i32 %gep_int43... (idx: 0)        -1099                         -979                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep443 = add i32 %gep441, %... (idx: 1)        -1099                         -979                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep446 = add i32 %gep_int44... (idx: 2)        -1099                         -979                          -599                          -579                          -129                          -19                           -89                           -79                           
  %gep448 = add i32 %gep446, %... (idx: 3)        -1099                         -979                          -599                          -579                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep441 = add i32 %gep_int43... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep443 = add i32 %gep441, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep446 = add i32 %gep_int44... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep448 = add i32 %gep446, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep441 = add i32 %gep_int43... (idx: 0) -> main_signed_add_32_0 (mux inputs: 112)
  %gep443 = add i32 %gep441, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 100)
  %gep446 = add i32 %gep_int44... (idx: 2) -> main_signed_add_32_2 (mux inputs: 62)
  %gep448 = add i32 %gep446, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 60)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %457, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %457, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %452, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %452, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %457, i32* getelem... (idx: 0)        -474                          -1133                         
  store i32 %452, i32* getelem... (idx: 1)        -474                          -1133                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %457, i32* getelem... (idx: 0)        1                             0                             
  store i32 %452, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %457, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 49)
  store i32 %452, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 115)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %468 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %468 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %468 = load i32* getelementp... (idx: 0)        -479                          -1139                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %468 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %468 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 115)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %462 = load i32* %461, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %462 = load i32* %461, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
  %467 = load i32* %466, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %467 = load i32* %466, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %462 = load i32* %461, align... (idx: 0)        -75                           45                            
  %467 = load i32* %466, align... (idx: 1)        -75                           45                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %462 = load i32* %461, align... (idx: 0)        1                             0                             
  %467 = load i32* %466, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %462 = load i32* %461, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 19)
  %467 = load i32* %466, align... (idx: 1) -> main_invSbox_local_mem_dual_port_1 (mux inputs: 7)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %473 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %473 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %473 = load i32* getelementp... (idx: 0)        -479                          -1139                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %473 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %473 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 115)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep451 = add i32 %gep_int44... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep453 = add i32 %gep451, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep456 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep458 = add i32 %gep456, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep451 = add i32 %gep_int44... (idx: 0)        -1119                         -999                          -619                          -599                          -129                          -19                           -89                           -79                           
  %gep453 = add i32 %gep451, %... (idx: 1)        -1119                         -999                          -619                          -599                          -129                          -19                           -89                           -79                           
  %gep456 = add i32 %gep_int45... (idx: 2)        -1119                         -999                          -619                          -599                          -129                          -19                           -89                           -79                           
  %gep458 = add i32 %gep456, %... (idx: 3)        -1119                         -999                          -619                          -599                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep451 = add i32 %gep_int44... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep453 = add i32 %gep451, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep456 = add i32 %gep_int45... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep458 = add i32 %gep456, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep451 = add i32 %gep_int44... (idx: 0) -> main_signed_add_32_0 (mux inputs: 114)
  %gep453 = add i32 %gep451, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 102)
  %gep456 = add i32 %gep_int45... (idx: 2) -> main_signed_add_32_2 (mux inputs: 64)
  %gep458 = add i32 %gep456, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 62)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %467, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %467, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  %478 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %478 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %467, i32* getelem... (idx: 0)        -484                          -1143                         
  %478 = load i32* getelementp... (idx: 1)        -479                          -1139                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %467, i32* getelem... (idx: 0)        1                             0                             
  %478 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %467, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 50)
  %478 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 115)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %472 = load i32* %471, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %472 = load i32* %471, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %472 = load i32* %471, align... (idx: 0)        -85                           35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %472 = load i32* %471, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %472 = load i32* %471, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 20)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep461 = add i32 %gep_int45... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep463 = add i32 %gep461, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep461 = add i32 %gep_int45... (idx: 0)        -1139                         -1019                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep463 = add i32 %gep461, %... (idx: 1)        -1139                         -1019                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep461 = add i32 %gep_int45... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep463 = add i32 %gep461, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep461 = add i32 %gep_int45... (idx: 0) -> main_signed_add_32_0 (mux inputs: 116)
  %gep463 = add i32 %gep461, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 104)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %472, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %472, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %472, i32* getelem... (idx: 0)        -494                          -1143                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %472, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %472, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 116)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep466 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep468 = add i32 %gep466, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep466 = add i32 %gep_int46... (idx: 0)        -1159                         -1039                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep468 = add i32 %gep466, %... (idx: 1)        -1159                         -1039                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep466 = add i32 %gep_int46... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep468 = add i32 %gep466, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep466 = add i32 %gep_int46... (idx: 0) -> main_signed_add_32_0 (mux inputs: 118)
  %gep468 = add i32 %gep466, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 106)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %477 = load i32* %476, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %477 = load i32* %476, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %477 = load i32* %476, align... (idx: 0)        -95                           35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %477 = load i32* %476, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %477 = load i32* %476, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 21)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep471 = add i32 %gep_int46... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep473 = add i32 %gep471, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep471 = add i32 %gep_int46... (idx: 0)        -1179                         -1059                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep473 = add i32 %gep471, %... (idx: 1)        -1179                         -1059                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep471 = add i32 %gep_int46... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep473 = add i32 %gep471, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep471 = add i32 %gep_int46... (idx: 0) -> main_signed_add_32_0 (mux inputs: 120)
  %gep473 = add i32 %gep471, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 108)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %477, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %477, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  store i32 %462, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %462, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %477, i32* getelem... (idx: 0)        -494                          -1153                         
  store i32 %462, i32* getelem... (idx: 1)        -494                          -1153                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %477, i32* getelem... (idx: 0)        1                             0                             
  store i32 %462, i32* getelem... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %477, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 51)
  store i32 %462, i32* getelem... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 117)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %482 = load i32* %481, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %482 = load i32* %481, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %482 = load i32* %481, align... (idx: 0)        -105                          35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %482 = load i32* %481, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %482 = load i32* %481, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 22)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %483 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %483 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %483 = load i32* getelementp... (idx: 0)        -499                          -1159                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %483 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %483 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 117)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %482, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %482, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
  %488 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %488 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %482, i32* getelem... (idx: 0)        -504                          -1163                         
  %488 = load i32* getelementp... (idx: 1)        -499                          -1159                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %482, i32* getelem... (idx: 0)        1                             0                             
  %488 = load i32* getelementp... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %482, i32* getelem... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 52)
  %488 = load i32* getelementp... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 117)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %493 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_0
  %493 = load i32* getelementp... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %493 = load i32* getelementp... (idx: 0)        -509                          -1159                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %493 = load i32* getelementp... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %493 = load i32* getelementp... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 117)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %487 = load i32* %486, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %487 = load i32* %486, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %487 = load i32* %486, align... (idx: 0)        -115                          35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %487 = load i32* %486, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %487 = load i32* %486, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 23)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep476 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep478 = add i32 %gep476, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep476 = add i32 %gep_int47... (idx: 0)        -1199                         -1079                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep478 = add i32 %gep476, %... (idx: 1)        -1199                         -1079                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep476 = add i32 %gep_int47... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep478 = add i32 %gep476, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep476 = add i32 %gep_int47... (idx: 0) -> main_signed_add_32_0 (mux inputs: 122)
  %gep478 = add i32 %gep476, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 110)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %487, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %487, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %487, i32* getelem... (idx: 0)        -514                          -1163                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %487, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %487, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 118)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep481 = add i32 %gep_int47... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep483 = add i32 %gep481, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep481 = add i32 %gep_int47... (idx: 0)        -1219                         -1099                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep483 = add i32 %gep481, %... (idx: 1)        -1219                         -1099                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep481 = add i32 %gep_int47... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep483 = add i32 %gep481, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep481 = add i32 %gep_int47... (idx: 0) -> main_signed_add_32_0 (mux inputs: 124)
  %gep483 = add i32 %gep481, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 112)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %492 = load i32* %491, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %492 = load i32* %491, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %492 = load i32* %491, align... (idx: 0)        -125                          35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %492 = load i32* %491, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %492 = load i32* %491, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 24)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep486 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep488 = add i32 %gep486, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep486 = add i32 %gep_int48... (idx: 0)        -1239                         -1119                         -639                          -619                          -129                          -19                           -89                           -79                           
  %gep488 = add i32 %gep486, %... (idx: 1)        -1239                         -1119                         -639                          -619                          -129                          -19                           -89                           -79                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep486 = add i32 %gep_int48... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep488 = add i32 %gep486, %... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep486 = add i32 %gep_int48... (idx: 0) -> main_signed_add_32_0 (mux inputs: 126)
  %gep488 = add i32 %gep486, %... (idx: 1) -> main_signed_add_32_1 (mux inputs: 114)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %492, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %492, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %492, i32* getelem... (idx: 0)        -514                          -1173                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %492, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %492, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 119)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: invSbox_local_mem_dual_port
Weight matrix for operation/function unit matching:
  %497 = load i32* %496, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_0
  %497 = load i32* %496, align... can share an output register with another operation already assigned to main_invSbox_local_mem_dual_port_1
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %497 = load i32* %496, align... (idx: 0)        -135                          35                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_invSbox_local_mem_dual_port_0main_invSbox_local_mem_dual_port_1
  %497 = load i32* %496, align... (idx: 0)        1                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %497 = load i32* %496, align... (idx: 0) -> main_invSbox_local_mem_dual_port_0 (mux inputs: 25)
State: LEGUP_F_main_BB_lrph12i
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %497, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %497, i32* getelem... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %497, i32* getelem... (idx: 0)        -514                          -1183                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %497, i32* getelem... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %497, i32* getelem... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 120)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep496 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep503 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep510 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep496 = add i32 %gep_int49... (idx: 0)        -1255                         -1135                         -634                          -614                          -124                          -14                           -84                           -74                           
  %gep503 = add i32 %gep_int50... (idx: 1)        -1254                         -1135                         -635                          -614                          -124                          -14                           -84                           -74                           
  %gep510 = add i32 %gep_int50... (idx: 2)        -1254                         -1134                         -635                          -615                          -124                          -14                           -84                           -74                           
  %523 = add nsw i32 %j.02.i2.... (idx: 3)        -1265                         -1145                         -644                          -625                          -135                          -24                           -94                           -84                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep496 = add i32 %gep_int49... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep503 = add i32 %gep_int50... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep510 = add i32 %gep_int50... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %523 = add nsw i32 %j.02.i2.... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep496 = add i32 %gep_int49... (idx: 0) -> main_signed_add_32_0 (mux inputs: 127)
  %gep503 = add i32 %gep_int50... (idx: 1) -> main_signed_add_32_1 (mux inputs: 115)
  %gep510 = add i32 %gep_int50... (idx: 2) -> main_signed_add_32_2 (mux inputs: 65)
  %523 = add nsw i32 %j.02.i2.... (idx: 3) -> main_signed_add_32_3 (mux inputs: 63)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %500 = load i32* %499, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %500 = load i32* %499, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %503 = load i32* %502, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %503 = load i32* %502, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %500 = load i32* %499, align... (idx: 0)        -515                          -1195                         
  %503 = load i32* %502, align... (idx: 1)        -515                          -1195                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %500 = load i32* %499, align... (idx: 0)        1                             0                             
  %503 = load i32* %502, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %500 = load i32* %499, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 53)
  %503 = load i32* %502, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 121)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep491 = add i32 %gep_int48... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep494 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep498 = add i32 %gep496, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep501 = add i32 %gep_int49... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep505 = add i32 %gep503, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep508 = add i32 %gep_int50... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep512 = add i32 %gep510, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep515 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep491 = add i32 %gep_int48... (idx: 0)        -1269                         -1149                         -649                          -629                          -129                          -19                           -89                           -79                           
  %gep494 = add i32 %gep_int49... (idx: 1)        -1267                         -1147                         -647                          -627                          -127                          -17                           -87                           -77                           
  %gep498 = add i32 %gep496, %... (idx: 2)        -1269                         -1149                         -649                          -629                          -129                          -19                           -89                           -79                           
  %gep501 = add i32 %gep_int49... (idx: 3)        -1267                         -1147                         -647                          -627                          -127                          -17                           -87                           -77                           
  %gep505 = add i32 %gep503, %... (idx: 4)        -1269                         -1149                         -649                          -629                          -129                          -19                           -89                           -79                           
  %gep508 = add i32 %gep_int50... (idx: 5)        -1267                         -1147                         -647                          -627                          -127                          -17                           -87                           -77                           
  %gep512 = add i32 %gep510, %... (idx: 6)        -1269                         -1149                         -649                          -629                          -129                          -19                           -89                           -79                           
  %gep515 = add i32 %gep_int51... (idx: 7)        -1267                         -1147                         -647                          -627                          -127                          -17                           -87                           -77                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep491 = add i32 %gep_int48... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep494 = add i32 %gep_int49... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep498 = add i32 %gep496, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep501 = add i32 %gep_int49... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep505 = add i32 %gep503, %... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
  %gep508 = add i32 %gep_int50... (idx: 5)        0                             0                             0                             0                             0                             1                             0                             0                             
  %gep512 = add i32 %gep510, %... (idx: 6)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep515 = add i32 %gep_int51... (idx: 7)        0                             0                             0                             0                             0                             0                             0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep491 = add i32 %gep_int48... (idx: 0) -> main_signed_add_32_0 (mux inputs: 129)
  %gep494 = add i32 %gep_int49... (idx: 1) -> main_signed_add_32_1 (mux inputs: 117)
  %gep498 = add i32 %gep496, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 67)
  %gep501 = add i32 %gep_int49... (idx: 3) -> main_signed_add_32_3 (mux inputs: 65)
  %gep505 = add i32 %gep503, %... (idx: 4) -> main_signed_add_32_4 (mux inputs: 15)
  %gep508 = add i32 %gep_int50... (idx: 5) -> main_signed_add_32_5 (mux inputs: 4)
  %gep512 = add i32 %gep510, %... (idx: 6) -> main_signed_add_32_6 (mux inputs: 11)
  %gep515 = add i32 %gep_int51... (idx: 7) -> main_signed_add_32_7 (mux inputs: 10)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %504, i32* %502, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %504, i32* %502, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %504, i32* %502, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %504, i32* %502, a... (idx: 0)        -530                          -1205                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %504, i32* %502, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %504, i32* %502, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 122)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %506 = load i32* %505, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %506 = load i32* %505, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %509 = load i32* %508, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %509 = load i32* %508, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %506 = load i32* %505, align... (idx: 0)        -525                          -1215                         
  %509 = load i32* %508, align... (idx: 1)        -525                          -1215                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %506 = load i32* %505, align... (idx: 0)        1                             0                             
  %509 = load i32* %508, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %506 = load i32* %505, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 54)
  %509 = load i32* %508, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 123)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %510, i32* %508, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %510, i32* %508, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %510, i32* %508, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %510, i32* %508, a... (idx: 0)        -540                          -1225                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %510, i32* %508, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %510, i32* %508, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 124)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %512 = load i32* %511, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %512 = load i32* %511, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %515 = load i32* %514, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %515 = load i32* %514, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %512 = load i32* %511, align... (idx: 0)        -535                          -1235                         
  %515 = load i32* %514, align... (idx: 1)        -535                          -1235                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %512 = load i32* %511, align... (idx: 0)        1                             0                             
  %515 = load i32* %514, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %512 = load i32* %511, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 55)
  %515 = load i32* %514, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 125)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %516, i32* %514, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %516, i32* %514, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %516, i32* %514, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %516, i32* %514, a... (idx: 0)        -550                          -1245                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %516, i32* %514, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %516, i32* %514, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 126)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %518 = load i32* %517, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %518 = load i32* %517, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %521 = load i32* %520, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %521 = load i32* %520, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %518 = load i32* %517, align... (idx: 0)        -545                          -1255                         
  %521 = load i32* %520, align... (idx: 1)        -545                          -1255                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %518 = load i32* %517, align... (idx: 0)        1                             0                             
  %521 = load i32* %520, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %518 = load i32* %517, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 56)
  %521 = load i32* %520, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 127)
State: LEGUP_F_main_BB__crit_edgei
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %522, i32* %520, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %522, i32* %520, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %522, i32* %520, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %522, i32* %520, a... (idx: 0)        -560                          -1265                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %522, i32* %520, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %522, i32* %520, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 128)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep523 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep530 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_7
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_0
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_1
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_2
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_3
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_4
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_5
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_6
  %538 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep537 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_7
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_0
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_1
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_2
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_3
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_4
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_5
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_6
  %544 = add nsw i32 %j.11.i3.... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep523 = add i32 %gep_int52... (idx: 0)        -1285                         -1165                         -664                          -644                          -144                          -34                           -104                          -94                           
  %532 = add nsw i32 %j.11.i3.... (idx: 1)        -1295                         -1175                         -674                          -655                          -155                          -44                           -114                          -104                          
  %gep530 = add i32 %gep_int52... (idx: 2)        -1284                         -1165                         -665                          -644                          -144                          -34                           -104                          -94                           
  %538 = add nsw i32 %j.11.i3.... (idx: 3)        -1284                         -1164                         -665                          -644                          -144                          -34                           -105                          -94                           
  %gep537 = add i32 %gep_int53... (idx: 4)        -1284                         -1164                         -665                          -645                          -144                          -34                           -104                          -94                           
  %544 = add nsw i32 %j.11.i3.... (idx: 5)        -1284                         -1164                         -664                          -645                          -145                          -34                           -104                          -94                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep523 = add i32 %gep_int52... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %532 = add nsw i32 %j.11.i3.... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep530 = add i32 %gep_int52... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %538 = add nsw i32 %j.11.i3.... (idx: 3)        0                             0                             0                             0                             0                             0                             1                             0                             
  %gep537 = add i32 %gep_int53... (idx: 4)        0                             0                             0                             1                             0                             0                             0                             0                             
  %544 = add nsw i32 %j.11.i3.... (idx: 5)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep523 = add i32 %gep_int52... (idx: 0) -> main_signed_add_32_0 (mux inputs: 130)
  %532 = add nsw i32 %j.11.i3.... (idx: 1) -> main_signed_add_32_1 (mux inputs: 118)
  %gep530 = add i32 %gep_int52... (idx: 2) -> main_signed_add_32_2 (mux inputs: 68)
  %gep537 = add i32 %gep_int53... (idx: 4) -> main_signed_add_32_3 (mux inputs: 66)
  %544 = add nsw i32 %j.11.i3.... (idx: 5) -> main_signed_add_32_4 (mux inputs: 16)
  %538 = add nsw i32 %j.11.i3.... (idx: 3) -> main_signed_add_32_6 (mux inputs: 12)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %525 = load i32* %524, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %525 = load i32* %524, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %528 = load i32* %527, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %528 = load i32* %527, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %525 = load i32* %524, align... (idx: 0)        -555                          -1275                         
  %528 = load i32* %527, align... (idx: 1)        -555                          -1275                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %525 = load i32* %524, align... (idx: 0)        1                             0                             
  %528 = load i32* %527, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %525 = load i32* %524, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 57)
  %528 = load i32* %527, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 129)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep518 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep521 = add i32 %gep_int51... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep525 = add i32 %gep523, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep532 = add i32 %gep530, %... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep539 = add i32 %gep537, %... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep518 = add i32 %gep_int51... (idx: 0)        -1299                         -1179                         -679                          -659                          -159                          -39                           -119                          -99                           
  %gep521 = add i32 %gep_int51... (idx: 1)        -1297                         -1177                         -677                          -657                          -157                          -37                           -117                          -97                           
  %gep525 = add i32 %gep523, %... (idx: 2)        -1299                         -1179                         -679                          -659                          -159                          -39                           -119                          -99                           
  %gep532 = add i32 %gep530, %... (idx: 3)        -1299                         -1179                         -679                          -659                          -159                          -39                           -119                          -99                           
  %gep539 = add i32 %gep537, %... (idx: 4)        -1299                         -1179                         -679                          -659                          -159                          -39                           -119                          -99                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep518 = add i32 %gep_int51... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep521 = add i32 %gep_int51... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep525 = add i32 %gep523, %... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
  %gep532 = add i32 %gep530, %... (idx: 3)        0                             0                             0                             1                             0                             0                             0                             0                             
  %gep539 = add i32 %gep537, %... (idx: 4)        0                             0                             0                             0                             1                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep518 = add i32 %gep_int51... (idx: 0) -> main_signed_add_32_0 (mux inputs: 132)
  %gep521 = add i32 %gep_int51... (idx: 1) -> main_signed_add_32_1 (mux inputs: 120)
  %gep525 = add i32 %gep523, %... (idx: 2) -> main_signed_add_32_2 (mux inputs: 70)
  %gep532 = add i32 %gep530, %... (idx: 3) -> main_signed_add_32_3 (mux inputs: 68)
  %gep539 = add i32 %gep537, %... (idx: 4) -> main_signed_add_32_4 (mux inputs: 18)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep528 = add i32 %gep_int52... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep535 = add i32 %gep_int53... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep542 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep528 = add i32 %gep_int52... (idx: 0)        -1317                         -1197                         -697                          -677                          -177                          -37                           -117                          -97                           
  %gep535 = add i32 %gep_int53... (idx: 1)        -1317                         -1197                         -697                          -677                          -177                          -37                           -117                          -97                           
  %gep542 = add i32 %gep_int54... (idx: 2)        -1317                         -1197                         -697                          -677                          -177                          -37                           -117                          -97                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep528 = add i32 %gep_int52... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep535 = add i32 %gep_int53... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
  %gep542 = add i32 %gep_int54... (idx: 2)        0                             0                             1                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep528 = add i32 %gep_int52... (idx: 0) -> main_signed_add_32_0 (mux inputs: 134)
  %gep535 = add i32 %gep_int53... (idx: 1) -> main_signed_add_32_1 (mux inputs: 122)
  %gep542 = add i32 %gep_int54... (idx: 2) -> main_signed_add_32_2 (mux inputs: 72)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %529, i32* %527, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %529, i32* %527, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %529, i32* %527, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %529, i32* %527, a... (idx: 0)        -570                          -1285                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %529, i32* %527, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %529, i32* %527, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 130)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %531 = load i32* %530, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %531 = load i32* %530, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %534 = load i32* %533, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %534 = load i32* %533, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %531 = load i32* %530, align... (idx: 0)        -565                          -1295                         
  %534 = load i32* %533, align... (idx: 1)        -565                          -1295                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %531 = load i32* %530, align... (idx: 0)        1                             0                             
  %534 = load i32* %533, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %531 = load i32* %530, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 58)
  %534 = load i32* %533, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 131)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %535, i32* %533, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %535, i32* %533, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %535, i32* %533, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %535, i32* %533, a... (idx: 0)        -580                          -1305                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %535, i32* %533, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %535, i32* %533, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 132)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %537 = load i32* %536, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %537 = load i32* %536, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %540 = load i32* %539, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %540 = load i32* %539, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %537 = load i32* %536, align... (idx: 0)        -575                          -1315                         
  %540 = load i32* %539, align... (idx: 1)        -575                          -1315                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %537 = load i32* %536, align... (idx: 0)        1                             0                             
  %540 = load i32* %539, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %537 = load i32* %536, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 59)
  %540 = load i32* %539, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 133)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %541, i32* %539, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %541, i32* %539, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %541, i32* %539, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %541, i32* %539, a... (idx: 0)        -590                          -1325                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %541, i32* %539, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %541, i32* %539, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 134)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %543 = load i32* %542, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %543 = load i32* %542, align... can share an output register with another operation already assigned to main_mem_dual_port_1
  %546 = load i32* %545, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %546 = load i32* %545, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %543 = load i32* %542, align... (idx: 0)        -585                          -1335                         
  %546 = load i32* %545, align... (idx: 1)        -585                          -1335                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %543 = load i32* %542, align... (idx: 0)        1                             0                             
  %546 = load i32* %545, align... (idx: 1)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %543 = load i32* %542, align... (idx: 0) -> main_mem_dual_port_0 (mux inputs: 60)
  %546 = load i32* %545, align... (idx: 1) -> main_mem_dual_port_1 (mux inputs: 135)
State: LEGUP_F_main_BB_preheaderi4i14
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  store i32 %547, i32* %545, a... can share an output register with another operation already assigned to main_mem_dual_port_0
  store i32 %547, i32* %545, a... hey can share an input with another operation already assigned to main_mem_dual_port_1
  store i32 %547, i32* %545, a... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %547, i32* %545, a... (idx: 0)        -600                          -1345                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  store i32 %547, i32* %545, a... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  store i32 %547, i32* %545, a... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 136)
State: LEGUP_F_main_BB_lrphi20
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %550 = load i32* %549, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %550 = load i32* %549, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %550 = load i32* %549, align... (idx: 0)        -595                          -1355                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %550 = load i32* %549, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %550 = load i32* %549, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 137)
State: LEGUP_F_main_BB_lrphi20
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep545 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep545 = add i32 %gep_int54... (idx: 0)        -1337                         -1217                         -717                          -677                          -177                          -37                           -117                          -97                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep545 = add i32 %gep_int54... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep545 = add i32 %gep_int54... (idx: 0) -> main_signed_add_32_0 (mux inputs: 136)
State: LEGUP_F_main_BB__552
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %.pre14.i = load i32* %549, ... can share an output register with another operation already assigned to main_mem_dual_port_0
  %.pre14.i = load i32* %549, ... hey can share an input with another operation already assigned to main_mem_dual_port_1
  %.pre14.i = load i32* %549, ... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre14.i = load i32* %549, ... (idx: 0)        -595                          -1360                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %.pre14.i = load i32* %549, ... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %.pre14.i = load i32* %549, ... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 137)
State: LEGUP_F_main_BB__554
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %557 = add nsw i32 %i.19.i19... can share an output register with another operation already assigned to main_signed_add_32_0
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %557 = add nsw i32 %i.19.i19... (idx: 0)        -1355                         -1225                         -724                          -685                          -185                          -44                           -124                          -104                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %557 = add nsw i32 %i.19.i19... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %557 = add nsw i32 %i.19.i19... (idx: 0) -> main_signed_add_32_0 (mux inputs: 137)
State: LEGUP_F_main_BB_preheaderloopexiti17
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_0
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_1
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_2
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_3
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_4
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_5
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_6
  %566 = add nsw i32 %i.28.i21... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %566 = add nsw i32 %i.28.i21... (idx: 0)        -1365                         -1215                         -714                          -675                          -175                          -34                           -114                          -94                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %566 = add nsw i32 %i.28.i21... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %566 = add nsw i32 %i.28.i21... (idx: 0) -> main_signed_add_32_0 (mux inputs: 138)
State: LEGUP_F_main_BB_preheaderloopexiti17
Binding functional unit type: decryptout_dec_statemt_local_mem_dual_port
Weight matrix for operation/function unit matching:
                                                  main_decryptout_dec_statemt_local_mem_dual_port_0
  %562 = load i32* %561, align... (idx: 0)        95                            
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_decryptout_dec_statemt_local_mem_dual_port_0
  %562 = load i32* %561, align... (idx: 0)        1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %562 = load i32* %561, align... (idx: 0) -> main_decryptout_dec_statemt_local_mem_dual_port_0 (mux inputs: 1)
State: LEGUP_F_main_BB_preheaderloopexiti17
Binding functional unit type: mem_dual_port
Weight matrix for operation/function unit matching:
  %560 = load i32* %559, align... can share an output register with another operation already assigned to main_mem_dual_port_0
  %560 = load i32* %559, align... can share an output register with another operation already assigned to main_mem_dual_port_1
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %560 = load i32* %559, align... (idx: 0)        -595                          -1365                         
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_mem_dual_port_0          main_mem_dual_port_1          
  %560 = load i32* %559, align... (idx: 0)        0                             1                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %560 = load i32* %559, align... (idx: 0) -> main_mem_dual_port_1 (mux inputs: 138)
State: LEGUP_F_main_BB_preheaderloopexiti17
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep548 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_7
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_0
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_1
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_2
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_3
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_4
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_5
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_6
  %gep551 = add i32 %gep_int54... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep548 = add i32 %gep_int54... (idx: 0)        -1377                         -1217                         -717                          -677                          -177                          -37                           -117                          -97                           
  %gep551 = add i32 %gep_int54... (idx: 1)        -1379                         -1219                         -719                          -679                          -179                          -39                           -119                          -99                           
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %gep548 = add i32 %gep_int54... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
  %gep551 = add i32 %gep_int54... (idx: 1)        0                             1                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %gep548 = add i32 %gep_int54... (idx: 0) -> main_signed_add_32_0 (mux inputs: 140)
  %gep551 = add i32 %gep_int54... (idx: 1) -> main_signed_add_32_1 (mux inputs: 124)
State: LEGUP_F_main_BB_preheaderloopexiti17
Binding functional unit type: signed_add_32
Weight matrix for operation/function unit matching:
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_0
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_1
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_2
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_3
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_4
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_5
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_6
  %565 = add nsw i32 %564, %55... can share an output register with another operation already assigned to main_signed_add_32_7
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %565 = add nsw i32 %564, %55... (idx: 0)        -1400                         -1240                         -720                          -680                          -180                          -40                           -120                          -100                          
Solving Bipartite Weighted Matching (minimize weights)...
Assignment matrix after operation/function unit matching:
                                                  main_signed_add_32_0          main_signed_add_32_1          main_signed_add_32_2          main_signed_add_32_3          main_signed_add_32_4          main_signed_add_32_5          main_signed_add_32_6          main_signed_add_32_7          
  %565 = add nsw i32 %564, %55... (idx: 0)        1                             0                             0                             0                             0                             0                             0                             0                             
Checking that every operator was assigned to a functional unit...yes
Binding operator -> functional unit assignments:
  %565 = add nsw i32 %564, %55... (idx: 0) -> main_signed_add_32_0 (mux inputs: 142)

